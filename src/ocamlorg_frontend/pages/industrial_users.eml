let render ~(users : Data.Industrial_user.t list) ~success_stories =
Layout.render
~use_swiper:true
~title:"OCaml in Industry"
~description:"With its strong security features and high performance, several \
companies rely on OCaml to keep their data operating both safely and \
efficiently. On this page, you can get an overview of the companies in \
the community and learn more about how they use OCaml."
~canonical:Url.industrial_users @@
<div class="lg:py-12 py-2 intro-section-simple dark:dark-intro-section-simple">
  <div class="container-fluid">
      <div class="flex flex-col lg:flex-row  justify-between space-x-0 lg:space-x-10">
          <div class="">
              <h1 class="font-bold text-title dark:text-dark-title">What Our Users Say About Ocaml</h1>
              <p class="text-content dark:text-dark-content mt-6">Read our success stories to learn how OCaml helped our users achieve their goals.</p>
          </div>
      </div>
    
  </div>
</div>
<div class="bg-background dark:bg-dark-background py-16">
  <div class="container-fluid">
    <h2 class="font-bold text-title dark:text-dark-title">Trusted by Industry Leaders</h2>
    <div class="text-content dark:text-dark-title text-base mt-3">
      These companies and organizations rely on OCaml every day — along with thousands of other developers.
    </div>
    <div class="flex flex-row gap-4 flex-wrap pt-4 items-center">
% let reference ~title ~logo class_ =
<div class="dark:bg-dark-white flex items-center px-6 rounded-md h-20">
    <img class="<%s class_ %>" src="<%s logo %>" alt="<%s title %>">
</div>
% in
% reference ~title:"Facebook" ~logo:(Ocamlorg_static.Asset.url "logos/facebook.svg") "h-6";
% reference ~title:"Microsoft" ~logo:(Ocamlorg_static.Asset.url "logos/microsoft.svg") "h-7";
% reference ~title:"Docker" ~logo:(Ocamlorg_static.Asset.url "logos/docker.svg") "h-8";
% reference ~title:"Jane Street" ~logo:(Ocamlorg_static.Asset.url "logos/janestreet.svg") "h-8";
% reference ~title:"Bloomberg" ~logo:(Ocamlorg_static.Asset.url "logos/bloomberg.svg") "h-6";
% reference ~title:"Tezos" ~logo:(Ocamlorg_static.Asset.url "logos/tezos.svg") "h-10";
% reference ~title:"Ahrefs" ~logo:(Ocamlorg_static.Asset.url "logos/ahrefs.svg") "h-6";
    </div>
  </div>
</div>
<div class="intro-section-simple dark:dark-section-navigation">
  <div class="container-fluid">
      <div class="mt-6 lg:mt-0">
          <h2 class="font-bold mb-6 text-title dark:text-dark-title">Case Studies</h2>
          <p class="text-content dark:text-dark-content">
              Read how OCaml users are solving real-world problems and how OCaml was a key to their success.
          </p>
      </div>

      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-4 mt-8 lg:mt-12">
        <% success_stories |> List.iter (fun (item : Data.Success_story.t) ->
        let logo = Ocamlorg_static.Media.url item.logo in
        let background_class = match item.theme with
        | "cyan" -> "bg-cyan-600"
        | "orange" -> "bg-orange-600"
        | "blue" -> "bg-blue-600"
        | "green" -> "bg-green-600"
        | _ -> "bg-gray-600"
        in %>
        <div class="flex flex-col">
          <a href="<%s Url.success_story item.slug %>" class="group text-base text-white dark:text-dark-white p-4 relative bg-cover h-[14.5rem]">
            <div class="flex flex-col justify-between h-full relative z-10 text-white dark:text-dark-white">
                <div class="h-8"><img class="h-full" src="<%s logo %>" alt=""></div>
               
                    <div class="opacity-0 transition-opacity flex space-x-3 items-center font-semibold group-hover:opacity-100">
                        <span>Read full case study</span>
                        <%s! Icons.chevron_right "h-5 w-5" %>
                    </div>
                
            </div>
         
            <div class="<%s background_class %> absolute left-0 top-0 w-full h-full opacity-40 z-[2]"></div>
            <div class="absolute left-0 top-0 transition-transform transform ease-in-out w-full h-full bg-cover duration-300 z-[1]" style="background-image: url('<%s Ocamlorg_static.Media.url item.background %>');"></div>
        </a>
        <h4 class="text-title text-sm dark:text-dark-title mt-2">
            <%s item.title %>
        </h4>
        </div>
        <% ); %>
      </div>
       <div class="prose dark:prose-invert max-w-none mt-8">
    If you want to contribute to a new success story, check out the <a href="https://github.com/ocaml/ocaml.org/blob/main/CONTRIBUTING.md#content-success-story" target="_blank">Contributing Guide</a> on GitHub.
</div>
  </div>
</div>
<div class="py-8 bg-sand dark:bg-dark-background">
  <div
  class="container-fluid overflow-hidden"
  x-data="{swiper: null}"
  x-init="swiper = new Swiper($refs.container, {loop: true,slidesPerView: 1,spaceBetween: 0,breakpoints: {640: {slidesPerView:1,
          spaceBetween: 0,},768: {slidesPerView: 2,spaceBetween: 0,},1024: {slidesPerView: 3,
          spaceBetween: 0,},},})">
  <div class="container-fluid">
    <div>
      <h2 class="font-bold mb-4 md:mb-6 text-title dark:text-dark-title">Testimonials</h2>
      <div class="text-content dark:text-dark-content">Read What Some Industry Users Say About OCaml.</div>
    </div>
    <div class="swiper-container" x-ref="container">
      <div class="swiper-wrapper mt-6">
% let testimonial ~href ~logo ~person ~role testimonial =
<a href="<%s href %>" class="swiper-slide p-4">
  <div class="overflow-hidden">
    <div class="flex place-content-center dark:bg-dark-white h-20 w-36 p-4 rounded-md mb-2">
      <img class="max-h-full max-w-full" src="<%s logo %>" class="h-8" alt="">
    </div>
    <div class="mb-4 text-content dark:text-dark-content text-sm"><%s testimonial %></div>
    <div class="font-bold text-content dark:text-dark-content mb-6"><%s person %></div>
    <div class="text-content dark:text-dark-content"><%s role %></div>
  </div>
</a>
% in
% testimonial ~href:"https://rescript-lang.org/" ~logo:(Ocamlorg_static.Asset.url "logos/rescript.svg")
%             ~person:"Bob Zhang" ~role:"Maintainer, ReScript."
%             "Thanks to the OCaml team, obviously, without such a beautiful yet practical language, this project would not exist. The original type system was inherited from it with lots of modifications to fit with JS ecosystem better.";

% testimonial ~href:"https://www.janestreet.com/" ~logo:(Ocamlorg_static.Asset.url "logos/janestreet.svg")
%             ~person:"Yaron Minsky" ~role:"CTO, Jane Street."
%             "OCaml helps us to quickly adapt to changing market conditions and go from prototypes to production systems with less effort ... Billions of dollars of transactions flow through our systems every day, so getting it right matters.";

% testimonial ~href:"https://ahrefs.com/" ~logo:(Ocamlorg_static.Asset.url "logos/ahrefs.svg")
%             ~person:"Oleksiy Golovko" ~role:"Backend Developer, Ahrefs."
%             "OCaml as the development environment acts as a very much trusted partner throughout the whole development process. As our requirements evolve, we change the implementation a lot, and this is where the language shines. Literally, I am not afraid to change others’ code when OCaml has my back!";

% testimonial ~href:"https://www.marigold.dev" ~logo:"https://uploads-ssl.webflow.com/616ab4741d375d1642c19027/61793ee65c891c190fcaa1d0_Vector(1).png"
%             ~person:"Xavier Van de Woestyne" ~role:"Software engineer, Marigold."
%             "Using OCaml as a programming language to write software has many benefits. For instance, it is able to describe the source code in an easy and understandable manner. The fear of refactoring in the source code can be eased as well. OCaml has a mature and very evolving ecosystem, which is a large, supportive and friendly community.";

% testimonial ~href:"https://twitter.com/jack/status/47090747706580992" ~logo:(Ocamlorg_static.Asset.url "logos/old-twitter-logo.svg")
%             ~person:"Jack Dorsey" ~role:"Founder, Twitter."
%             "Originally I was going to program twttr in Python, C, & Ocaml. But, I got @florian who was a core contributor to Ruby on Rails.";
      </div>
    </div>
    <div class="flex space-x-4">
    <button aria-label="Previous" class="text-primary dark:text-dark-primary rounded-full py-4 px-4 hover:bg-primary_25 dark:hover:bg-dark-card_hover transition duration-300" @click="swiper.slidePrev()">
        <%s! Icons.chevron_left "h-5 w-5" %>
    </button>
    <button aria-label="Next" class="text-primary dark:text-dark-primary rounded-full py-4 px-4 hover:bg-primary_25 dark:hover:bg-dark-card_hover transition duration-300" @click="swiper.slideNext()">
        <%s! Icons.chevron_right "h-5 w-5" %>
    </button>
    </div>
  </div>
  </div>
</div>
<div class="py-5 md:py-10 md:pb-16 bg-background dark:bg-dark-background_navigation">
  <div class="container-fluid">
    <div class="">
      <h2 class="font-bold mb-6 text-title dark:text-dark-title">Other Industry Users of OCaml</h2>
      <p class="text-content dark:text-dark-content">With its strong security features and high performance, several companies rely on OCaml to keep<br> their data operating both safely and efficiently. On this page, you can get an overview of the<br> companies in the community and learn more about how they use OCaml.</p>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-7 relative text-center bg-background dark:bg-dark-background_navigation mt-10 gap-3">
      <% users |> List.iter (fun (item : Data.Industrial_user.t) -> let logo = match item.logo with | Some x -> Ocamlorg_static.Media.url x | None -> "" in %>
      <a href="<%s item.url %>" target="_blank" class="p-4 h-full card dark:dark-inverted-card flex items-center flex-col">
          <img src="<%s logo %>" class="m-auto max-h-16" alt="<%s item.name %> logo">
      </a>
      <% ); %>
    </div>
    <div class="prose dark:prose-invert max-w-none my-3 mx-2">
        If you want to contribute to add a new industrial user, check out the <a href="https://github.com/ocaml/ocaml.org/blob/main/CONTRIBUTING.md#content-user" target="_blank">Contributing Guide</a> on GitHub.
  </div>
  </div>
</div>
<div class="intro-section-simple dark:dark-intro-section-simple lg:py-12 py-8 border-t border-separator_20 dark:border-dark-primary_30">
  <div class="container-fluid">
      <div class="">
        <h2 class="font-bold text-title dark:text-dark-title mb-4">Industrial Resources</h2>
        <div class="text-content dark:text-dark-content mb-8">Here are some of the resources that may be helpful to you.</div>
      </div>
      <div class="grid lg:grid-cols-3 gap-8 lg:gap-8">
        <a href="<%s Url.install %>" class="card dark:dark-card p-4">
           <div class="flex pb-2">
            <%s! Icons.play_circle "w-6 text-primary dark:text-dark-primary" %>
            <p class="font-bold text-base text-title dark:text-dark-title ml-2">Getting Started</p>
           </div>
          <p class="text-content dark:text-dark-content">Install OCaml, setup your favorite text editor, and start your first project.</p>
        </a>
        <a href="<%s Url.api %>" class="card dark:dark-card p-4">
          <div class="flex pb-2">
            <%s! Icons.command_line "w-6 text-primary dark:text-dark-primary" %>
            <p class="font-bold text-base text-title dark:text-dark-title ml-2">Standard Library</p>
          </div>
          <p class="text-content dark:text-dark-content">Read the standard library documentation and search its API for functions.</p>
        </a>
        <a href="<%s Url.books %>" class="card dark:dark-card p-4">
          <div class="flex pb-2">
            <%s! Icons.book "w-6 text-primary dark:text-dark-primary" %>
            <p class="font-bold text-base text-title dark:text-dark-title ml-2">Books</p>
          </div>
          <p class="text-content dark:text-dark-content">What expert programmers and researchers are saying about OCaml, from the beginner level to the more advanced topics.</p>
        </a>
      </div>
  </div>
</div>
<script>
  function videoFullWidth() {
      return {
          isPlaying: false,
          embed_url: "https://watch.ocaml.org/videos/embed/e1ee0fc0-50ef-4a1c-894a-17df181424cb",
          iframe_param: "?autoplay=1&mute=1",
          iframe_url() {
              return this.embed_url + this.iframe_param;
          }
      };
  }
</script>
