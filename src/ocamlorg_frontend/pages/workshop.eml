let render ~(videos : (string, Data.Watch.t) Hashtbl.t) (workshop : Data.Workshop.t) =
Layout.render
~title:workshop.title
~description:(Printf.sprintf "A description of the workshop %s held on %s" workshop.title workshop.date)
~canonical:(Url.workshop workshop.slug)
~active_top_nav_item:Header.Community @@
<div class="intro-section-simple dark:dark-intro-section-simple"">
  <div class="container-fluid">
    <div class="flex flex-col lg:flex-row justify-between items-center">
      <div>
        <h1 class="font-bold mb-6 text-title dark:text-dark-title"><%s workshop.title %></h1>
        <div class="text-content dark:text-dark-content"><%s workshop.date %><br><%s match workshop.location with | "Virtual" -> "Held virtually" | location -> location %></div>
      </div>
    </div>
  </div>
</div>
<div class="bg-background dark:bg-dark-background">
    <div class="container-fluid">
      <div class="flex flex-col md:flex-row justify-between my-8">
        <div class="prose dark:prose-invert prose-orange pt-8">
          <%s! workshop.body_html %>
        </div>
        <div class="flex flex-col space-y-6 relative">
          <div class="absolute h-full pt-14 pb-5 lg:pt-11 lg:pb-4 ml-2 lg:ml-0 left-20 lg:left-32 -l-x">
            <div class="-ml-px w-1 border-dashed border-r-2 border-primary_40 dark:border-dark-primary_40 h-full"></div>
          </div>
          <% let seen_upcoming = ref false in
          workshop.important_dates |> List.iter (fun (date : Data.Workshop.important_date) ->
          match date.date > Utils.current_date with
          | true when not !seen_upcoming -> (
          seen_upcoming := true; %>
          <div class="flex items-center">
            <div class="text-primary dark:text-dark-primary font-semibold w-10 lg:w-20 text-right"><%s Utils.human_date date.date %></div>
            <div class="bg-primary dark:bg-dark-primary h-5 w-5 rounded-full"></div>
            <div class="bg-primary dark:bg-dark-primary flex-1 rounded-xl text-title dark:text-dark-title px-4 py-2 flex items-center">
              <div>
                <div class="text-xs font-semibold">UPCOMING</div>
                <div><%s date.info %></div>
              </div>
            </div>
          </div>
          <% ) | _ -> %>
          <div class="flex items-center space-x-10">
            <div class="text-primary dark:text-dark-primary font-semibold w-10 lg:w-20 text-right">
            <%s Utils.human_date date.date %></div>
            <div class="bg-primary dark:bg-dark-primary h-5 w-5 rounded-full"></div>
            <div class="flex-1 py-3 items-center flex">
              <span class="text-title dark:text-dark-title"><%s date.info %></span>
            </div>
          </div>
          <% ); %>
        </div>
      </div>
      <div class="bg-background dark:bg-dark-background max-w-none my-16">
        <h2 class="mb-4 text-title dark:text-dark-title">All Presentations</h2>
        <% (match List.length workshop.presentations with | 0 -> %>
        <p>No presentations yet.</p>
        <% | _ -> %>
        <div class="not-prose overflow-x-scroll">
          <table class="max-w-5xl lg:max-w-full">
            <thead class="text-title dark:text-dark-title text-left rounded-xl">
              <tr>
                <th class="py-4 px-6 rounded-l-lg text-x w-2/5">Title</th>
                <th class="py-4 px-6 w-2/5">Authors</th>
                <th class="py-4 px-6 w-1/5 rounded-r-lg">Resources</th>
              </tr>
            </thead>
            <tbody class="even:bg-gray-50 dark:bg-dark-background">
              <% workshop.presentations |> List.iter (fun (presentation : Data.Workshop.presentation) -> %>
              <tr>
                <td class="py-4 px-6 font-semibold text-content dark:text-dark-content"><%s presentation.title %></td>
                <td class="py-4 px-6 font-medium text-content dark:text-dark-content"><%s Fmt.(str "%a" (list ~sep:comma string) presentation.authors) %></td>
                <td class="py-4 px-6 flex flex-col justify-between h-24">
                  <% (match presentation.link with None -> () | Some link -> %>
                  <a href="<%s link %>" class="text-primary dark:text-dark-primary font-medium block ml-8 dark:hover:text-dark-title"> <%s! Icons.link "h-5 w-5" %> </a>
                  <% ); %>

                  <% (match presentation.video with None -> () | Some link -> %>
                  <a href="<%s link %>" class="text-primary dark:text-dark-primary font-medium block ml-8 dark:hover:text-dark-title"> <%s! Icons.video "h-6 w-6" %> </a>
                  <% ); %>

                  <% (match presentation.slides with None -> () | Some link -> %>
                  <a href="<%s link %>" class="text-primary dark:text-dark-primary font-medium block ml-8 dark:hover:text-dark-title"> <%s! Icons.slide "h-6 w-6" %> </a>
                  <% ); %>
                </td>
              </tr>
              <% ); %>
            </tbody>
          </table>
        </div>
        <% ); %>
      </div>
    </div>
</div>
<div class="w-full deep-blue-gradient dark:dark-deep-blue-gradient">
  <div class="container-fluid">
    <div class="text-white dark:text-dark-title py-16">
      <h2 class="text-sm font-bold text-white dark:text-dark-white opacity-60 mb-4 tracking-widest">Workshop Details</h2>
      <div>
        <% (match List.length workshop.organising_committee with | 0 -> () | _ -> %>
        <h5 class="font-bold text-xl text-white dark:text-dark-white mb-4">Organising Committee</h5>
        <div class="flex flex-wrap justify-center space-x-12">
          <% 
          let committee_with_pictures = List.filter (fun (x : Data.Workshop.committee_member) -> Option.is_some x.picture) workshop.organising_committee in
          let committee_without_pictures = List.filter (fun (x : Data.Workshop.committee_member) -> Option.is_none x.picture) workshop.organising_committee in
          let names = List.map (fun (x : Data.Workshop.committee_member) -> match x.affiliation with None -> x.name | Some affiliation -> Printf.sprintf "%s (%s)" x.name affiliation) committee_without_pictures in
          committee_with_pictures |> List.iter (fun (member : Data.Workshop.committee_member) -> %>
          <div href="" class="mt-12">
            <img src="<%s Option.get member.picture %>" width="148px" class="m-auto h-auto rounded-lg" alt="" />
            <div class="font-medium mt-3"><%s member.name %></div>
            <% (match member.affiliation with None -> () | Some affiliation -> %>
            <div class="text-sm mt-1"><%s affiliation %></div>
            <% ); %>
          </div>
          <% ); %>
        </div>
        <% (match names with [] -> () | _ -> %>
        <div class="mt-8"><%s Fmt.(str "%a" (list ~sep:comma string) names) %></div>
        <% ); %> <% ); %>
      </div>
      <div class="mt-4">
        <h5 class="font-bold text-white dark:text-dark-white text-xl">Program Committee</h5>
        <div class="flex flex-wrap justify-center space-x-12">
          <% 
          let committee_with_pictures = List.filter (fun (x : Data.Workshop.committee_member) -> Option.is_some x.picture) workshop.program_committee in
          let committee_without_pictures = List.filter (fun (x : Data.Workshop.committee_member) -> Option.is_none x.picture) workshop.program_committee in
          let names = List.map (fun (x : Data.Workshop.committee_member) -> match x.affiliation with None -> x.name | Some affiliation -> Printf.sprintf "%s (%s)" x.name affiliation) committee_without_pictures in
          committee_with_pictures |> List.iter (fun (member : Data.Workshop.committee_member) -> %>
          <div href="" class="mt-12">
            <img src="<%s Option.get member.picture %>" width="148px" class="m-auto h-auto rounded-lg" alt="" />
            <div class="font-medium mt-3"><%s member.name %></div>
            <% (match member.affiliation with None -> () | Some affiliation -> %>
            <div class="text-sm mt-1"><%s affiliation %></div>
            <% ); %>
          </div>
          <% ); %>
        </div>
        <% (match names with [] -> () | _ -> %>
        <div class="mt-2 text-white dark:text-dark-white"><%s Fmt.(str "%a" (list ~sep:comma string) names) %></div>
        <% ); %>
      </div>
    </div>
  </div>
</div>
<% let videos = List.filter_map (fun (p : Data.Workshop.presentation) -> Hashtbl.find_opt videos p.title)
workshop.presentations in (match List.length videos with | 0 -> () | _ -> %>
<div class="bg-background dark:bg-dark-background py-16">
  <div class="container-fluid">
    <h3 class="font-bold mb-12 text-title dark:text-dark-title">Some Videos</h3>
    <div class="grid lg:grid-cols-3 gap-14">
      <% let videos = List.filteri (fun i _ -> i < 6) videos in videos |> List.iter (fun (video : Data.Watch.t) -> %>
      <div class="inline-block">
        <iframe
          loading="lazy"
          class="w-full"
          sandbox="allow-scripts allow-popups"
          src="https://watch.ocaml.org<%s video.embed_path %>"
          allowfullscreen
        ></iframe>
        <h6 class="font-bold mt-4 text-title dark:text-dark-title"><%s video.name %></h6>
        <div class="mt-4 text-content dark:text-dark-content"><%s Option.value ~default:"" video.description %></div>
      </div>
      <% ); %>
    </div>
    <div class="flex justify-end mt-12">
      <a href="https://watch.ocaml.org" target="_blank" class="btn btn-ghost w-full md:w-auto">
        More videos at watch.ocaml.org
        <%s! Icons.chevron_right "h-5 w-5 inline-block" %>
      </a>
    </div>
  </div>
</div>
<% ); %>
