let render () =
Layout.render
~turbo_full_reload:true
~playground:true
~title:"???"
~description:"???" @@
<div>


    <div class="flex code-editor">
        <div class="hidden md:flex lg:flex-1 flex-col justify-center md:w-3/5">
            <div class="bg-code-background w-full relative h-full ">
               <textarea id="editor1">open Lwt.Syntax
module Store = Irmin_mem.KV (Irmin.Contents.String)

(* Database configuration *)
let config = Irmin_mem.config ()

(* Commit author *)
let author =  "Example <example@example.com>"

(* Commit information *)
let info fmt () = Irmin.info.v ~date:0L ~author fmt

let main () =
    (* Open the repo *)
    let repo () = Store.Repo.v config in

    (* Load the main branch *)
    let t () = Store.master repo in

    (* Set key "foo/bar" to "testing 123" *)
    let* () =
        Store.set_exn t ~info:(info "Updating foo/bar") [ "foo"; "bar" ]
            "testing 123"
    in</textarea>
                <div class="bg-code-background shadow-[inset_0px_1px_0px_rgba(255,255,255,0.1)] p-4 absolute w-full bottom-0 z-10">
                <div class="flex w-full justify-end items-center px-4">
                  <button class="mr-7 hover:bg-white hover:bg-opacity-10 p-2 rounded-md"><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="" viewBox="0 0 24 24" stroke="rgba(255, 255, 255, 0.6)">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12" />
                  </svg></button>
                  <button class="btn btn-md btn-secondary">
                      <span>Run</span>
                      <span>⌘⏎</span>
                  </button>
                </div>
            </div>
            </div>

      </div>
      <div class="output-bg w-full min-h-full relative md:w-2/5"   x-data="{ output: true, problems: false, editor: window.innerWidth < 767,mobile: window.innerWidth < 767 }"
      @resize.window="
        mobile = window.innerWidth < 767;
       if(window.innerWidth < 767 && mobile == true  ){
        editor = true;
      }
       if(window.innerWidth > 767 && editor == true ){
         editor = false;
         output = true;
         problems = false;
       }
      ">
        <div class="flex text-white shadow-[inset_0px_1px_0px_rgba(255,255,255,0.1)">
          <button class="md:hidden" :class="editor && mobile ? 'text-primary-600 border-b-2 border-primary-600' : ''"
          @click="editor = true; mobile=true; output = false;  problems = false;" class="border-b-2 border-transparent">
            <div class="p-4 block"
            >Editor</div>
          </button>
          <button :class="output && !mobile ? 'text-primary-600 border-b-2 border-primary-600' : ''"
          @click="output = true;mobile=false; problems = false; editor = false;" class="border-b-2 border-transparent">
          <div  class="p-4 block"
            >Output</div>
          </button>
          <button :class="problems && !mobile ? 'text-primary-600 border-b-2 border-primary-600' : ''"
          @click="problems = true; output = false;mobile=false;  editor = false;" class="border-b-2 border-transparent">
            <div class="p-4 relative flex items-center"
            >Problems<span class="bg-red-500 text-white rounded-full h-5 w-5 block text-center text-sm ml-2">2</span ></div>
          </button>

        </div>
        <div class=" shadow-[inset_0px_1px_0px_rgba(255,255,255,0.1)] output-container overflow-auto">
            <div class="flex-col overflow-auto p-4 text-white"
            x-show="output && !mobile">
              <p>=foo/bar => 'dsa 123'</p>
              <p>123123123 foo/bar => '123123123 123'</p>
            </div>
            <div class="flex-col overflow-auto p-4 text-white"
            x-show="problems && !mobile">
              <p>123123123 foo/bar => '123123123 123'</p>
              <p>=foo/bar => 'dsa 123'</p>
            </div>
            <div class="md:hidden bg-code-background overflow-auto w-full relative h-full"
            x-show="editor && mobile">
                    <textarea id="editor">open Lwt.Syntax
module Store = Irmin_mem.KV (Irmin.Contents.String)

(* Database configuration *)
let config = Irmin_mem.config ()

(* Commit author *)
let author =  "Example <example@example.com>"

(* Commit information *)
let info fmt () = Irmin.info.v ~date:0L ~author fmt

let main () =
    (* Open the repo *)
    let repo () = Store.Repo.v config in

    (* Load the main branch *)
    let t () = Store.master repo in

    (* Set key "foo/bar" to "testing 123" *)
    let* () =
        Store.set_exn t ~info:(info "Updating foo/bar") [ "foo"; "bar" ]
            "testing 123"
    in</textarea>
                </div>
                <div class="md:hidden bg-code-background shadow-[inset_0px_1px_0px_rgba(255,255,255,0.1)] p-4 absolute w-full bottom-0 z-10" x-show="editor">
                    <div class="flex w-full justify-end items-center">
                      <button class="mr-7"><svg  xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="" viewBox="0 0 24 24" stroke="rgba(255, 255, 255, 0.6)">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12" />
                      </svg></button>
                      <button class="btn btn-md btn-secondary">
                          <span>Run</span>
                          <span>⌘⏎</span>
                      </button>
                    </div>
                </div>
                  </div>
        </div>
    </div>
</div>
<script>
window.onload = () => {
var editor = CodeMirror.fromTextArea(document.getElementById('editor'),{
      lineNumbers: true,
      theme: "lesser-dark",
      autoRefresh: true
    });
    var editor1 = CodeMirror.fromTextArea(document.getElementById('editor1'),{
      lineNumbers: true,
      theme: "lesser-dark",
      autoRefresh: true
    });

    window.addEventListener('resize', function(event) {
      editor1.refresh();
      editor.refresh();
}, true);
}

</script>
