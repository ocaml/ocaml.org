module MemberSet = Set.Make (Data.Governance.Member)

let count_members (team : Data.Governance.team) =
   MemberSet.cardinal (MemberSet.of_list (team.members @ List.concat (List.map (fun (team : Data.Governance.team) -> team.members) team.subteams)))

let render_work_group_card (team : Data.Governance.team) member_label btn_class =
  <div class="flex-col">
    <div class="text-2xl mb-2 font-semibold flex items-cente text-white dark:text-dark-title">
      <span><%s team.name %></span>
    </div>
    <div class="mb-2 text-white dark:text-dark-title"><%s team.description %></div>
    <div class="font-semibold mb-3 text-white dark:text-dark-title"><%i count_members team %> <%s member_label %></div>
    <a href="<%s Url.governance_team team.id %>" class="rounded bg-primary border border-primary font-normal text-lg text-white whitespace-nowrap transition-colors inline-flex items-center justify-center space-x-3 dark:border-dark-primary dark:bg-dark-primary dark:text-dark-white px-4 py-2 <%s btn_class %>">
      <span>Details</span>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24"
        stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </a>
  </div>

let render_team_card (team: Data.Governance.team) member_label = 
  <div class="flex-col card dark:dark-card p-5 rounded-xl">
    <p class="text-title dark:text-dark-title text-lg mb-5"><%s team.name %></p>
    <p class="text-content dark:text-dark-content text-base mb-5"><%s team.description %></p>
    <p class="text-content dark:text-dark-content text-base font-bold mb-5"><%i count_members team %> <%s member_label %></p>
    <a href="<%s Url.governance_team team.id %>" class="flex gap-2 items-center text-sm text-primary hover:text-primary dark:text-dark-title dark:hover:text-dark-primary">
      Details
      <%s! Icons.arrow_right_circle "h-5 w-5" %>
    </a>
  </div>

let render ~teams ~working_groups =
Layout.render
~title:"Governance"
~description:"OCaml is a mature, statically-typed, functional programming language. Learn more about its rich history
and what makes it unique." @@
<div class="w-full border-b intro-section-simple dark:dark-intro-section-simple md:bg-transparent dark:border-none md:bg-[length:cover] py-16 md:bg-[url('/img/governance/hero-background.png')] dark:md:bg-[url('/img/governance/dark-hero-background.png')]">
  <div class="container-fluid">
      <div class="flex md:flex-row flex-col">
        <div class="w-full m-auto mb-4 md:mb-0">
          <h1 class="font-bold mb-2 text-title dark:text-dark-title">Governance</h1>
          <p class="text-content dark:text-dark-content">The projects running under OCaml and the awesome people behind it.
          </p>
        </div> 
        <div class="flex h-max flex-col lg:flex-row lg:space-x-6 space-y-5 lg:space-y-0 md:space-y-5 w-full lg:w-auto mt-8 md:mt-0">
        <%s!  Hero_section.hero_button ~left_icon:(Icons.book "w-5 h-5") ~right_icon:("") ~text:("Read the Governance Policy") ~href:("https://ocaml.org/policies/governance") %>
       </div>
      </div>
  </div>
</div>
<div class="container-fluid py-10">
  <h2 class="font-bold text-2xl mb-2 text-title dark:text-dark-title">Teams</h2>
  <p class="text-lg text-content dark:text-dark-content">See who the maintainers of the various OCaml projects are. We present a comprehensive list structured by project / purpose</p>
  <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mt-16">
    <% teams |> List.iter (fun (team : Data.Governance.team) -> %>
    <%s! render_team_card team "maintainers" %>
    <% );%>
  </div>
</div>
<div class="w-full governance-blue-gradient dark:dark-governance-blue-gradient">
  <div class="container-fluid flex justify-between items-center py-7 px-8">
      <div class="flex flex-col w-full">
        <div class="md:max-w-[80%]">
          <h2 class="font-bold text-2xl text-white dark:text-dark-title mb-2">Working groups</h2>
          <p class="text-white dark:text-dark-title mb-12">Working groups are community initiatives that gather around certain topics or a shared purpose. The <a class="underline font-bold" href="<%s Url.governance_policy %>">OCaml Governance Policy</a> does not apply to them. Participation is welcome and encouraged.</p>
        </div>
        <div>
          <% working_groups |> List.iter (fun (wg : Data.Governance.team) -> %>
          <%s! render_work_group_card wg "organiser(s)" "bg-transparent border border-white dark:border-dark-white dark:bg-transparent text-white dark:text-dark-white;" %>
          <% ); %>
        </div>
      </div>
      <div class="hidden md:flex  h-[15rem] mr-16 w-[30%] md:w-[60%]">
          <img class="" src="<%s! Ocamlorg_static.Asset.url "img/governance/circle_image.png" %>" alt="camel head illustration">
      </div>
  </div>
</div>