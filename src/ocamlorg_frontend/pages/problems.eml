let problems_sidebar
~problems
=
let open Ood in
let render_problem_link (problem : Problem.t) =
  let href = "#" ^ problem.number in
  Learn_layout.sidebar_link ~title:problem.title ~href ~current:false
in
let problem_sidebar_links_by_tag ?tag title =
  <%s! Learn_layout.sidebar_link_group title
    (Problem.filter_tag ?tag problems |> List.fold_left (fun a b -> a ^ render_problem_link b) "")
  %>
in
  <%s! Learn_layout.sidebar_icon_link_block ~current:Exercises %>

  <%s! problem_sidebar_links_by_tag ~tag:"list" "Lists" %>
  <%s! problem_sidebar_links_by_tag ~tag:"arithmetic" "Arithmetic" %>
  <%s! problem_sidebar_links_by_tag ~tag:"logic" "Logic and Codes" %>
  <%s! problem_sidebar_links_by_tag ~tag:"binary-tree" "Binary Trees" %>
  <%s! problem_sidebar_links_by_tag ~tag:"multiway-tree" "Multiway Trees" %>
  <%s! problem_sidebar_links_by_tag ~tag:"graph" "Graphs" %>
  <%s! problem_sidebar_links_by_tag "Miscellaneous" %>

let danger = function
  | `Beginner -> ""
  | `Intermediate -> "☡"
  | `Advanced -> "☡☡"

let render
(problems : Ood.Problem.t list)
=
Learn_layout.render
~title:"Exercises"
~description:"A list of exercises to work on your OCaml skills."
~canonical:Url.problems
~active_top_nav_item:Header.Learn
~left_sidebar_html:(problems_sidebar ~problems)
~right_sidebar_html:None @@
  <div class="prose prose-orange max-w-full overflow-hidden">
    <h1 class="font-bold mb-8">Exercises</h1>
    <div class="prose prose-orange max-w-full mb-5">
      <p>
        This section is inspired by
        <a href="https://www.ic.unicamp.br/~meidanis/courses/mc336/2006s2/funcional/L-99_Ninety-Nine_Lisp_Problems.html">
          Ninety-Nine Lisp Problems</a>
        which in turn was based on “<a href="https://sites.google.com/site/prologsite/prolog-problems/">Prolog problem
          list</a>” by Werner Hett. For
        each of these questions, some simple tests are shown—they may also serve
        to make the question clearer if needed. To work on these problems, we
        recommend you first <a href="<%s Url.getting_started %>">install OCaml</a> or use it <a
          href="<%s Url.playground %>">inside
          your browser</a>. The source of the following
        problems is available on
        <a href="https://github.com/ocaml/ocaml.org/tree/main/data/problems">GitHub</a>.
      </p>
      <p>
        Every exercise has a difficulty level, ranging from beginner to advanced.
        This difficulty level is indicated with the symbol "☡".
        The absence of marks represents the beginner level, one mark the intermediate level and two marks the advanced level.
      </p>
    </div>
    <% problems |> List.iter (fun (problem : Ood.Problem.t) -> %>
    <div x-data="{statement: true}" id="<%s" problem.number %>
      >
      <div class="flex space-y-4 lg:space-y-0 flex-col lg:flex-row lg:justify-between">
        <span aria-hidden="true" class="danger invisible lg:visible" title="<%s Ood.Problem.difficulty_to_string problem.difficulty ^ " difficulty" %>"><%s danger problem.difficulty %></span>
        <h4 class="font-bold text-body-600">
          <%s problem.title %>
          <span aria-hidden="true" class="ml-2 visible lg:invisible" title="<%s Ood.Problem.difficulty_to_string problem.difficulty ^ " difficulty" %>"> <%s danger problem.difficulty %></span>
        </h4>
        <div class="w-0 h-0 overflow-hidden"><%s Ood.Problem.difficulty_to_string problem.difficulty ^ " difficulty" %></div>
        <div class="flex bg-body-600 bg-opacity-5 rounded-md p-1 items-center">
          <button
            class="px-3.5 h-9 font-medium flex space-x-2 items-center rounded-lg"
            x-on:click="statement = true"
            :class="statement ? 'bg-white text-primary-600': 'text-body-400' "
          >
            <%s! Icons.problem_statement "h-5 w-5" %>
            <span :class="statement ? 'text-body-600' : 'text-body-400'">Statement</span>
          </button>
          <button
            class="px-3.5 h-9 font-medium flex space-x-2 items-center rounded-lg"
            x-on:click="statement = false"
            :class="statement ? 'text-body-400': 'bg-white text-primary-600' "
          >
            <%s! Icons.problem_solution "h-5 w-5" %>
            <span :class="statement ? 'text-body-400' : 'text-body-600'">Solution</span>
          </button>
        </div>
      </div>

      <div x-show="statement"><%s! problem.statement %></div>

      <div x-show="!statement"><%s! problem.solution %></div>
    </div>
    <div class="border-t border-gray-200 my-12"></div>
    <% ); %>
  </div>
