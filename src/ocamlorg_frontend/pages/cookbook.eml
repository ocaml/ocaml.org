let render_recipe (recipe: Data.Cookbook.t) =
  <a aria-label="<%s Data.Cookbook.full_title_of_recipe recipe %>" href="<%s Url.cookbook_recipe ~task_slug:recipe.task.slug recipe.slug %>"
    class="flex gap-2 px-4 py-2 underline hover:no-underline text-title dark:text-dark-title">
    <%s! Icons.document "w-6 h-6" %> using <%s Data.Cookbook.main_package_of_recipe recipe %>
  </a>
  <div class="flex flex-wrap gap-2 items-center">
  <%s if List.length recipe.packages = 0 then "-" else "" %>
  <% recipe.packages |> List.iter (fun (package: Data.Cookbook.package) -> %>
    <a class="tag" href="<%s Url.Package.overview ~version:package.version package.name %>"><%s package.name %>.<%s package.version %></a>
  <% ); %>
  </div>

let render_task (task: Data.Cookbook.task) =
  let recipes = Data.Cookbook.get_by_task ~task_slug:task.slug in
  <a href="<%s Url.cookbook_task task.slug %>"
     class="col-span-2 px-4 py-2 text-title font-semibold dark:text-dark-title underline">
    <%s task.title %>
  </a>
  <% (match recipes with | [] -> %>
    <p class="col-span-2 px-4 py-2 text-content dark:text-dark-content">
      This task has no recipes yet, maybe you want to
        <a target="_blank" class="text-primary dark:text-dark-title underline"
        href="https://github.com/ocaml/ocaml.org/blob/main/CONTRIBUTING.md#content-cookbook">contribute a recipe</a>!
    </p>  
  <% | _ -> %>
    <% recipes |> List.iter (fun (recipe: Data.Cookbook.t) -> %>
      <%s! render_recipe recipe %>
    <% ); %>
  <% ); %>

let rec render_category ?(level=2) (category: Data.Cookbook.category) =
  <div class="max-w-4xl">
    <div class="prose dark:prose-invert">
      <h<%s string_of_int level %> class="font-semibold my-6"><%s category.title %></h<%s string_of_int level %>>
      <% let tasks = Data.Cookbook.get_tasks_by_category ~category_slug:category.slug in %>
% if tasks = [] && category.subcategories = [] then (
      <p>There's nothing in this category yet.
      </p>
% );
    </div>
% if category.subcategories <> [] then (
    <% category.subcategories |> List.iter (fun (category: Data.Cookbook.category) -> %>
    <%s! render_category ~level:(level+1) category %>
    <% ); %>
% );
% if List.length tasks > 0 then (
    <div class="max-w-4xl">
      <div class="grid grid-cols-[1fr_40%] items-center bg-primary text-white rounded-t">
        <div class="px-4 py-2"><strong>Task</strong></div>
        <div class="px-4 py-2"><strong>Packages Used</strong></div>
      </div>
      <div class="flex flex-col gap-2 bg-sand dark:bg-dark-background_navigation rounded-b py-2">
% tasks |> List.iter (fun (task : Data.Cookbook.task) ->
        <div class="grid grid-cols-[1fr_40%] items-start">
        <%s! render_task task %>
        </div>
% );
      </div>
    </div>
% );
  </div>

let render (categories: Data.Cookbook.category list) =
Learn_layout.three_column_layout
  ~title:"OCaml Cookbook"
  ~description:"A collection of recipes to get things done in OCaml."
  ~canonical:Url.cookbook
  ~current:Cookbook
  ~left_sidebar_html:None
  ~right_sidebar_html:None @@
  <div class="container-fluid pt-10">
    <div class="prose dark:prose-invert mb-10">
      <h1 class="font-normal text-4xl">OCaml Cookbook Recipes</h2>
      <p>
        The OCaml cookbook is a place where OCaml developers share how to solve
        common tasks in OCaml using packages from the OCaml ecosystem.</p>
      <p>
        A task is something that needs to be done inside a project. A recipe is
        a code sample and explanations on how to perform a task using a
        combination of open source libraries. Some tasks can be performed using
        different combination of libraries, each is a different recipe. Tasks
        don't describe how to use the standard library or language features.</p>
        <p>
        OCaml developers are warmly invited to contribute categories, tasks and
        recipes. See the Cookbook section of the <a
        href="https://github.com/ocaml/ocaml.org/blob/main/CONTRIBUTING.md#content-cookbook">CONTRIBUTING.md</a> file in our GitHub repo.
      </p>
    </div>
    <div class="flex flex-col gap-6">
      <% categories |> List.iter (fun (category: Data.Cookbook.category) -> %>
      <%s! render_category category %>
      <% ); %>
    </div>
  </div>
