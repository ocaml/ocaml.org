let render
?styles
~(path: Package_breadcrumbs.path)
~title
~description
?canonical
?hash
?page
~(package : Package.package)
~(documentation_status: Package.documentation_status)
~(search_index_digest: string option)
~left_sidebar_html
~right_sidebar_html
inner =
Layout.render
?styles
~show_get_started:false
~title
~description
?canonical
~active_top_nav_item:Header.Packages
~footer_html:(Fixed_footer.render ()) @@
<div class="bg-white">
  <div class="pt-6">
    <div class="container-fluid wide">
      <div class="flex justify-between flex-col md:flex-row">
        <div class="flex flex-col items-baseline" id="htmx-breadcrumbs">
          <%s! Package_breadcrumbs.render_package_and_version ~path ?hash ?page package %>
        </div>
      </div>
      <div x-data="{ sidebar: window.matchMedia('(min-width: 48em)').matches, q: '', search_input_focused: false }" @resize.window="sidebar = window.matchMedia('(min-width: 48em)').matches" x-on:close-sidebar="sidebar=window.matchMedia('(min-width: 48em)').matches">
        <button :title='(sidebar? "close" : "open")+" sidebar"' class="flex items-center bg-primary-600 p-3 z-30 rounded-full text-white shadow-md bottom-20 fixed md:hidden right-10"
        x-on:click="sidebar = ! sidebar">
          <%s! Icons.sidebar_menu "h-8 w-8" %>
          <span class="hidden md:flex font-semibold px-2">side menu</span>
        </button>
        <div class="fixed z-10 inset-0 bg-background-dark-blue/20 backdrop-blur-sm md:hidden"
          :class='sidebar ? "" : "hidden"' aria-hidden="true" x-on:click="sidebar = ! sidebar">
        </div>

        <div class="flex gap-4 xl:gap-10 flex-col md:flex-row mt-6">
          <ol class="flex w-full md:w-60 lg:w-72 flex-shrink-0">
            <li class="flex flex-auto">
              <a class="w-full h-10 flex justify-center rounded-l-lg p-1 items-center font-semibold border border-r-0 border-primary-700 <%s (match path with | Overview _ -> "bg-primary-700 text-white" | _ -> "text-primary-700")%>" href="<%s Url.Package.overview package.name ?version:(Package.url_version package) %>">Overview</a>
            </li>
              <% (match documentation_status with
              | Success -> %>
              <li class="flex flex-auto">
                <a class="w-full h-10 flex justify-center rounded-r-lg p-1 items-center font-semibold border border-l-0  border-primary-700 <%s (match path with | Documentation _ -> "bg-primary-700 text-white" | _ -> "text-primary-700")%>" href="<%s Url.Package.documentation package.name ?version:(Package.url_version package) %>">Docs</a>
              </li>
              <% | Unknown -> ( %>
              <li class="flex flex-auto">
                <a title="Documentation status is unknown" class="w-full h-10 flex justify-center gap-2 rounded-r-lg p-1 items-center font-semibold border border-l-0 border-gray-400 <%s (match path with | Documentation _ -> "bg-primary-700 text-white" | _ -> "text-gray-500 bg-background-default")%>" href="<%s Url.Package.documentation package.name ?version:(Package.url_version package) %>"><%s! Icons.error "" %> No Docs</a>
              </li>
              <% )
              | Failure -> ( %>
              <li class="flex flex-auto">
                <a title="Documentation failed to build!" class="w-full h-10 flex justify-center gap-2 rounded-r-lg p-1 items-center font-semibold border border-l-0  border-gray-400 <%s (match path with | Documentation _ -> "bg-primary-700 text-white" | _ -> "text-gray-500 bg-background-default")%>" href="<%s Url.Package.documentation package.name ?version:(Package.url_version package) %>"><%s! Icons.error "" %> No Docs</a>
              </li>
              <% ));%>
            </li>
          </ol>

          <form class="flex w-full items-center">
            <% if Option.is_some search_index_digest then (%>
            <input id="in-package-search" type="search" name="q" class="focus:border-gray-800 text-gray-800 border-primary-600 h-10 rounded-l-md appearance-none px-4 flex-grow"
              autocomplete="off"
              placeholder="Search names in this package..."

              x-on:focus="search_input_focused = true"
              x-on:blur="setTimeout(() => search_input_focused = false, 100)"
              x-on:keyup="q = event.target.value.trim()"
              >
            <button aria-label="search" class="h-10 rounded-r-md bg-primary-600 text-white flex items-center justify-center px-4">
              <%s! Icons.magnifying_glass "w-6 h-6" %>
            </button>
            <% ) else ( %>
            No search index for package!
            <% ); %>
          </form>
        </div>

        <div class="flex md:gap-4 xl:gap-10">
          <div
            class="p-10 z-20 bg-white flex-col fixed h-screen overflow-auto md:flex left-0 top-0 md:sticky w-80 md:w-60 lg:w-72 md:px-0 md:pt-6 md:pb-24"
            x-show="sidebar" x-transition:enter="transition duration-200 ease-out"
            x-transition:enter-start="-translate-x-full" x-transition:leave="transition duration-100 ease-in"
            x-transition:leave-end="-translate-x-full">
            <%s! left_sidebar_html %>
          </div>

          <div class="flex-1 z-0 z- min-w-0 pt-6 pb-12 md:pb-[70vh] prose max-w-full"
            x-show="q != ''">

            <div id="in-package-search-results">
            </div>
          </div>

          <div class="flex-1 z-0 z- min-w-0 pt-6 pb-12 md:pb-[70vh]"
            x-show="q == ''">
            <%s! inner %>
          </div>
          <% (if right_sidebar_html <> "" then %>
          <div class="hidden xl:flex top-0 sticky h-screen flex-col w-60 overflow-auto md:pb-24"
            x-show="q == ''">
            <%s! right_sidebar_html %>
          </div>
          <% ); %>
        </div>
      </div>
    </div>
  </div>
</div>
<%s! Toc.script %>
<% (match search_index_digest with | Some(digest) -> %>
<script src="<%s Ocamlorg_static.Asset. url "vendors/minisearch.min.js" %>"></script>
<script>
  function Fuse() {}
</script>
<script>
  var miniSearch;

  function perform_search() {
    let q = document.getElementById("in-package-search").value;
    console.log("perform_search", q);
    let results = miniSearch.search(q, {
      fields: ['name', 'prefixname', 'comment'], 
      prefix: true,
      boost: {
        name: 4,
        prefixname: 1.2,
      },
      fuzzy: 0.15,
    }).slice(0,50);
    let container = document.getElementById("in-package-search-results");
    container.innerHTML = "";

    let search_results = document.createElement("ol");

    results.map((entry) => {
        let kind = document.createElement("tt");
        kind.innerText = entry.kind
          .replace("module type", "mty").replace("root", "mod").replace("module", "mod")
          .replace("method", "mtd").replace("class typ", "cty").replace("class", "cls")
          .replace("core type", "typ").replace("type", "typ")
          .replace("exception", "exc").replace("core exception", "exc")
          .replace("parameter", "par")
          .replace("leaf page", "man").replace("page", "man");
        kind.title = entry.kind;
        kind.classList.add("entry-kind");

        let list_item = document.createElement("li");
        let a = document.createElement("a");
        a.href = "/" + entry.url;
        a.classList.add("search-entry", kind.innerText.slice(0,3));
        let title = document.createElement("div");
        title.classList.add("entry-title");

        let prefixname = document.createElement("tt");
        prefixname.innerText = entry.prefixname.split(".").reverse().join(".") + (entry.prefixname != "" ? ".": "");
        prefixname.classList.add("prefix-name");
        let name = document.createElement("tt");
        name.classList.add("entry-name");
        name.innerText =  entry.name;

        title.appendChild(kind);
        title.appendChild(prefixname);
        title.appendChild(name);

        let comment = document.createElement("div");
        comment.innerText = entry.comment;
        comment.classList.add("entry-comment");

        a.appendChild(title);
        a.appendChild(comment);

        list_item.appendChild(a);

        search_results.appendChild(list_item);
    });
    container.appendChild(search_results);
  }

  function init_search() {
    documents = documents.map((d, i) => {return {...d, id: i}});

    miniSearch = new MiniSearch({
      fields: ['name', 'prefixname', 'comment'],
      storeFields: ['name', 'prefixname', 'kind', 'url', 'comment'],
    });

    miniSearch.addAll(documents);
  
    document.getElementById("in-package-search").addEventListener("input", perform_search);
    perform_search();
  }

  function user_interacts() {
    let scriptTag = document.createElement("script");
    scriptTag.src = "<%s Url.Package.search_index ?version:(Package.url_version package) package.name ~digest %>";
    scriptTag.addEventListener("load", init_search);
    document.body.appendChild(scriptTag);

    document.getElementById("in-package-search").removeEventListener("focus", user_interacts);
  }

  document.getElementById("in-package-search").addEventListener("focus", user_interacts);
</script>
<% | _ -> () ); %>
