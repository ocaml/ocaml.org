let subnav_tabs
~title ~sections ~url_of_section ~title_of_section
~current =
  let link ~href ~title ~current =
    <a href="<%s href %>" class="justify-start px-4 py-2 text-white dark:text-dark-title items-center font-normal border-2 border-b-4 border-transparent rounded <%s if current then "border-b-primary dark:border-b-dark-primary" else "opacity-80 hover:text-primary dark:hover:text-dark-primary" %>">
      <%s title %>
    </a>
  in
  let first_section = List.hd sections in
  let breadcrumb_options current =
    let selected_option section = if section = current then "selected" else "" in
    let options_list option =
        <option value="<%s url_of_section option %>" <%s selected_option option %>>
          <%s title_of_section option %>
        </option>
    in
    <nav aria-label="breadcrumbs" class="px-4 flex bg-title dark:bg-[#111827] text-white dark:text-dark-title md:hidden">
      <ul>
        <li class="inline-block">
            <a href="<%s url_of_section first_section %>" class="flex items-center px-2 py-2 border-transparent border-2 border-b-4"> <%s title %>
              <span> <%s! Icons.chevron_right "w-3 h-3 ml-2" %> </span> </a>
        </li>
        <li class="inline-block">
            <select onchange="location = this.value;" class="appearance-none border-2 border-b-4 bg-transparent bg-none font-bold border-none w-auto p-0 m-0 cursor-pointer focus:outline-none focus:ring-0">
             <%s! sections |> List.map options_list |> String.concat "" %>
            </select>
            <span class="text-primary dark:text-dark-primary cursor-pointer">&#x25BE;</span>
        </li>
      </ul>
    </nav>
  in
    <%s! breadcrumb_options current %>
    <div class="bg-title dark:bg-[#111827] hidden md:flex">
      <nav class="container-fluid wide flex flex-wrap">
        <%s! sections |> List.map (fun section -> link ~href:(url_of_section section) ~title:(title_of_section section) ~current:(current = section)) |> String.concat "" %>
      </nav>
    </div>

type alternate = {
  href : string;
  title: string;
  type_ : string
}

let base
?(show_get_started=true)
?(use_swiper=false)
?(banner = false)
?description
?social_media_image
?styles
~title
?canonical
?alternate
?(active_top_nav_item: Header.nav_item option)
?(footer_html = "")
inner =
  let social_media_image_url =
    "https://ocaml.org" ^
    match social_media_image with
    | None -> Ocamlorg_static.Asset.url "ocaml_org_social_media.png"
    | Some path -> path
  in
  <!DOCTYPE html>
  <html lang="en">
    <head id="htmx-head">
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
      <% (match description with | Some description -> %>
      <meta name="description" content="<%s description %>">
      <% | None -> ()); %>
      <meta name="twitter:title" content="<%s title %>">
      <% (match description with | Some description -> %>
      <meta name="twitter:description" content="<%s description %>">
      <% | None -> ()); %>
      <meta name="twitter:image" content="<%s social_media_image_url %>">
      <meta property="og:site_name" content="OCaml">
      <meta property="og:type" content="object">
      <meta property="og:title" content="<%s title %>">
      <% (match description with | Some description -> %>
      <meta property="og:description" content="<%s description %>">
      <% | None -> ()); %>
      <meta name="og:image" content="<%s social_media_image_url %>">
      <meta name="theme-color" content="#fff" >
      <meta name="color-scheme" content="white">
      <% (match canonical with | Some canonical -> %>
      <meta name="ahrefs-site-verification" content="6ff715b377cdcd566334b44ae8888791189ce24640c8a403eacdc3bcbaa9449b">
      <link rel="canonical" href="https://ocaml.org<%s canonical %>">
      <% | None -> ()); (match alternate with | Some { href; title; type_ } -> %>
      <link rel="alternate" href="<%s href %>" title="<%s title %>" type="<%s type_ %>">
      <% | None -> ()); %>
      <link rel="icon" type="image/x-icon" href="<%s Ocamlorg_static.Asset.url "favicon.ico" %>">
      <link rel="manifest" href="/manifest.json">
      <% (match styles with | Some styles -> styles |> List.iter (fun style -> %>
      <link rel="stylesheet" href="<%s Ocamlorg_static.Asset.url style %>">
      <% ) | None -> %>
      <link rel="stylesheet" href="<%s Ocamlorg_static.Asset.url "css/main.css" %>">
      <% ); %>
      <link rel="stylesheet" href="<%s Ocamlorg_static.Asset.url "vendors/font-files/inter.css" %>">
      <link rel="stylesheet" href="<%s Ocamlorg_static.Asset.url "vendors/font-files/roboto-mono.css" %>">
      <script defer src="<%s Ocamlorg_static.Asset.url "vendors/alpine-clipboard.js" %>"></script>
      <script defer src="<%s Ocamlorg_static.Asset.url "vendors/alpine.min.js" %>"></script>
      <script defer src="<%s Ocamlorg_static.Asset.url "vendors/htmx.min.js" %>"></script>
      <!-- FIXME: remove plausible script when Plausible is retired -->
      <script defer data-domain="ocaml.org" src="https://plausible.ci.dev/js/script.js"></script>
      <script>
          !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host.replace(".i.posthog.com","-assets.i.posthog.com")+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="init me ws ys ps bs capture je Di ks register register_once register_for_session unregister unregister_for_session Ps getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey canRenderSurveyAsync identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty Es $s createPersonProfile Is opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing Ss debug xs getPageViewId captureTraceFeedback captureTraceMetric".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
          posthog.init('phc_OCqqItGZelQ6GJ5spVGiClX6FMqxWoDGBloGJVVSY5n', {
              api_host: 'https://posthog.ci.dev',
              person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well
          })
      </script>
      <% if use_swiper then ( %>
      <link rel="stylesheet" href="<%s Ocamlorg_static.Asset.url "vendors/swiper-bundle.min.css" %>">
      <link rel="alternate" type="application/rss+xml" title="OCaml Planet Feed" href="/planet.xml">
      <script src="<%s Ocamlorg_static.Asset.url "vendors/swiper-bundle.min.js" %>"></script>
      <% ); %>
      <link rel="search" href="<%s Ocamlorg_static.Open_search.manifest %>" type="application/opensearchdescription+xml" title="OCaml">
      <title><%s title %></title>
    </head>

    <body>
      <script>
        if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
          document.body.classList.add("dark");
        } else {
          document.body.classList.remove("dark");
        }
      </script>
      <% if banner then ( %>
      <div class="relative bg-primary_dark text-white">
        <div class="mx-auto py-3 px-6 sm:px-16 max-w-6xl sm:text-center">
          <p class="font-medium">
            <span class="md:hidden">We've released the OCaml Changelog!</span>
            <span class="hidden md:inline">
              <strong class="font-semibold">OCaml Changelog</strong><svg viewBox="0 0 2 2" class="mx-2 inline h-0.5 w-0.5 fill-current" aria-hidden="true"><circle cx="1" cy="1" r="1" /></svg>
              The OCaml Changelog is a feed of the latest releases and features of official OCaml projects.
            </span>
            <span class="block sm:ml-2 sm:inline-block">
              <a href="<%s Url.changelog %>" class="font-bold text-white underline">
                Read it now
                <span aria-hidden="true"> &rarr;</span>
              </a>
            </span>
          </p>
        </div>
      </div>
      <% ); %>

      <%s! Header.render ~show_get_started ?active_top_nav_item () %>
      <main class="bg-background dark:bg-dark-background"><%s! inner %></main>

      <button class="fixed bottom-8 right-10 md:bottom-[5rem] lg:bottom-[8.37rem] lg:right-[6.5rem] border-0 hidden focus:outline-none z-50 rounded-full shadow-custom p-4 bg-primary dark:bg-dark-primary" onclick="scrollToTop()" id="scrollToTop" title="Scroll to top"><%s! Icons.arrow_up "h-6 w-6"%></button>

      <%s! footer_html %>
      <script>
          function scrollToTop() {
            window.scrollTo(0, 0);
          }

          window.onscroll = function() {
            showScrollButton();
          };

          function showScrollButton() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
              document.getElementById("scrollToTop").style.display = "block";
            } else {
              document.getElementById("scrollToTop").style.display = "none";
            }
          }
      </script>
    </body>
  </html>

let render = base ~footer_html:(Footer.primary_footer ())
