type path_item = 
  | Manual
  | Page of string
  | Library of string
  | Module of string
  | ModuleType of string
  | Parameter of int * string
  | Class of string
  | ClassType of string

let kind_tag (m : path_item) = match m with
  | Manual -> ""
  | Page _ -> ""
  | Library _ -> ""
  | Module _ ->
    <span class="breadcrumbs-tag module-tag text-white">Module</span>
  | ModuleType _ ->
    <span class="breadcrumbs-tag module-type-tag text-white">Module type</span>
  | Parameter (number, _) ->
    <span class="breadcrumbs-tag parameter-tag text-white"><%s "Parameter #" ^ (Int.to_string number) %></span>
  | Class _ ->
    <span class="breadcrumbs-tag class-tag text-white">Class</span>
  | ClassType _ ->
    <span class="breadcrumbs-tag class-type-tag text-white">Class type</span>

let path_item_name (m: path_item) = match m with
  | Manual -> ""
  | Page name
  | Library name
  | Module name
  | ModuleType name
  | Parameter (_, name) -> name
  | Class name -> name
  | ClassType name -> name

type breadcrumb = {
  text : string;
  href : string;
}

let rec breadcrumbs_from_path (reversed_module_path: path_item list) prefix : ( breadcrumb list ) = match reversed_module_path with
  | [] -> []
  | x::[] -> [{ text = path_item_name x; href = prefix ^ "index.html"}]
  | x::xs ->
    let new_prefix = prefix ^ "../" in
    { text = path_item_name x ; href = prefix ^ "index.html" } :: breadcrumbs_from_path xs new_prefix

let render (module_path:path_item list) =
  let (reversed_module_path : path_item list) = List.rev (List.tl module_path) in
  let breadcrumbs = breadcrumbs_from_path reversed_module_path "" in
  let render_breadcrumb b =
    <span>
      <a href="<%s! b.href %>" class="ml-1 text-2xl font-medium text-gray-800 transition-colors hover:text-orange-600"><%s b.text %></a>
    </span>
  in
  <% if Manual = List.hd module_path then ( %>
    <span title="Manual">Manual</span>
    <% ) else ( %>
    <span title="Library <%s path_item_name (List.hd module_path) %>">Library <%s path_item_name (List.hd module_path) %></span>
  <% ); %>
  <div class="flex flex-wrap pb-4">
    <%s! if module_path != [] then kind_tag (List.hd reversed_module_path) else "" %>
    <%s! String.concat "<span class=\"ml-1 text-2xl\">.</span>" (breadcrumbs |> List.rev |> List.map render_breadcrumb); %>
  </div>
