type library_path_item =
  | Module of { name: string; href: string; }
  | ModuleType of { name: string; href: string; }
  | Parameter of { name: string; href: string; number: int; }
  | Class of { name: string; href: string; }
  | ClassType of { name: string; href: string; }

type docs_path =
  | Index
  | Page of string
  | Library of string * library_path_item list

let kind_tag (m : library_path_item) = match m with
  | Module _ ->
    <span tabindex="0" aria-label="module" class="breadcrumbs-tag module-tag text-white">Module</span>
  | ModuleType _ ->
    <span tabindex="0" aria-label="module type" class="breadcrumbs-tag module-type-tag text-white">Module type</span>
  | Parameter { number; _ } ->
    <span tabindex="0" aria-label="<%s "Parameter #" ^ (Int.to_string number) %>" class="breadcrumbs-tag parameter-tag text-white"><%s "Parameter #" ^ (Int.to_string number) %></span>
  | Class _ ->
    <span tabindex="0" aria-label="class" class="breadcrumbs-tag class-tag text-white">Class</span>
  | ClassType _ ->
    <span tabindex="0" aria-label="class type" class="breadcrumbs-tag class-type-tag text-white">Class type</span>

type path =
  | Overview of string option
  | Documentation of (docs_path)

let render_package_and_version
~path
?page
?hash
(package: Package.package)
=
  let version = Package.url_version package in
  let url (version : string option) =
    match path with
    | Overview _ -> Url.Package.overview package.name ?version
    | Documentation _ -> Url.Package.documentation package.name ?version ?hash ?page
  in
  let version_options v =
    <% if v = package.latest_version then ( %>
    <option value="<%s url None %>" <%s if package.version = Latest then "selected" else "" %>>
      <%s "latest (" ^ package.latest_version ^ ")" %>
    </option>
    <% ); %>
    <option value="<%s url (Some v) %>" <%s if package.version = Specific v then "selected" else "" %>>
      <%s v %>
    </option>
  in
  <li>
    <h1 class="inline text-base">
      <a class="font-semibold underline" href="<%s Url.Package.overview package.name ?version %>"><%s package.name %></a>
    </h1>
  </li>
  <li>
    <select id="version" name="version" aria-label="version" onchange="location = this.value;"
      class="leading-8 appearance-none cursor-pointer py-0 rounded-md border border-gray-400 pr-8"
      style="background-position: right 0.25rem center">
      <%s! package.versions |> List.map version_options |> String.concat "" %>
    </select>
  </li>

type breadcrumb = {
  name: string;
  href: string;
}

let library_path_item_to_breadcrumb = function
  | Module x -> { name = x.name; href = x.href }
  | ModuleType x -> { name = x.name; href = x.href }
  | Class x -> { name = x.name; href = x.href }
  | ClassType x -> { name = x.name; href = x.href }
  | Parameter x -> { name = x.name; href = x.href }

let render_library_path_breadcrumbs
~library_name
~(path: library_path_item list) =
  let render_breadcrumb i b =
    if i < List.length path - 1 then
      <a href="<%s! b.href %>" class="font-semibold underline text-gray-800"><%s b.name %></a>
    else
      <a href="<%s! b.href %>" aria-current="page" class="text-gray-800"><%s b.name %></a>
  in
  <li>
    <span tabindex="0" class="text-gray-600"><%s library_name %> lib</span>
  </li>
  <li class="inline-flex">
    <%s! String.concat "<span>.</span>" (path |> List.map library_path_item_to_breadcrumb |> List.mapi render_breadcrumb); %>
    <%s! kind_tag (List.hd (List.rev path)) %>
  </li>

let render_docs_path_breadcrumbs
~(path: docs_path)
?page
?hash
(package: Package.package)
  =
  let version = Package.url_version package in
  <nav aria-label="breadcrumb" class="flex" id="htmx-breadcrumbs">
    <ul class="flex flex-wrap gap-x-2 text-base leading-8 package-breadcrumbs">
      <%s! render_package_and_version ~path:(Documentation path) ?page ?hash package %>
      <li>
        <a class="underline font-semibold" href="<%s! Url.Package.documentation package.name ?version %>">Documentation</a>
      </li>
      <% (match path with
         | Index -> %>
      <% | Library (library_name, library_path) -> %>
        <%s! if library_path != [] then render_library_path_breadcrumbs ~library_name ~path:library_path else "ERROR: library path is []" %>
      <% | Page page_name  -> %>
        <li>
          <span><%s page_name %></span>
        </li>
      <% ); %>
    </ul>
  </nav>

let render_overview_breadcrumbs
~(page: string option)
?hash
(package: Package.package)
=
  <nav aria-label="breadcrumbs" class="flex">
    <ul class="flex flex-wrap gap-x-2 leading-8 package-breadcrumbs">
      <%s! render_package_and_version ~path:(Overview page) ?hash package %>
      <% (match page with | Some p -> %>
      <li><%s p %></li>
      <% | None -> ()); %>
    </ul>
  </nav>

let render
~(path: path)
?page
=
  match path with
    | Overview page -> render_overview_breadcrumbs ~page
    | Documentation (docs_path) -> render_docs_path_breadcrumbs ~path:docs_path ?page
