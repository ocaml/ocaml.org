type breadcrumb = {
  name: string;
  href: string option;
}

type path_item =
  | Module of breadcrumb
  | ModuleType of breadcrumb
  | Parameter of breadcrumb * int
  | Class of breadcrumb
  | ClassType of breadcrumb
  | Page of breadcrumb

let kind_tag (m : path_item) = match m with
  | Module _ ->
    <span tabindex="0" aria-label="module" class="breadcrumbs-tag module-tag">Module</span>
  | ModuleType _ ->
    <span tabindex="0" aria-label="module type" class="breadcrumbs-tag module-type-tag">Module type</span>
  | Parameter (_, number) ->
    <span tabindex="0" aria-label="<%s "Parameter #" ^ (Int.to_string number) %>" class="breadcrumbs-tag parameter-tag"><%s "Parameter #" ^ (Int.to_string number) %></span>
  | Class _ ->
    <span tabindex="0" aria-label="class" class="breadcrumbs-tag class-tag">Class</span>
  | ClassType _ ->
    <span tabindex="0" aria-label="class type" class="breadcrumbs-tag class-type-tag">Class type</span>
  | Page _ ->
    <span tabindex="0" aria-label="page" class="breadcrumbs-tag page-tag">Page</span>

type path =
  | Overview of string option
  | Documentation of path_item list

let render_package_and_version
~path
?page
?hash
(package: Package.package)
=
  let version = Package.url_version package in
  let url (version : string option) =
    match path with
    | Overview _ -> Url.Package.overview package.name ?version
    | Documentation _ -> Url.Package.documentation package.name ?version ?hash ?page
  in
  let version_options (v: Package.version_with_publication_date) =
    <% if v.version = package.latest_version then ( %>
    <option value="<%s url None %>" <%s if package.version = Latest then "selected" else "" %>>
      <%s "latest (" ^ package.latest_version ^ ")" %>
    </option>
    <% ); %>
    <option value="<%s url (Some v.version) %>" <%s if package.version = Specific v.version then "selected" else "" %>>
      <%s v.version %>
    </option>
  in
  <div class="flex gap-4">
    <h1 class="m-0 text-3xl"><span class="sr-only">package </span><a class="font-semibold text-3xl text-title dark:text-dark-title" href="<%s Url.Package.overview package.name ?version %>"><%s package.name %></a></h1>
    <select id="version" name="version" aria-label="version" onchange="location = this.value;"
      class="leading-8 appearance-none cursor-pointer py-0 rounded-md border border-separator_20 dark:border-dark-separator_30 text:title dark:text-dark-title bg-white dark:bg-dark-card pr-8"
      style="background-position: right 0.25rem center">
      <%s! package.versions |> List.map version_options |> String.concat "" %>
    </select>
  </div>

let path_item_to_breadcrumb = function
  | Module x | ModuleType x | Class x | ClassType x | Parameter (x, _) | Page x
    ->
      x

let is_page : path_item -> bool = function Page _ -> true | _ -> false

let render_path_breadcrumbs
~(path: path_item list) =
  let pages, modules = List.partition is_page path in
  let render_breadcrumb max i b =
    match b.href with
    | None when i < max ->
      <span class="font-semibold underline text-content dark:text-dark-title"><%s! b.name %></span>
    | None ->
      <span aria-current="page" class="text-content dark:text-dark-title mr-2"><%s! b.name %></span>
    | Some href when i < max ->
      <a href="<%s! href %>" class="font-semibold underline text-content dark:text-dark-title"><%s! b.name %></a>
    | Some href ->
      <a href="<%s! href %>" aria-current="page" class="text-content dark:text-dark-title mr-2"><%s! b.name %></a>
  in
  let li content =
    <li class="flex flex-wrap items-center">
    <%s! content %>
    </li>
  in
  let page_items = List.fold_left (fun (i, acc) item ->
    (i+1, acc ^ li (render_breadcrumb (List.length pages - 1) i (path_item_to_breadcrumb item)))) (0,"") pages |> snd in
  let ms =
      <%s! String.concat "<span>.</span>" (List.mapi (render_breadcrumb (List.length modules - 1)) (List.map path_item_to_breadcrumb modules)) %>
  in
  let last = kind_tag (List.hd (List.rev path)) in
  if List.length modules > 0 then
    page_items ^ li (ms ^ last)
  else
    page_items

let render_docs_path_breadcrumbs
~(path: path_item list)
  =
  <nav aria-label="breadcrumb" class="flex mb-6 border-b pb-6">
    <ul class="flex flex-wrap gap-x-2 text-base leading-7 package-breadcrumbs">
      <%s! if path != [] then render_path_breadcrumbs ~path else "ERROR: library path is []" %>
    </ul>
  </nav>


let render_overview_breadcrumbs
(page: string option)
=
  <nav aria-label="breadcrumbs" class="flex mb-6 border-b">
    <ul class="flex flex-wrap gap-x-2 leading-8 package-breadcrumbs">
      <% (match page with | Some p -> %>
      <li><%s p %></li>
      <% | None -> ()); %>
    </ul>
  </nav>

let render
~(path: path)
=
  match path with
    | Overview page -> render_overview_breadcrumbs page
    | Documentation (docs_path) -> render_docs_path_breadcrumbs ~path:docs_path
