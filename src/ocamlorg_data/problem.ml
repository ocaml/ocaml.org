
type difficulty =
  [ `Beginner
  | `Intermediate
  | `Advanced
  ]

type t =
  { title : string
  ; number : string
  ; difficulty : difficulty
  ; tags : string list
  ; statement : string
  ; solution : string
  }
  
let all = 
[
  { title = {js|Tail of a list|js}
  ; number = {js|1|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Write a function <code>last : 'a list -&gt; 'a option</code> that returns the last element of a list</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>last</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>option</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>last</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>option</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>last</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'> 
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>last</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>last</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>option</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Last two elements of a list|js}
  ; number = {js|2|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Find the last but one (last and penultimate) elements of a list.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>last_two</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>option</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>last_two</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>option</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>last_two</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>last_two</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>last_two</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>option</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|N'th lement of a list|js}
  ; number = {js|3|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Find the K'th element of a list.</p>
<blockquote>
<p>REMARK: OCaml has <code>List.nth</code> which numbers elements from <code>0</code> and
raises an exception if the index is out of bounds.</p>
</blockquote>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>nth</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>nth</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-constant-language-capital-identifier'>Exception</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Failure</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>nth</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>at</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>at</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>at</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>option</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Length of a list|js}
  ; number = {js|4|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Find the number of elements of a list.</p>
<p>OCaml standard library has <code>List.length</code> but we ask that you reimplement
it. Bonus for a <a href="http://en.wikipedia.org/wiki/Tail_call">tail recursive</a>
solution.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<p>This function is tail-recursive: it uses a constant amount of stack memory regardless of list size.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Reverse a list|js}
  ; number = {js|5|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Reverse a list.</p>
<p>OCaml standard library has <code>List.rev</code> but we ask that you reimplement
it.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Palindrome|js}
  ; number = {js|6|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Find out whether a list is a palindrome.</p>
<blockquote>
<p>HINT: a palindrome is its own reverse.</p>
</blockquote>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_palindrome</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>x</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>m</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>x</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>not</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>is_palindrome</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>is_palindrome</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> One can use either the rev function from the previous problem, or the built-in List.rev </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_palindrome</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Flatten a list|js}
  ; number = {js|7|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Flatten a nested list structure.</p>
<pre><code><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>node</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> 
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>node</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>
</span></code></pre><pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>flatten</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>node</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> 
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>node</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>node</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>node</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> This function traverses the list, prepending any encountered elements
</span><span class='ocaml-comment-block'>    to an accumulator, which flattens the list in inverse order. It can
</span><span class='ocaml-comment-block'>    then be reversed to obtain the actual flattened list. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>flatten</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>flatten</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>node</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Eliminate duplicates|js}
  ; number = {js|8|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Eliminate consecutive duplicates of list elements.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>compress</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>compress</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>compress</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>compress</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>smaller</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>smaller</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>compress</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Pack consecutive duplicates|js}
  ; number = {js|9|js}
  ; difficulty = `Intermediate
  ; tags = 
 [""]
  ; statement = {js|<p>Pack consecutive duplicates of list elements into sublists.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>pack</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>pack</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>current</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>    </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Can only be reached if original list is empty </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>x</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>current</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>current</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>current</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>pack</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Run-length encoding|js}
  ; number = {js|10|js}
  ; difficulty = `Beginner
  ; tags = 
 [""]
  ; statement = {js|<p>If you need so, refresh your memory about
<a href="http://en.wikipedia.org/wiki/Run-length_encoding">run-length encoding</a>.</p>
<p>Here is an example:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>encode</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>encode</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Can only be reached if original list is empty </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>x</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                              </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>encode</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>An alternative solution, which is shorter but requires more memory, is to use
the <code>pack</code> function declared in problem 9:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>pack</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>current</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>    </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Can only be reached if original list is empty </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>x</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>current</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>current</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>current</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>pack</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>encode</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>hd</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>pack</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>encode</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Modified run-length encoding|js}
  ; number = {js|11|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Modify the result of the previous problem in such a way that if an
element has no duplicates it is simply copied into the result list. Only
elements with duplicates are transferred as (N E) lists.</p>
<p>Since OCaml lists are homogeneous, one needs to define a type to hold
both single elements and sub-lists.</p>
<pre><code><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>rle</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>
</span></code></pre><pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>encode</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>rle</span><span class='ocaml-keyword-operator'>/</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>rle</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>rle</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>encode</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>create_tuple</span><span class='ocaml-source'> </span><span class='ocaml-source'>cnt</span><span class='ocaml-source'> </span><span class='ocaml-source'>elem</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>cnt</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-source'>elem</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>cnt</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>elem</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>x</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>create_tuple</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>hd</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>snd</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>hd</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>snd</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>create_tuple</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>hd</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>encode</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>rle</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Decode a run-length encoded list|js}
  ; number = {js|12|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Given a run-length code list generated as specified in the previous
problem, construct its uncompressed version.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'>  </span><span class='ocaml-source'>decode</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>decode</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>many</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>many</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>decode</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>rle</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Run-length encoding of a list (direct solution)|js}
  ; number = {js|13|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Implement the so-called run-length encoding data compression method
directly. I.e. don't explicitly create the sublists containing the
duplicates, as in problem &quot;<a href="#Packconsecutiveduplicatesoflistelementsintosublistsmedium">Pack consecutive duplicates of list elements into sublists</a>&quot;, but only count them. As in problem
&quot;<a href="#Modifiedrunlengthencodingeasy">Modified run-length encoding</a>&quot;, simplify the result list by replacing the singleton lists (1 X) by X.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>encode</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>rle</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>encode</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>rle</span><span class='ocaml-source'> </span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>One</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Many</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Can only be reached if original list is empty </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>x</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>rle</span><span class='ocaml-source'> </span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                              </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>rle</span><span class='ocaml-source'> </span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>encode</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>rle</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Duplicate the elements of a list|js}
  ; number = {js|14|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Duplicate the elements of a list.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>duplicate</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>duplicate</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>duplicate</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>duplicate</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><blockquote>
<p>Remark: this function is not tail recursive.  Can you modify it so
it becomes so?</p>
</blockquote>
|js}
  };
 
  { title = {js|Replicate the elements of a list a given number of times|js}
  ; number = {js|15|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Replicate the elements of a list a given number of times.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>replicate</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>replicate</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>prepend</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>prepend</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>prepend</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> This could also be written as:
</span><span class='ocaml-comment-block'>       List.fold_left (prepend n) [] (List.rev list) </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>replicate</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><blockquote>
<p>Note that <code>List.rev list</code> is needed only because we want <code>aux</code> to be
<a href="http://en.wikipedia.org/wiki/Tail_call">tail recursive</a>.</p>
</blockquote>
|js}
  };
 
  { title = {js|Drop every N'th element from a list|js}
  ; number = {js|16|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Drop every N'th element from a list.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>drop</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>i</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>j</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>j</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>drop</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>drop</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Split a list into two parts; the length of the first part is given|js}
  ; number = {js|17|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Split a list into two parts; the length of the first part is given.</p>
<p>If the length of the first part is longer than the entire list, then the
first part is the list and the second part is empty.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>split</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>i</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>j</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>(</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>i</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>j</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>split</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>split</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                       </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> 
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>split</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Extract a slice from a list|js}
  ; number = {js|18|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Given two indices, <code>i</code> and <code>k</code>, the slice is the list containing the
elements between the <code>i</code>'th and <code>k</code>'th element of the original list
(both limits included). Start counting the elements with 0 (this is the
way the <code>List</code> module numbers elements).</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>slice</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>i</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>j</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>slice</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>take</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>take</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>drop</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>drop</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>take</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>drop</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>slice</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>This solution has a drawback, namely that the <code>take</code> function is not
<a href="https://en.wikipedia.org/wiki/Tail_call">tail recursive</a> so it may
exhaust the stack when given a very long list.  You may also notice that
the structure of <code>take</code> and <code>drop</code> is similar and you may want to
abstract their common skeleton in a single function.  Here is a solution.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>fold_until</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>acc</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>acc</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                     </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>fold_until</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>f</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                     </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>slice</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>fold_until</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>taken</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>fold_until</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>taken</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>fold_until</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'b</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'b</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>slice</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Rotate a list N places to the left|js}
  ; number = {js|19|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Rotate a list N places to the left.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>rotate</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>split</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                       </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>rotate</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Compute a rotation value between 0 and len - 1 </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>split</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>@</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>split</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>rotate</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Remove the K'th element from a list|js}
  ; number = {js|20|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Remove the K'th element from a list.</p>
<p>The first element of the list is numbered 0, the second 1,...</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>remove_at</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>remove_at</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>remove_at</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>remove_at</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Insert an element at a given position into a list|js}
  ; number = {js|21|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Start counting list elements with 0.  If the position is larger or
equal to the length of the list, insert the element at the end.  (The
behavior is unspecified if the position is negative.)</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>insert_at</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>alfa</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>alfa</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>insert_at</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>x</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>insert_at</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>insert_at</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Create a list containing all integers within a given range|js}
  ; number = {js|22|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>If first argument is greater than second, produce a list in decreasing
order.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>range</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>range</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>range</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>A tail recursive implementation:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>range</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>high</span><span class='ocaml-source'> </span><span class='ocaml-source'>low</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>high</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>low</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>high</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>high</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>low</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>range</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Extract a given number of randomly selected elements from a list|js}
  ; number = {js|23|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>The selected items shall be returned in a list. We use the <code>Random</code>
module but do not initialize it with <code>Random.self_init</code> for
reproducibility.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>rand_select</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>rand_select</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>extract</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>raise</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Not_found</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>@</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>extract</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>extract_rand</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>extract</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Random</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>picked</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>rest</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>extract_rand</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>picked</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>rest</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>min</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>rand_select</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Lotto: Draw N different random numbers from the set 1..M|js}
  ; number = {js|24|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Draw N different random numbers from the set <code>1..M</code>.</p>
<p>The selected numbers shall be returned in a list.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>lotto_select</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>49</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>20</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>28</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>45</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>16</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>24</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>38</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> [range] and [rand_select] defined in problems above </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>lotto_select</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>m</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>rand_select</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>range</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>m</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>lotto_select</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Generate a random permutation of the elements of a list|js}
  ; number = {js|25|js}
  ; difficulty = `Beginner
  ; tags = 
 ["list"]
  ; statement = {js|<p>Generate a random permutation of the elements of a list.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>permutation</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>permutation</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>extract</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>raise</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Not_found</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>@</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>extract</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>extract_rand</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>extract</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Random</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>picked</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>rest</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>extract_rand</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>picked</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>rest</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>permutation</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Generate the combinations of K distinct objects chosen from the N elements of a list|js}
  ; number = {js|26|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Generate the combinations of K distinct objects chosen from the N elements of a list.</p>
<p>In how many ways can a committee of 3 be chosen from a group of 12
people? We all know that there are C(12,3) = 220 possibilities (C(N,K)
denotes the well-known binomial coefficients). For pure mathematicians,
this result may be great. But we want to really generate all the
possibilities in a list.</p>
<pre><code><span class='ocaml-keyword-other'># </span><span class='ocaml-keyword-other'>ext</span><span class='ocaml-source'>ract </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>extract</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>            </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>with_h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>extract</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>            </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>without_h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>extract</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>            </span><span class='ocaml-source'>with_h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>@</span><span class='ocaml-source'> </span><span class='ocaml-source'>without_h</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>extract</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Group the elements of a set into disjoint subsets|js}
  ; number = {js|27|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Group the elements of a set into disjoint subsets</p>
<ol>
<li>In how many ways can a group of 9 people work in 3 disjoint subgroups
of 2, 3 and 4 persons? Write a function that generates all the
possibilities and returns them in a list.
</li>
<li>Generalize the above function in a way that we can specify a list of
group sizes and the function will return a list of groups.
</li>
</ol>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>group</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> This implementation is less streamlined than the one-extraction
</span><span class='ocaml-comment-block'>  version, because more work is done on the lists after each
</span><span class='ocaml-comment-block'>  transform to prepend the actual items. The end result is cleaner
</span><span class='ocaml-comment-block'>  in terms of code, though. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>group</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>sizes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>initial</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>size</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>size</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>sizes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> The core of the function. Prepend accepts a list of groups,
</span><span class='ocaml-comment-block'>        each with the number of items that should be added, and
</span><span class='ocaml-comment-block'>        prepends the item to every group that can support it, thus
</span><span class='ocaml-comment-block'>        turning [1,a ; 2,b ; 0,c] into [ [0,x::a ; 2,b ; 0,c ];
</span><span class='ocaml-comment-block'>        [1,a ; 1,x::b ; 0,c]; [ 1,a ; 2,b ; 0,c ]]
</span><span class='ocaml-comment-block'>
</span><span class='ocaml-comment-block'>        Again, in the prolog language (for which these questions are
</span><span class='ocaml-comment-block'>        originally intended), this function is a whole lot simpler.  </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>prepend</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>emit</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>emit</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>emit</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>emit</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                   </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>emit</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>emit</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>initial</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>concat</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>prepend</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>all</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Don't forget to eliminate all group sets that have non-full
</span><span class='ocaml-comment-block'>     groups </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>complete</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>filter</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>for_all</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>all</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>snd</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>complete</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>group</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Sorting a list of lists according to length of sublists|js}
  ; number = {js|28|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["list"]
  ; statement = {js|<p>Sorting a list of lists according to length of sublists.</p>
<ol>
<li>
<p>We suppose that a list contains elements that are lists themselves.
The objective is to sort the elements of this list according to their
length. E.g. short lists first, longer lists later, or vice versa.</p>
</li>
<li>
<p>Again, we suppose that a list contains elements that are lists
themselves. But this time the objective is to sort the elements of this
list according to their <strong>length frequency</strong>; i.e., in the default,
where sorting is done ascendingly, lists with rare lengths are placed
first, others with a more frequent length come later.</p>
</li>
</ol>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>length_sort</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>             </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>i</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>j</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>k</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>l</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>m</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>n</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>o</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>o</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>m</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>n</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>i</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>j</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>k</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>l</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>frequency_sort</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>i</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>j</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>k</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>l</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>m</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>n</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>o</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>i</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>j</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>k</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>l</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>o</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>h</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>m</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>n</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> We might not be allowed to use built-in List.sort, so here's an
</span><span class='ocaml-comment-block'>   eight-line implementation of insertion sort — O(n²) time
</span><span class='ocaml-comment-block'>   complexity. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>insert</span><span class='ocaml-source'> </span><span class='ocaml-source'>cmp</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>e</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>cmp</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>insert</span><span class='ocaml-source'> </span><span class='ocaml-source'>cmp</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>sort</span><span class='ocaml-source'> </span><span class='ocaml-source'>cmp</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>insert</span><span class='ocaml-source'> </span><span class='ocaml-source'>cmp</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>sort</span><span class='ocaml-source'> </span><span class='ocaml-source'>cmp</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Sorting according to length : prepend length, sort, remove length </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>length_sort</span><span class='ocaml-source'> </span><span class='ocaml-source'>lists</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>lists</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>lists</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>lists</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>sort</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>compare</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>fst</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>fst</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>lists</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>snd</span><span class='ocaml-source'> </span><span class='ocaml-source'>lists</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Sorting according to length frequency : prepend frequency, sort,
</span><span class='ocaml-comment-block'>   remove frequency. Frequencies are extracted by sorting lengths
</span><span class='ocaml-comment-block'>   and applying RLE to count occurrences of each length (see problem
</span><span class='ocaml-comment-block'>   </span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'>Run-length encoding of a list.</span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'>) </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>rle</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Can only be reached if original list is empty </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>x</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>count</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>frequency_sort</span><span class='ocaml-source'> </span><span class='ocaml-source'>lists</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>lengths</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>lists</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>freq</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>rle</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>sort</span><span class='ocaml-source'> </span><span class='ocaml-source'>compare</span><span class='ocaml-source'> </span><span class='ocaml-source'>lengths</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>by_freq</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>assoc</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>freq</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>lists</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>sorted</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>sort</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>compare</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>fst</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>fst</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>by_freq</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>snd</span><span class='ocaml-source'> </span><span class='ocaml-source'>sorted</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Determine whether a given integer number is prime|js}
  ; number = {js|31|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>Determine whether a given integer number is prime.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>not</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>is_prime</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_prime</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>not</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>is_prime</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>12</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<p>Recall that <code>d</code> divides <code>n</code> iff <code>n mod d = 0</code>.  This is a naive
solution.  See the <a href="http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes">Sieve of
Eratosthenes</a> for a
more clever one.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>is_prime</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>abs</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>is_not_divisor</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>||</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_not_divisor</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_not_divisor</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_prime</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Determine the greatest common divisor of two positive integer numbers|js}
  ; number = {js|32|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>Determine the greatest common divisor of two positive integer numbers.</p>
<p>Use Euclid's algorithm.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>gcd</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>13</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>27</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>gcd</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>20536</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7826</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>gcd</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>gcd</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>gcd</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Determine whether two positive integer numbers are coprime|js}
  ; number = {js|33|js}
  ; difficulty = `Beginner
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>Determine whether two positive integer numbers are coprime.</p>
<p>Two numbers are coprime if their greatest common divisor equals 1.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>coprime</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>13</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>27</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>not</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>coprime</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>20536</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7826</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> [gcd] is defined in the previous question </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>coprime</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>gcd</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>coprime</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Calculate Euler's totient function φ(m)|js}
  ; number = {js|34|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>Euler's so-called totient function φ(m) is defined as the number of
positive integers r (1 ≤ r &lt; m) that are coprime to m. We let φ(1) = 1.</p>
<p>Find out what the value of φ(m) is if m is a prime number.  Euler's
totient function plays an important role in one of the most widely used
public key cryptography methods (RSA). In this exercise you should use
the most primitive method to calculate this function (there are smarter
ways that we shall discuss later).</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>phi</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>10</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> [coprime] is defined in the previous question </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>phi</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>count_coprime</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>count_coprime</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>coprime</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>count_coprime</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>phi</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Determine the prime factors of a given positive integer|js}
  ; number = {js|35|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>Construct a flat list containing the prime factors in ascending order.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>factors</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>315</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Recall that d divides n iff [n mod d = 0] </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>factors</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>/</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>factors</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Determine the prime factors of a given positive integer (2)|js}
  ; number = {js|36|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>Construct a list containing the prime factors and their multiplicity.
<em>Hint:</em> The problem is similar to problem
<a href="#Runlengthencodingofalistdirectsolutionmedium">Run-length encoding of a list (direct solution)</a>.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>factors</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>315</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>factors</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>/</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>when</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>d</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>factors</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Calculate Euler's totient function φ(m) (improved)|js}
  ; number = {js|37|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>See problem &quot;<a href="#CalculateEuler39stotientfunctionmmedium">Calculate Euler's totient function φ(m)</a>&quot; for
the definition of Euler's totient function. If the list of the prime
factors of a number m is known in the form of the previous problem then
the function phi(m) can be efficiently calculated as follows: Let
<code>[(p1, m1); (p2, m2); (p3, m3); ...]</code> be the list of prime factors
(and their multiplicities) of a given number m. Then φ(m) can be
calculated with the following formula:</p>
<p>φ(m) = (p1 - 1) × p1<sup>m1 - 1</sup> × (p2 - 1) ×
p2<sup>m2 - 1</sup> × (p3 - 1) × p3<sup>m3 - 1</sup> × ⋯</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>phi_improved</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>10</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>phi_improved</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>13</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>12</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Naive power function. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>pow</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>pow</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> [factors] is defined in the previous question. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>phi_improved</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>p</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>m</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>pow</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>m</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>factors</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Compare the two methods of calculating Euler's totient function|js}
  ; number = {js|38|js}
  ; difficulty = `Beginner
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>Use the solutions of problems
&quot;[Calculate Euler's totient function φ(m)][totient]&quot; and
&quot;<a href="#CalculateEuler39stotientfunctionmimprovedmedium">Calculate Euler's totient function φ(m) (improved)</a>&quot;
to compare the algorithms. Take the number of logical inferences as a measure for efficiency. Try to calculate φ(10090) as an example.</p>
<pre><code><span class='ocaml-source'>timeit</span><span class='ocaml-source'> </span><span class='ocaml-source'>phi</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>10090</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Naive [timeit] function.  It requires the [Unix] module to be loaded. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>timeit</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Unix</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>gettimeofday</span><span class='ocaml-constant-language'>()</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>ignore</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>f</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Unix</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>gettimeofday</span><span class='ocaml-constant-language'>()</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>t1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-.</span><span class='ocaml-source'> </span><span class='ocaml-source'>t0</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>timeit</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'b</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>float</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|A list of prime numbers|js}
  ; number = {js|39|js}
  ; difficulty = `Beginner
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>Given a range of integers by its lower and upper limit, construct a list
of all prime numbers in that range.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>all_primes</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7920</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1000</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>is_prime</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>max</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'>n</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>is_not_divisor</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>||</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_not_divisor</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>is_not_divisor</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>all_primes</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>rest</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>all_primes</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_prime</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>rest</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>rest</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_prime</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>all_primes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Goldbach's conjecture|js}
  ; number = {js|40|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>Goldbach's conjecture says that every positive even number greater than
2 is the sum of two prime numbers. Example: 28 = 5 + 23. It is one of
the most famous facts in number theory that has not been proved to be
correct in the general case. It has been <em>numerically confirmed</em> up to
very large numbers. Write a function to find the two prime numbers that
sum up to a given even integer.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>goldbach</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>28</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>23</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> [is_prime] is defined in the previous solution </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>goldbach</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_prime</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_prime</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>d</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>goldbach</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|A list of Goldbach compositions|js}
  ; number = {js|41|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["arithmetic"]
  ; statement = {js|<p>Given a range of integers by its lower and upper limit, print a list of
all even numbers and their Goldbach composition.</p>
<p>In most cases, if an even number is written as the sum of two prime
numbers, one of them is very small. Very rarely, the primes are both
bigger than say 50. Try to find out how many such cases there are in the
range 2..3000.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>goldbach_list</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>20</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>10</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>12</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>14</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>11</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>16</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>13</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>18</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>13</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>20</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>17</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> [goldbach] is defined in the previous question. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>goldbach_list</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>goldbach_list</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>goldbach</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>goldbach_list</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>goldbach_limit</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>lim</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>filter</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-source'>lim</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-source'>lim</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>goldbach_list</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>goldbach_list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>goldbach_limit</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Truth tables for logical expressions (2 variables)|js}
  ; number = {js|46|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["logic"]
  ; statement = {js|<p>Let us define a small &quot;language&quot; for boolean expressions containing
variables:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Not</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>And</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Or</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Not</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>And</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Or</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'>
</span></code></pre><p>A logical expression in two variables can then be written in prefix
notation.  For example, <code>(a ∨ b) ∧ (a ∧ b)</code> is written:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>And</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Or</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>And</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>And</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Or</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>And</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre><p>Define a function, <code>table2</code> which returns the truth table of a given
logical expression in two variables (specified as arguments). The return
value must be a list of triples containing
<code>(value_of_a, value_of_b, value_of_expr)</code>.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>table2</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>And</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Or</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>true</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>true</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_a</span><span class='ocaml-source'>
</span><span class='ocaml-source'>               </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_b</span><span class='ocaml-source'>
</span><span class='ocaml-source'>               </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>failwith</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>The expression contains an invalid variable</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Not</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>not</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_b</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>And</span><span class='ocaml-source'>(</span><span class='ocaml-source'>e1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>e2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_b</span><span class='ocaml-source'> </span><span class='ocaml-source'>e1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_b</span><span class='ocaml-source'> </span><span class='ocaml-source'>e2</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Or</span><span class='ocaml-source'>(</span><span class='ocaml-source'>e1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>e2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_b</span><span class='ocaml-source'> </span><span class='ocaml-source'>e1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>||</span><span class='ocaml-source'> </span><span class='ocaml-source'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_b</span><span class='ocaml-source'> </span><span class='ocaml-source'>e2</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>table2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>true</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language'>true</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>  </span><span class='ocaml-source'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>  </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>  </span><span class='ocaml-source'>expr</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>true</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>  </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'> </span><span class='ocaml-source'>expr</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>  </span><span class='ocaml-source'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>  </span><span class='ocaml-source'>expr</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'> </span><span class='ocaml-source'>expr</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>eval2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>table2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Truth tables for logical expressions|js}
  ; number = {js|48|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["logic"]
  ; statement = {js|<p>Generalize the previous problem in such a way that the logical
expression may contain any number of logical variables. Define <code>table</code>
in a way that <code>table variables expr</code> returns the truth table for the
expression <code>expr</code>, which contains the logical variables enumerated in
<code>variables</code>.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>table</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>And</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Or</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> [val_vars] is an associative list containing the truth value of
</span><span class='ocaml-comment-block'>     each variable.  For efficiency, a Map or a Hashtlb should be
</span><span class='ocaml-comment-block'>     preferred. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>eval</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Var</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>assoc</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Not</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>not</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>eval</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>And</span><span class='ocaml-source'>(</span><span class='ocaml-source'>e1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>e2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>eval</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'> </span><span class='ocaml-source'>e1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>eval</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'> </span><span class='ocaml-source'>e2</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Or</span><span class='ocaml-source'>(</span><span class='ocaml-source'>e1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>e2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>eval</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'> </span><span class='ocaml-source'>e1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>||</span><span class='ocaml-source'> </span><span class='ocaml-source'>eval</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'> </span><span class='ocaml-source'>e2</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Again, this is an easy and short implementation rather than an
</span><span class='ocaml-comment-block'>     efficient one. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>table_make</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'> </span><span class='ocaml-source'>vars</span><span class='ocaml-source'> </span><span class='ocaml-source'>expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>vars</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>eval</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'> </span><span class='ocaml-source'>expr</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>v</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>table_make</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-source'> </span><span class='ocaml-source'>expr</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-operator'>@</span><span class='ocaml-source'> </span><span class='ocaml-source'>table_make</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>val_vars</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-source'> </span><span class='ocaml-source'>expr</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>table</span><span class='ocaml-source'> </span><span class='ocaml-source'>vars</span><span class='ocaml-source'> </span><span class='ocaml-source'>expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>table_make</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>vars</span><span class='ocaml-source'> </span><span class='ocaml-source'>expr</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>eval</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>table_make</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>table</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>bool_expr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Gray code|js}
  ; number = {js|49|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["logic"]
  ; statement = {js|<p>An n-bit Gray code is a sequence of n-bit strings constructed according
to certain rules. For example,</p>
<pre><code class="language-text">n = 1: C(1) = ['0', '1'].
n = 2: C(2) = ['00', '01', '11', '10'].
n = 3: C(3) = ['000', '001', '011', '010', '110', '111', '101', '100'].
</code></pre>
<p>Find out the construction rules and write a function with the following
specification: <code>gray n</code> returns the <code>n</code>-bit Gray code.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>gray</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>0</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>1</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>gray</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>00</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>01</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>11</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>10</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>gray</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>000</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>001</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>011</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>010</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>110</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>111</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>101</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>100</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>gray</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>gray_next_level</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> This is the core part of the Gray code construction.
</span><span class='ocaml-comment-block'>         * first_half is reversed and has a </span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'>0</span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'> attached to every element.
</span><span class='ocaml-comment-block'>         * Second part is reversed (it must be reversed for correct gray code).
</span><span class='ocaml-comment-block'>         * Every element has </span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'>1</span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'> attached to the front.</span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>first_half</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>second_half</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>acc1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>acc2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>              </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>0</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>^</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>1</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>^</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc2</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> List.rev_append turns first_half around and attaches it to second_half.
</span><span class='ocaml-comment-block'>         * The result is the modified first_half in correct order attached to
</span><span class='ocaml-comment-block'>         * the second_half modified in reversed order.</span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>gray_next_level</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev_append</span><span class='ocaml-source'> </span><span class='ocaml-source'>first_half</span><span class='ocaml-source'> </span><span class='ocaml-source'>second_half</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>gray_next_level</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>0</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>1</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>gray</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Huffman code|js}
  ; number = {js|50|js}
  ; difficulty = `Advanced
  ; tags = 
 ["logic"]
  ; statement = {js|<p>First of all, consult a good book on discrete mathematics or algorithms
for a detailed description of Huffman codes (you can start with the
<a href="http://en.wikipedia.org/wiki/Huffman_coding">Wikipedia page</a>)!</p>
<p>We consider a set of symbols with their frequencies.
For example, if the alphabet is <code>&quot;a&quot;</code>,..., <code>&quot;f&quot;</code>
(represented as the positions 0,...5) and
respective frequencies are 45, 13, 12, 16, 9, 5:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>fs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>45</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>13</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>12</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>16</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>fs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>45</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>13</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>12</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>16</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre><p>Our objective is to construct the
Huffman code <code>c</code> word for all symbols <code>s</code>. In our example, the result could
be
<code>hs = [(&quot;a&quot;, &quot;0&quot;); (&quot;b&quot;, &quot;101&quot;); (&quot;c&quot;, &quot;100&quot;); (&quot;d&quot;, &quot;111&quot;); (&quot;e&quot;, &quot;1101&quot;); (&quot;f&quot;, &quot;1100&quot;)]</code>
(or <code>hs = [(&quot;a&quot;, &quot;1&quot;);...]</code>). The task shall be performed by the function
<code>huffman</code> defined as follows: <code>huffman(fs)</code> returns the Huffman code
table for the frequency table <code>fs</code></p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>huffman</span><span class='ocaml-source'> </span><span class='ocaml-source'>fs</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>0</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>c</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>100</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>101</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>f</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>1100</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>e</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>1101</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>d</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>111</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Simple priority queue where the priorities are integers 0..100.
</span><span class='ocaml-comment-block'>     The node with the lowest probability comes first. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>module</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Pq</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>struct</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> {</span><span class='ocaml-source'>data</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>array</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>mutable</span><span class='ocaml-source'> </span><span class='ocaml-source'>first</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>}
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>make</span><span class='ocaml-constant-language'>()</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> {</span><span class='ocaml-source'>data</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Array</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>make</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>101</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>first</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>101</span><span class='ocaml-source'>}
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>add</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>data</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>p</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><-</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>data</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>p</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>  </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>first</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><-</span><span class='ocaml-source'> </span><span class='ocaml-source'>min</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>first</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>get_min</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>first</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>101</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>data</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>first</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>assert</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>p</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>first</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>data</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>first</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><-</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-keyword-other'>while</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>first</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>101</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>data</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>first</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>do</span><span class='ocaml-source'>
</span><span class='ocaml-source'>             </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>first</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><-</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>first</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-keyword-other'>done</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'>(</span><span class='ocaml-source'>p</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>end</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Leaf</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>huffman_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Pq</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>get_min</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Pq</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>get_min</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'>(</span><span class='ocaml-source'>p1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'>(</span><span class='ocaml-source'>p2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Pq</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>p1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>p2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'>(</span><span class='ocaml-source'>t1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                                    </span><span class='ocaml-source'>huffman_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>assert</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Build the prefix-free binary code from the tree </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>prefixes_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>prefix</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Leaf</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-source'>s</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>prefix</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'>(</span><span class='ocaml-source'>t0</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>  </span><span class='ocaml-source'>prefixes_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>prefix</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>^</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>0</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t0</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                     </span><span class='ocaml-keyword-operator'>@</span><span class='ocaml-source'> </span><span class='ocaml-source'>prefixes_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>prefix</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>^</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>1</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                       </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>huffman</span><span class='ocaml-source'> </span><span class='ocaml-source'>fs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>fs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>100</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>failwith</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>huffman: sum of weights must be 100</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>q</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Pq</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>make</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>()</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>iter</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>s</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Pq</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Leaf</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>fs</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>prefixes_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>huffman_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>q</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>module</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Pq</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>sig</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    type 'a t = { data : 'a list array; mutable first : int; }
</span><span class='ocaml-source'>    val make : unit -> 'a t
</span><span class='ocaml-source'>    val add : 'a t -> int -> 'a -> unit
</span><span class='ocaml-source'>    val get_min : 'a t -> (int * 'a) option
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>end</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Leaf</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>huffman_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Pq</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>prefixes_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>huffman</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Construct completely balanced binary trees|js}
  ; number = {js|55|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p><img src="/media/problems/binary-tree.gif" alt="Binary Tree" /></p>
<p><em>A binary tree is either empty or it is composed of a root element and
two successors, which are binary trees themselves.</em></p>
<p>In OCaml, one can define a new type <code>binary_tree</code> that carries an
arbitrary value of type <code>'a</code> (thus is polymorphic) at each node.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'>
</span></code></pre><p>An example of tree carrying <code>char</code> data is:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>example_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre><p>In OCaml, the strict type discipline <em>guarantees</em> that, if you get a
value of type <code>binary_tree</code>, then it must have been created with the two
constructors <code>Empty</code> and <code>Node</code>.</p>
<p>In a completely balanced binary tree, the following property holds for
every node: The number of nodes in its left subtree and the number of
nodes in its right subtree are almost equal, which means their
difference is not greater than one.</p>
<p>Write a function <code>cbal_tree</code> to construct completely balanced binary
trees for a given number of nodes. The function should generate all
solutions via backtracking. Put the letter <code>'x'</code> as information into all
nodes of the tree.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>cbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-keyword-operator'>/</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Build all trees with given [left] and [right] subtrees. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>add_trees_with</span><span class='ocaml-source'> </span><span class='ocaml-source'>left</span><span class='ocaml-source'> </span><span class='ocaml-source'>right</span><span class='ocaml-source'> </span><span class='ocaml-source'>all</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>add_right_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>all</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>all</span><span class='ocaml-source'> </span><span class='ocaml-source'>right</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>add_right_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>all</span><span class='ocaml-source'> </span><span class='ocaml-source'>left</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>cbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>cbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>/</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>add_trees_with</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> n even: n-1 nodes for the left & right subtrees altogether. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>cbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>/</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>cbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>/</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>add_trees_with</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>add_trees_with</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>add_trees_with</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>cbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Symmetric binary trees|js}
  ; number = {js|56|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>Let us call a binary tree symmetric if you can draw a vertical line
through the root node and then the right subtree is the mirror image of
the left subtree. Write a function <code>is_symmetric</code> to check whether a
given binary tree is symmetric.</p>
<blockquote>
<p>Hint: Write a function <code>is_mirror</code> first to check whether one tree is
the mirror image of another. We are only interested in the structure,
not in the contents of the nodes.</p>
</blockquote>
|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>is_mirror</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r1</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-source'>is_mirror</span><span class='ocaml-source'> </span><span class='ocaml-source'>l1</span><span class='ocaml-source'> </span><span class='ocaml-source'>r2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_mirror</span><span class='ocaml-source'> </span><span class='ocaml-source'>r1</span><span class='ocaml-source'> </span><span class='ocaml-source'>l2</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>is_symmetric</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>is_mirror</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_mirror</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'b</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_symmetric</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Binary search trees (dictionaries)|js}
  ; number = {js|57|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>Construct a
<a href="http://en.wikipedia.org/wiki/Binary_search_tree">binary search tree</a>
from a list of integer numbers.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>construct</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre><p>Then use this function to test the solution of the previous problem.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_symmetric</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>construct</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>18</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>12</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>21</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>not</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>is_symmetric</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>construct</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>insert</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>y</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>y</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>insert</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>y</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>insert</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>construct</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>insert</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>insert</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>construct</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Generate-and-test paradigm|js}
  ; number = {js|58|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>Apply the generate-and-test paradigm to construct all symmetric,
completely balanced binary trees with a given number of nodes.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>sym_cbal_trees</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre><p>How many such trees are there with 57 nodes? Investigate about how many
solutions there are for a given number of nodes? What if the number is
even? Write an appropriate function.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>sym_cbal_trees</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>57</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>256</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>sym_cbal_trees</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>filter</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_symmetric</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>cbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>sym_cbal_trees</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Construct height-balanced binary trees|js}
  ; number = {js|59|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>In a height-balanced binary tree, the following property holds for every
node: The height of its left subtree and the height of its right subtree
are almost equal, which means their difference is not greater than one.</p>
<p>Write a function <code>hbal_tree</code> to construct height-balanced binary trees
for a given height. The function should generate all solutions via
backtracking. Put the letter <code>'x'</code> as information into all nodes of the
tree.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>hbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<p>The function <code>add_trees_with</code> is defined in the solution of
<a href="#Constructcompletelybalancedbinarytreesmedium">Construct completely balanced binary trees</a>.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>hbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> [add_trees_with left right trees] is defined in a question above. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>hbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>and</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>hbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>add_trees_with</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>add_trees_with</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>add_trees_with</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>hbal_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Construct height-balanced binary trees with a given number of nodes|js}
  ; number = {js|60|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>Consider a height-balanced binary tree of height <code>h</code>. What is the
maximum number of nodes it can contain? Clearly,
max_nodes = 2<sup><code>h</code></sup> - 1.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>max_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>lsl</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><h2>Minimum of nodes</h2>
<p>However, what is the minimum number min_nodes? This question is more
difficult. Try to find a recursive statement and turn it into a function
<code>min_nodes</code> defined as follows: <code>min_nodes h</code> returns the minimum number
of nodes in a height-balanced binary tree of height <code>h</code>.</p>
<h2>Minimum height</h2>
<p>On the other hand, we might ask: what are the minimum (resp. maximum)
height H a
height-balanced binary tree with N nodes can have?
<code>min_height</code> (resp. <code>max_height n</code>) returns
the minimum (resp. maximum) height of a height-balanced binary tree
with <code>n</code> nodes.</p>
<h2>Constructing trees</h2>
<p>Now, we can attack the main problem: construct all the height-balanced
binary trees with a given number of nodes. <code>hbal_tree_nodes n</code> returns a
list of all height-balanced binary tree with <code>n</code> nodes.</p>
<p>Find out how many height-balanced trees exist for <code>n = 15</code>.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>hbal_tree_nodes</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>15</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1553</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<h2>Minimum of nodes</h2>
<p>The following solution comes directly from translating the question.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>min_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> 
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>It is not the more efficient one however.  One should use the last
two values as the state to avoid the double recursion.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>min_nodes_loop</span><span class='ocaml-source'> </span><span class='ocaml-source'>m0</span><span class='ocaml-source'> </span><span class='ocaml-source'>m1</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>m1</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_nodes_loop</span><span class='ocaml-source'> </span><span class='ocaml-source'>m1</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>m1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>m0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>min_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_nodes_loop</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_nodes_loop</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>It is not difficult to show that <code>min_nodes h</code> = F<sub>h+2‌</sub> - 1,
where (F<sub>n</sub>) is the
<a href="https://en.wikipedia.org/wiki/Fibonacci_number">Fibonacci sequence</a>.</p>
<h2>Minimum height</h2>
<p>Inverting the formula max_nodes = 2<sup><code>h</code></sup> - 1, one directly
find that Hₘᵢₙ(n) = ⌈log₂(n+1)⌉ which is readily implemented:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>min_height</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>int_of_float</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>ceil</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>log</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>float</span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>/.</span><span class='ocaml-source'> </span><span class='ocaml-source'>log</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_height</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>Let us give a proof that the formula for Hₘᵢₙ is valid.  First, if h
= <code>min_height</code> n, there exists a height-balanced tree of height h
with n nodes.  Thus 2ʰ - 1 = <code>max_nodes h</code> ≥ n i.e., h ≥ log₂(n+1).
To establish equality for Hₘᵢₙ(n), one has to show that, for any n,
there exists a height-balanced tree with height Hₘᵢₙ(n).  This is
due to the relation Hₘᵢₙ(n) = 1 + Hₘᵢₙ(n/2) where n/2 is the integer
division.  For n odd, this is readily proved — so one can build a
tree with a top node and two sub-trees with n/2 nodes of height
Hₘᵢₙ(n) - 1.  For n even, the same proof works if one first remarks
that, in that case, ⌈log₂(n+2)⌉ = ⌈log₂(n+1)⌉ — use log₂(n+1) ≤ h ∈
ℕ ⇔ 2ʰ ≥ n + 1 and the fact that 2ʰ is even for that.  This allows
to have a sub-tree with n/2 nodes.  For the other sub-tree with
n/2-1 nodes, one has to establish that Hₘᵢₙ(n/2-1) ≥ Hₘᵢₙ(n) - 2
which is easy because, if h = Hₘᵢₙ(n/2-1), then h+2 ≥ log₂(2n) ≥
log₂(n+1).</p>
<p>The above function is not the best one however.  Indeed, not every
64 bits integer can be represented exactly as a floating point
number.  Here is one that only uses integer operations:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>ceil_log2_loop</span><span class='ocaml-source'> </span><span class='ocaml-source'>log</span><span class='ocaml-source'> </span><span class='ocaml-source'>plus1</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>plus1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>log</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>log</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>ceil_log2_loop</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>log</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>plus1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>||</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>land</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>/</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>ceil_log2</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>ceil_log2_loop</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>ceil_log2_loop</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>ceil_log2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>This algorithm is still not the fastest however.  See for example
the <a href="http://www.hackersdelight.org/">Hacker's Delight</a>, section 5-3
(and 11-4).</p>
<p>Following the same idea as above, if h = <code>max_height</code> n, then one
easily deduces that <code>min_nodes</code> h ≤ n &lt; <code>min_nodes</code>(h+1).  This
yields the following code:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>max_height_search</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_height_search</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>max_height</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_height_search</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_height_search</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_height</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>Of course, since <code>min_nodes</code> is computed recursively, there is no
need to recompute everything to go from <code>min_nodes h</code> to
<code>min_nodes(h+1)</code>:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>max_height_search</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-source'>m_h</span><span class='ocaml-source'> </span><span class='ocaml-source'>m_h1</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>m_h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_height_search</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>m_h1</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>m_h1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>m_h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>max_height</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_height_search</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_height_search</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_height</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><h2>Constructing trees</h2>
<p>First, we define some convenience functions <code>fold_range</code> that folds
a function <code>f</code> on the range <code>n0</code>...<code>n1</code> i.e., it computes
<code>f (... f (f (f init n0) (n0+1)) (n0+2) ...) n1</code>.  You can think it
as performing the assignment <code>init ← f init n</code> for <code>n = n0,..., n1</code>
except that there is no mutable variable in the code.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>fold_range</span><span class='ocaml-source'> </span><span class='ocaml-source'>~</span><span class='ocaml-source'>f</span><span class='ocaml-source'> ~</span><span class='ocaml-source'>init</span><span class='ocaml-source'> </span><span class='ocaml-source'>n0</span><span class='ocaml-source'> </span><span class='ocaml-source'>n1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-source'>n1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>init</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>fold_range</span><span class='ocaml-source'> ~</span><span class='ocaml-source'>f</span><span class='ocaml-source'> ~</span><span class='ocaml-source'>init</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>(</span><span class='ocaml-source'>f</span><span class='ocaml-source'> </span><span class='ocaml-source'>init</span><span class='ocaml-source'> </span><span class='ocaml-source'>n0</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>n1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>fold_range</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>init</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>When constructing trees, there is an obvious symmetry: if one swaps
the left and right sub-trees of a balanced tree, we still have a
balanced tree.  The following function returns all trees in <code>trees</code>
together with their permutation.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>add_swap_left_right</span><span class='ocaml-source'> </span><span class='ocaml-source'>trees</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                               </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                               </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>trees</span><span class='ocaml-source'> </span><span class='ocaml-source'>trees</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>add_swap_left_right</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>Finally we generate all trees recursively, using a priori the bounds
computed above.  It could be further optimized but our aim is to
straightforwardly express the idea.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>hbal_tree_nodes_height</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>assert</span><span class='ocaml-source'>(</span><span class='ocaml-source'>min_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>add_hbal_tree_node</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>add_swap_left_right</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>add_hbal_tree_node</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>and</span><span class='ocaml-source'> </span><span class='ocaml-source'>add_hbal_tree_node</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>h1</span><span class='ocaml-source'> </span><span class='ocaml-source'>h2</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>min_n1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>max</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>min_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>h1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>h2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>max_n1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>min</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>max_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>h1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>h2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>fold_range</span><span class='ocaml-source'> </span><span class='ocaml-source'>min_n1</span><span class='ocaml-source'> </span><span class='ocaml-source'>max_n1</span><span class='ocaml-source'> ~</span><span class='ocaml-source'>init</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>l</span><span class='ocaml-source'> ~</span><span class='ocaml-source'>f</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>n1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>hbal_tree_nodes_height</span><span class='ocaml-source'> </span><span class='ocaml-source'>h1</span><span class='ocaml-source'> </span><span class='ocaml-source'>n1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>hbal_tree_nodes_height</span><span class='ocaml-source'> </span><span class='ocaml-source'>h2</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>n1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>            </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>hbal_tree_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>fold_range</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>min_height</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>max_height</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>)</span><span class='ocaml-source'> ~</span><span class='ocaml-source'>init</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> ~</span><span class='ocaml-source'>f</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev_append</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>hbal_tree_nodes_height</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>hbal_tree_nodes_height</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>add_hbal_tree_node</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>hbal_tree_nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Collect the leaves of a binary tree in a list|js}
  ; number = {js|61A|js}
  ; difficulty = `Beginner
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>A leaf is a node with no successors. Write a function <code>leaves</code> to
collect them in a list.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaves</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Having an accumulator acc prevents using inefficient List.append.
</span><span class='ocaml-comment-block'>   * Every Leaf will be pushed directly into accumulator.
</span><span class='ocaml-comment-block'>   * Not tail-recursive, but that is no problem since we have a binary tree and
</span><span class='ocaml-comment-block'>   * and stack depth is logarithmic. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>leaves</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> 
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>leaves_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>leaves_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>leaves_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>leaves_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaves</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Count the leaves of a binary tree|js}
  ; number = {js|61|js}
  ; difficulty = `Beginner
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>A leaf is a node with no successors. Write a function <code>count_leaves</code> to
count them.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>count_leaves</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>count_leaves</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>count_leaves</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>count_leaves</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>count_leaves</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Collect the nodes at a given level in a list|js}
  ; number = {js|62B|js}
  ; difficulty = `Beginner
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>A node of a binary tree is at level N if the path from the root to the
node has length N-1. The root node is at level 1. Write a function
<code>at_level t l</code> to collect all nodes of the tree <code>t</code> at level <code>l</code> in a
list.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>example_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>at_level</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_tree</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre><p>Using <code>at_level</code> it is easy to construct a function <code>levelorder</code> which
creates the level-order sequence of the nodes. However, there are more
efficient ways to do that.</p>
|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Having an accumulator acc prevents using inefficient List.append.
</span><span class='ocaml-comment-block'>   * Every node at level N will be pushed directly into accumulator.
</span><span class='ocaml-comment-block'>   * Not tail-recursive, but that is no problem since we have a binary tree and
</span><span class='ocaml-comment-block'>   * and stack depth is logarithmic. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>at_level</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>level</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>at_level_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>counter</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>counter</span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>level</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-source'>at_level_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>at_level_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>counter</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>counter</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>at_level_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>at_level</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Collect the internal nodes of a binary tree in a list|js}
  ; number = {js|62|js}
  ; difficulty = `Beginner
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>An internal node of a binary tree has either one or two non-empty
successors. Write a function <code>internals</code> to collect them in a list.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>internals</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Having an accumulator acc prevents using inefficient List.append.
</span><span class='ocaml-comment-block'>   * Every internal node will be pushed directly into accumulator.
</span><span class='ocaml-comment-block'>   * Not tail-recursive, but that is no problem since we have a binary tree and
</span><span class='ocaml-comment-block'>   * and stack depth is logarithmic. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>internals</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> 
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>internals_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>internals_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>internals_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>internals_aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>internals</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Construct a complete binary tree|js}
  ; number = {js|63|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>A <em>complete</em> binary tree with height H is defined as follows: The levels
1,2,3,...,H-1 contain the maximum number of nodes (i.e 2<sup>i-1</sup>
at the level i, note that we start counting the levels from 1 at the
root). In level H, which may contain less than the maximum possible
number of nodes, all the nodes are &quot;left-adjusted&quot;. This means that in a
levelorder tree traversal all internal nodes come first, the leaves come
second, and empty successors (the nil's which are not really nodes!)
come last.</p>
<p>Particularly, complete binary trees are used as data structures (or
addressing schemes) for heaps.</p>
<p>We can assign an address number to each node in a complete binary tree
by enumerating the nodes in levelorder, starting at the root with
number 1. In doing so, we realize that for every node X with address A
the following property holds: The address of X's left and right
successors are 2*A and 2*A+1, respectively, supposed the successors do
exist. This fact can be used to elegantly construct a complete binary
tree structure. Write a function <code>is_complete_binary_tree</code> with the
following specification: <code>is_complete_binary_tree n t</code> returns <code>true</code>
iff <code>t</code> is a complete binary tree with <code>n</code> nodes.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>complete_binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>split_n</span><span class='ocaml-source'> </span><span class='ocaml-source'>lst</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>lst</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>lst</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>split_n</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>myflatten</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> 
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>p</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>p</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>y</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>myflatten</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>ph</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>pt</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>ph</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>myflatten</span><span class='ocaml-source'> </span><span class='ocaml-source'>pt</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>invalid_arg</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>myflatten</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>complete_binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>lst</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>lst</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>split_n</span><span class='ocaml-source'> </span><span class='ocaml-source'>lst</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>lsl</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                  </span><span class='ocaml-source'>myflatten</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>hd</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>lst</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>split_n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>myflatten</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>complete_binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Layout a binary tree (1)|js}
  ; number = {js|64|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>As a preparation for drawing the tree, a layout algorithm is required to
determine the position of each node in a rectangular grid. Several
layout methods are conceivable, one of them is shown in the illustration.</p>
<p><img src="/media/problems/tree-layout1.gif" alt="Binary Tree Grid" /></p>
<p>In this layout strategy, the position of a node v is obtained by the
following two rules:</p>
<ul>
<li><em>x(v)</em> is equal to the position of the node v in the <em>inorder</em>
sequence;
</li>
<li><em>y(v)</em> is equal to the depth of the node <em>v</em> in the tree.
</li>
</ul>
<p>In order to store the position of the nodes, we will enrich the value
at each node with the position <code>(x,y)</code>.</p>
<p>The tree pictured above is</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>example_layout_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'n'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                           </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'m'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'u'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'p'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'s'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'q'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_layout_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'n'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'m'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'u'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'p'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'s'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'q'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre><pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout_binary_tree_1</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_layout_tree</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'n'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'m'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'u'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>12</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'p'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'s'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>11</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'q'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>10</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>layout_binary_tree_1</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>layout</span><span class='ocaml-source'> </span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-source'>x_left</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> This function returns a pair: the laid out tree and the first
</span><span class='ocaml-comment-block'>       * free x location </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>x_left</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>l'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l_x_max</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>x_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>r'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r_x_max</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>l_x_max</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l_x_max</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>depth</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r_x_max</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>fst</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>layout</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout_binary_tree_1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Layout a binary tree (2)|js}
  ; number = {js|65|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p><img src="/media/problems/tree-layout2.gif" alt="Binary Tree Grid" /></p>
<p>An alternative layout method is depicted in this illustration. Find
out the rules and write the corresponding OCaml function.</p>
<p>Hint: On a given level, the horizontal distance between neighbouring
nodes is constant.</p>
<p>The tree shown is</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>example_layout_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'n'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                           </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'m'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'u'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'p'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'q'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_layout_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'n'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'m'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'u'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'p'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'q'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre><pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout_binary_tree_2</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_layout_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'n'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>15</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'m'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>11</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'u'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>23</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'p'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>19</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'q'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>21</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>layout_binary_tree_2</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>height</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>max</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>height</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>height</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>tree_height</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>height</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>find_missing_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>tree_height</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>depth</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>find_missing_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>translate_dst</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>lsl</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>find_missing_left</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                        </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> remember than 1 lsl a = 2ᵃ </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>layout</span><span class='ocaml-source'> </span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-source'>x_root</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>spacing</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>lsl</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>tree_height</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>l'</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x_root</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>spacing</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>and</span><span class='ocaml-source'> </span><span class='ocaml-source'>r'</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x_root</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>spacing</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>x_root</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>depth</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>r'</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>layout</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>lsl</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>tree_height</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>translate_dst</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout_binary_tree_2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Layout a binary tree (3)|js}
  ; number = {js|66|js}
  ; difficulty = `Advanced
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p><img src="/media/problems/tree-layout3.gif" alt="Binary Tree Grid" /></p>
<p>Yet another layout strategy is shown in the above illustration. The
method yields a very compact layout while maintaining a certain symmetry
in every node. Find out the rules and write the corresponding
predicate.</p>
<p>Hint: Consider the horizontal distance between a node and its successor
nodes. How tight can you pack together two subtrees to construct the
combined binary tree? This is a difficult problem. Don't give up too
early!</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>example_layout_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'n'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                           </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'m'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'u'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'p'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'s'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'q'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_layout_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'n'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'m'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'u'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'p'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'s'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'q'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout_binary_tree_3</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_layout_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'n'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'m'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'u'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'p'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'s'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'q'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre><p>Which layout do you like most?</p>
|js}
  ; solution = {js|<p>In order to pack the tree tightly, the layout function will return
in addition to the layout of the tree the left and right profiles of
the tree, that is lists of offsets relative to the position of the
root node of the tree.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>layout_binary_tree_3</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>translate_x</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>translate_x</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>translate_x</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Distance between a left subtree given by its right profile [lr]
</span><span class='ocaml-comment-block'>       and a right subtree given by its left profile [rl]. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>dist</span><span class='ocaml-source'> </span><span class='ocaml-source'>lr</span><span class='ocaml-source'> </span><span class='ocaml-source'>rl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>lr</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>rl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>lrx</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>ltl</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>rlx</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>rtl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>max</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>lrx</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>rlx</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>dist</span><span class='ocaml-source'> </span><span class='ocaml-source'>ltl</span><span class='ocaml-source'> </span><span class='ocaml-source'>rtl</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>merge_profiles</span><span class='ocaml-source'> </span><span class='ocaml-source'>p1</span><span class='ocaml-source'> </span><span class='ocaml-source'>p2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>p1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>p2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>x1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>x1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>merge_profiles</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl1</span><span class='ocaml-source'> </span><span class='ocaml-source'>tl2</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>p2</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>p1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>layout</span><span class='ocaml-source'> </span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>ll</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>lr</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>rl</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>rr</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>depth</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>dist</span><span class='ocaml-source'> </span><span class='ocaml-source'>lr</span><span class='ocaml-source'> </span><span class='ocaml-source'>rl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>/</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>ll</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>ll</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>and</span><span class='ocaml-source'> </span><span class='ocaml-source'>lr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>lr</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>and</span><span class='ocaml-source'> </span><span class='ocaml-source'>rl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>rl</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>and</span><span class='ocaml-source'> </span><span class='ocaml-source'>rr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>rr</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>merge_profiles</span><span class='ocaml-source'> </span><span class='ocaml-source'>ll</span><span class='ocaml-source'> </span><span class='ocaml-source'>rl</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>depth</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>translate_x</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'>d</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>translate_x</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-source'>r'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>merge_profiles</span><span class='ocaml-source'> </span><span class='ocaml-source'>rr</span><span class='ocaml-source'> </span><span class='ocaml-source'>lr</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>             </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>x_min</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>min</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>             </span><span class='ocaml-source'>translate_x</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>x_min</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>layout_binary_tree_3</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|A string representation of binary trees|js}
  ; number = {js|67|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p><img src="/media/problems/binary-tree.gif" alt="Binary Tree" /></p>
<p>Somebody represents binary trees as strings of the following type (see
example): <code>&quot;a(b(d,e),c(,f(g,)))&quot;</code>.</p>
<ul>
<li>Write an OCaml function <code>string_of_tree</code> which generates this
string representation,
if the tree is given as usual (as <code>Empty</code> or <code>Node(x,l,r)</code> term).
Then write a function <code>tree_of_string</code> which does this inverse;
i.e. given the string
representation, construct the tree in the usual form. Finally,
combine the two predicates in a single function <code>tree_string</code> which
can be used in both directions.
</li>
<li>Write the same predicate <code>tree_string</code> using difference lists and a
single predicate <code>tree_dlist</code> which does the conversion between a
tree and a difference list in both directions.
</li>
</ul>
<p>For simplicity, suppose the information in the nodes is a single letter
and there are no spaces in the string.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>example_layout_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>leaf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_layout_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<p>A simple solution is:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'>(</span><span class='ocaml-source'>data</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>data</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>String</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>make</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>data</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>data</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>data</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>^</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>(</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>^</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-keyword-operator'>^</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>,</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>^</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>^</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>)</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>One can also use a buffer to allocate a lot less memory:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>buffer_add_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>()</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>data</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>data</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>()</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'('</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-source'>buffer_add_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>','</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-source'>buffer_add_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>')'</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>buf</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>create</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>128</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>buffer_add_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>contents</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>buffer_add_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>unit</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>For the reverse conversion, we assume that the string is well formed
and do not deal with error reporting.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>tree_of_string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>make</span><span class='ocaml-source'> </span><span class='ocaml-source'>ofs</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>ofs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>String</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>||</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>[</span><span class='ocaml-source'>ofs</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>','</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>||</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>[</span><span class='ocaml-source'>ofs</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>')'</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>ofs</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>v</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>[</span><span class='ocaml-source'>ofs</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>ofs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>String</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>[</span><span class='ocaml-source'>ofs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'('</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>ofs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>make</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>ofs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> skip </span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'>v(</span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'> </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>ofs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>make</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>ofs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> skip </span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'>,</span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'> </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>            </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>ofs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> skip </span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'>)</span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'> </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>ofs</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>fst</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>make</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>tree_of_string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Preorder and inorder sequences of binary trees|js}
  ; number = {js|68|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>We consider binary trees with nodes that are identified by single
lower-case letters, as in the example of the previous problem.</p>
<ol>
<li>Write functions <code>preorder</code> and <code>inorder</code>
that construct the
<a href="https://en.wikipedia.org/wiki/Tree_traversal#Pre-order">preorder</a>
and
<a href="https://en.wikipedia.org/wiki/Tree_traversal#In-order_.28symmetric.29">inorder</a>
sequence of a given binary tree, respectively. The
results should be atoms, e.g. 'abdecfg' for the preorder sequence of
the example in the previous problem.
</li>
<li>Can you use <code>preorder</code> from problem part 1 in the reverse
direction; i.e. given a preorder sequence, construct a corresponding
tree? If not, make the necessary arrangements.
</li>
<li>If both the preorder sequence and the inorder sequence of the nodes
of a binary tree are given, then the tree is determined
unambiguously. Write a function <code>pre_in_tree</code> that does the job.
</li>
<li>Solve problems 1 to 3 using
<a href="https://en.wikipedia.org/wiki/Difference_list">difference lists</a>.
Cool!  Use the
function <code>timeit</code> (defined in problem “<a href="#ComparethetwomethodsofcalculatingEuler39stotientfunctioneasy">Compare the two methods of
calculating Euler's totient function.</a>”) to compare the
solutions.
</li>
</ol>
<p>What happens if the same character appears in more than one node. Try
for instance <code>pre_in_tree &quot;aba&quot; &quot;baa&quot;</code>.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>preorder</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<p>We use lists to represent the result. Note that <code>preorder</code> and <code>inorder</code> can be made more efficient by avoiding list concatenations.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>preorder</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>v</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>preorder</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>@</span><span class='ocaml-source'> </span><span class='ocaml-source'>preorder</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>inorder</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>inorder</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>@</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>v</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>inorder</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>split_pre_in</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-source'>accp</span><span class='ocaml-source'> </span><span class='ocaml-source'>acci</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>p</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>accp</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>acci</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>h1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>h2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>h2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>tl</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>accp</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>tl</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acci</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>split_pre_in</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>accp</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>acci</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>assert</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>pre_in_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>p</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t1</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>lp</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>rp</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>li</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>ri</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>split_pre_in</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-source'>h1</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-constant-language-capital-identifier'>Node</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>h1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>pre_in_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>lp</span><span class='ocaml-source'> </span><span class='ocaml-source'>li</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>pre_in_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>rp</span><span class='ocaml-source'> </span><span class='ocaml-source'>ri</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>invalid_arg</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>pre_in_tree</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>preorder</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>inorder</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>split_pre_in</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>pre_in_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>binary_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre><p>Solution using
<a href="https://en.wikipedia.org/wiki/Difference_list">difference lists</a>.</p>
<pre><code><span class='ocaml-source'>  </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> solution pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Dotstring representation of binary trees|js}
  ; number = {js|69|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["binary-tree"]
  ; statement = {js|<p>We consider again binary trees with nodes that are identified by single
lower-case letters, as in the example of problem “<a href="#Astringrepresentationofbinarytreesmedium">A string
representation of binary trees</a>”. Such a tree can be
represented by the preorder sequence of its nodes in which dots (.) are
inserted where an empty subtree (nil) is encountered during the tree
traversal. For example, the tree shown in problem “<a href="#Astringrepresentationofbinarytreesmedium">A string
representation of binary trees</a>” is represented as
'abd..e..c.fg...'. First, try to establish a syntax (BNF or syntax
diagrams) and then write a function <code>tree_dotstring</code> which does the
conversion in both directions. Use difference lists.</p>
|js}
  ; solution = {js|<pre><code><span class='ocaml-source'>  </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> solution pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Count the nodes of a multiway tree|js}
  ; number = {js|70C|js}
  ; difficulty = `Beginner
  ; tags = 
 ["multiway-tree"]
  ; statement = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>count_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>count_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>sub</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>count_nodes</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>sub</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>count_nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Tree construction from a node string|js}
  ; number = {js|70|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["multiway-tree"]
  ; statement = {js|<p><img src="/media/problems/multiway-tree.gif" alt="Multiway Tree" /></p>
<p><em>A multiway tree is composed of a root element and a (possibly empty)
set of successors which are multiway trees themselves. A multiway tree
is never empty. The set of successor trees is sometimes called a
forest.</em></p>
<p>To represent multiway trees, we will use the following type which is a
direct translation of the definition:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>of</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>
</span></code></pre><p>The example tree depicted opposite is therefore represented by the
following OCaml expression:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre><p>We suppose that the nodes of a multiway tree contain single characters.
In the depth-first order sequence of its nodes, a special character <code>^</code>
has been inserted whenever, during the tree traversal, the move is a
backtrack to the previous level.</p>
<p>By this rule, the tree in the figure opposite is represented as:
<code>afg^^c^bd^e^^^</code>.</p>
<p>Write functions <code>string_of_tree : char mult_tree -&gt; string</code> to construct
the string representing the tree and
<code>tree_of_string : string -&gt; char mult_tree</code> to construct the tree when
the string is given.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> We could build the final string by string concatenation but
</span><span class='ocaml-comment-block'>     this is expensive due to the number of operations.  We use a
</span><span class='ocaml-comment-block'>     buffer instead. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>add_string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>c</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>sub</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>iter</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>add_string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>sub</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'^'</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>buf</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>create</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>128</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>add_string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>contents</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>add_string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>unit</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>string_of_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Determine the internal path length of a tree|js}
  ; number = {js|71|js}
  ; difficulty = `Beginner
  ; tags = 
 ["multiway-tree"]
  ; statement = {js|<p>We define the internal path length of a multiway tree as the total sum
of the path lengths from the root to all nodes of the tree. By this
definition, the tree <code>t</code> in the figure of the previous problem has an
internal path length of 9. Write a function <code>ipl tree</code> that returns the
internal path length of <code>tree</code>.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>ipl</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>ipl_sub</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'>(</span><span class='ocaml-constant-language'>_</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>sub</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> [len] is the distance of the current node to the root.  Add the
</span><span class='ocaml-comment-block'>       distance of all sub-nodes. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>sum</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>sum</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>ipl_sub</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>len</span><span class='ocaml-source'> </span><span class='ocaml-source'>sub</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>ipl</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>ipl_sub</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>ipl_sub</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>ipl</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Construct the bottom-up order sequence of the tree nodes|js}
  ; number = {js|72|js}
  ; difficulty = `Beginner
  ; tags = 
 ["multiway-tree"]
  ; statement = {js|<p>Write a function <code>bottom_up t</code> which constructs the bottom-up sequence
of the nodes of the multiway tree <code>t</code>.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>bottom_up</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>bottom_up</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>prepend_bottom_up</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>c</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>sub</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_right</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>prepend_bottom_up</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>sub</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>bottom_up</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>prepend_bottom_up</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>prepend_bottom_up</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>bottom_up</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Lisp-like tree representation|js}
  ; number = {js|73|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["multiway-tree"]
  ; statement = {js|<p>There is a particular notation for multiway trees in Lisp. The
picture shows how multiway tree structures are represented in Lisp.</p>
<p><img src="/media/problems/lisp-like-tree.png" alt="Lisp representation of trees" /></p>
<p>Note that in the &quot;lispy&quot; notation a node with successors (children) in
the tree is always the first element in a list, followed by its
children. The &quot;lispy&quot; representation of a multiway tree is a sequence of
atoms and parentheses '(' and ')'. This is very close to the way trees
are represented in OCaml, except that no constructor <code>T</code> is used. Write
a function <code>lispy : char mult_tree -&gt; string</code> that returns the
lispy notation of the tree.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>lispy</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>a</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>lispy</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>(a b)</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>lispy</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>(a (f g) c (b d e))</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>add_lispy</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'>(</span><span class='ocaml-source'>c</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>T</span><span class='ocaml-source'>(</span><span class='ocaml-source'>c</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>sub</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'('</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>iter</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>' '</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>add_lispy</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>sub</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add_char</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>')'</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>lispy</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>buf</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>create</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>128</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>add_lispy</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>contents</span><span class='ocaml-source'> </span><span class='ocaml-source'>buf</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>add_lispy</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Buffer</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>unit</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>lispy</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>mult_tree</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Conversions|js}
  ; number = {js|80|js}
  ; difficulty = `Beginner
  ; tags = 
 ["graph"]
  ; statement = {js|<p><img src="/media/problems/graph1.gif" alt="A graph" /></p>
<p><em>A graph is defined as a set of nodes and a set of edges, where each
edge is a pair of different nodes.</em></p>
<p>There are several ways to represent graphs in OCaml.</p>
<ul>
<li>One method is to list all edges, an edge being a pair of nodes. In
this form, the graph depicted opposite is represented as the
following expression:
</li>
</ul>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre><p>We call this <strong>edge-clause form</strong>. Obviously, isolated nodes cannot
be represented.</p>
<ul>
<li>Another method is to represent the whole graph as one data object.
According to the definition of the graph as a pair of two sets
(nodes and edges), we may use the following OCaml type:
</li>
</ul>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>  </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>}</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> { </span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> }
</span></code></pre><p>Then, the above example graph is represented by:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>example_graph</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_graph</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}
</span></code></pre><p>We call this <strong>graph-term form</strong>. Note, that the lists are kept
sorted, they are really sets, without duplicated elements. Each edge
appears only once in the edge list; i.e. an edge from a node x to
another node y is represented as <code>(x, y)</code>, the couple <code>(y, x)</code> is not
present. The <strong>graph-term form is our default representation.</strong> You
may want to define a similar type using sets instead of lists.</p>
<ul>
<li>A third representation method is to associate with each node the set
of nodes that are adjacent to that node. We call this the
<strong>adjacency-list form</strong>. In our example:
</li>
</ul>
<pre><code><span class='ocaml-source'>    </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> example pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span></code></pre><ul>
<li>The representations we introduced so far well suited for automated
processing, but their syntax is not very user-friendly. Typing the
terms by hand is cumbersome and error-prone. We can define a more
compact and &quot;human-friendly&quot; notation as follows: A graph (with char
labelled nodes) is represented by a string of atoms and terms of the
type X-Y. The atoms stand for isolated nodes, the X-Y terms describe
edges. If an X appears as an endpoint of an edge, it is
automatically defined as a node. Our example could be written as:
</li>
</ul>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b-c f-c g-h d f-b k-f h-g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>b-c f-c g-h d f-b k-f h-g</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span></code></pre><p>We call this the <strong>human-friendly form</strong>. As the example shows, the
list does not have to be sorted and may even contain the same edge
multiple times. Notice the isolated node <code>d</code>.</p>
<p>Write functions to convert between the different graph representations.
With these functions, all representations are equivalent; i.e. for the
following problems you can always pick freely the most convenient form.
This problem is not particularly difficult, but it's a lot of work to
deal with all the special cases.</p>
|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> example pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Path from one node to another one|js}
  ; number = {js|81|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["graph"]
  ; statement = {js|<p>Write a function <code>paths g a b</code> that returns all acyclic path <code>p</code> from
node <code>a</code> to node <code>b ≠ a</code> in the graph <code>g</code>. The function should return
the list of all paths via backtracking.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>example_graph</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_graph</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>paths</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_graph</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> The datastructures used here are far from the most efficient ones
</span><span class='ocaml-comment-block'>     but allow for a straightforward implementation. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> Returns all neighbors satisfying the condition. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>neighbors</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>cond</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>edge</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>b</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>cond</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                        </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>cond</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                        </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>edge</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>edges</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>list_path</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>to_b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>to_b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>assert</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> [to_b] contains the path to [b]. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>a'</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>a'</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>to_b</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>       </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>neighbors</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-source'>a'</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>not</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>mem</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-source'>to_b</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>concat</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>list_path</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>to_b</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>paths</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>assert</span><span class='ocaml-source'>(</span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><></span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>list_path</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>b</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>neighbors</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>list_path</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>paths</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Cycle from a given node|js}
  ; number = {js|82|js}
  ; difficulty = `Beginner
  ; tags = 
 ["graph"]
  ; statement = {js|<p>Write a functions <code>cycle g a</code> that returns a closed path (cycle) <code>p</code>
starting at a given node <code>a</code> in the graph <code>g</code>. The predicate should
return the list of all cycles via backtracking.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>example_graph</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_graph</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}
</span><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>cycles</span><span class='ocaml-source'> </span><span class='ocaml-source'>example_graph</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'k'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>cycles</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>neighbors</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>p</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>concat</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>list_path</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-source'>a</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>c</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>map</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>@</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>a</span><span class='ocaml-source'>]</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>p</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>cycles</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Construct all spanning trees|js}
  ; number = {js|83|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["graph"]
  ; statement = {js|<p><img src="/media/problems/spanning-tree-graph1.gif" alt="Spanning tree graph" /></p>
<p>Write a function <code>s_tree g</code> to construct (by backtracking) all <a href="http://en.wikipedia.org/wiki/Spanning_tree">spanning
trees</a> of a given graph <code>g</code>.
With this predicate, find out how many spanning trees there are for the
graph depicted to the left. The data of this example graph can be found
in the test below. When you have a correct solution for the <code>s_tree</code>
function, use it to define two other useful functions: <code>is_tree graph</code>
and <code>is_connected Graph</code>. Both are five-minutes tasks!</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>g</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                  </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                  </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> solution pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Construct the minimal spanning tree|js}
  ; number = {js|84|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["graph"]
  ; statement = {js|<p><img src="/media/problems/spanning-tree-graph2.gif" alt="Spanning tree graph" /></p>
<p>Write a function <code>ms_tree graph</code> to construct the minimal spanning tree
of a given labelled graph. A labelled graph will be represented as
follows:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'b</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>labeled_graph</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                               </span><span class='ocaml-source'>labeled_edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'b</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>}</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'b</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>labeled_graph</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> {
</span><span class='ocaml-source'>  </span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-source'>labeled_edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'b</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>}
</span></code></pre><p>(Beware that from now on <code>nodes</code> and <code>edges</code> mask the previous fields of
the same name.)</p>
<p>Hint: Use the <a href="http://en.wikipedia.org/wiki/Prim%27s_algorithm">algorithm of Prim</a>.
A small modification of the solution of P83 does the trick. The data of the
example graph to the right can be found below.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>g</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>labeled_edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                          </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                          </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                          </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-support-type'>char</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>labeled_graph</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-source'>labeled_edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'b'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'c'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'d'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'e'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'f'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'g'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'h'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> solution pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Graph isomorphism|js}
  ; number = {js|85|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["graph"]
  ; statement = {js|<p>Two graphs G1(N1,E1) and G2(N2,E2) are isomorphic if there is a
bijection f: N1 → N2 such that for any nodes X,Y of N1, X and Y are
adjacent if and only if f(X) and f(Y) are adjacent.</p>
<p>Write a function that determines whether two graphs are isomorphic.
Hint: Use an open-ended list to represent the function f.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>g</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                  </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>graph_term</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  {</span><span class='ocaml-source'>nodes</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>   </span><span class='ocaml-source'>edges</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>[</span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>     </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'>}
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> solution pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Node degree and graph coloration|js}
  ; number = {js|86|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["graph"]
  ; statement = {js|<ul>
<li>Write a function <code>degree graph node</code> that determines the degree of a
given node.
</li>
<li>Write a function that generates a list of all nodes of a graph
sorted according to decreasing degree.
</li>
<li>Use <a href="http://en.wikipedia.org/wiki/Graph_coloring#Greedy_coloring">Welsh-Powell's
algorithm</a>
to paint the nodes of a graph in such a way that adjacent nodes have
different colors.
</li>
</ul>
|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> example pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Depth-first order graph traversal|js}
  ; number = {js|87|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["graph"]
  ; statement = {js|<p>Write a function that generates a
<a href="https://en.wikipedia.org/wiki/Depth-first_search">depth-first order graph traversal</a>
sequence. The starting point should be specified, and the output should
be a list of nodes that are reachable from this starting point (in
depth-first order).</p>
<p>Specifically, the graph will be provided by its
<a href="https://en.wikipedia.org/wiki/Adjacency_list">adjacency-list representation</a>
and you must create a module <code>M</code> with the following signature:</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>module</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>GRAPH</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>sig</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    type node = char
</span><span class='ocaml-source'>    type t
</span><span class='ocaml-source'>    val of_adjacency : (node * node list) list -> t
</span><span class='ocaml-source'>    val dfs_fold : t -> node -> ('a -> node -> 'a) -> 'a -> 'a
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>end</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>module</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>GRAPH</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>sig</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    type node = char
</span><span class='ocaml-source'>    type t
</span><span class='ocaml-source'>    val of_adjacency : (node * node list) list -> t
</span><span class='ocaml-source'>    val dfs_fold : t -> node -> ('a -> node -> 'a) -> 'a -> 'a
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>end</span><span class='ocaml-source'>
</span></code></pre><p>where <code>M.dfs_fold g n f a</code> applies <code>f</code> on the nodes of the graph
<code>g</code> in depth first order, starting with node <code>n</code>.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>g</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>M</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>of_adjacency</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'u'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'v'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'v'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>      </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'y'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'w'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'z'</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'y'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>      </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'v'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'y'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>      </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'x'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'z'</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>      </span><span class='ocaml-source'>[</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'z'</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>M</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'>abstr</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<p>In a depth-first search you fully explore the edges of the most
recently discovered node <em>v</em> before 'backtracking' to explore edges
leaving the node from which <em>v</em> was discovered. To do a depth-first
search means keeping careful track of what vertices have been visited
and when.</p>
<p>We compute timestamps for each vertex discovered in the search. A
discovered vertex has two timestamps associated with it : its
discovery time (in map <code>d</code>) and its finishing time (in map <code>f</code>) (a
vertex is finished when its adjacency list has been completely
examined). These timestamps are often useful in graph algorithms and
aid in reasoning about the behavior of depth-first search.</p>
<p>We color nodes during the search to help in the bookkeeping (map
<code>color</code>). All vertices of the graph are initially <code>White</code>. When a
vertex is discovered it is marked <code>Gray</code> and when it is finished, it
is marked <code>Black</code>.</p>
<p>If vertex <em>v</em> is discovered in the adjacency list of previously
discovered node <em>u</em>, this fact is recorded in the predecessor subgraph
(map <code>pred</code>).</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>module</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>M</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>GRAPH</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>struct</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>module</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-constant-language-capital-identifier'>Make</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Char</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>node</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>node</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>of_adjacency</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> 
</span><span class='ocaml-source'>      </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_right</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>empty</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>colors</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>White</span><span class='ocaml-keyword-other'>|</span><span class='ocaml-constant-language-capital-identifier'>Gray</span><span class='ocaml-keyword-other'>|</span><span class='ocaml-constant-language-capital-identifier'>Black</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-source'> </span><span class='ocaml-source'>state</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> {
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'>discovery time</span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>f</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'>finishing time</span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>pred</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>char</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'>predecessor</span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>color</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>colors</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'>vertex colors</span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-storage-type'>'a</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'>user specified type used by 'fold'</span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    }
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>dfs_fold</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-source'>fn</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>dfs_visit</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>u</span><span class='ocaml-source'> {</span><span class='ocaml-source'>d</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>pred</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>color</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>} </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>edge</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>state</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>v</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>find</span><span class='ocaml-source'> </span><span class='ocaml-source'>v</span><span class='ocaml-source'> </span><span class='ocaml-source'>state</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>color</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>White</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>            </span><span class='ocaml-source'>dfs_visit</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>v</span><span class='ocaml-source'> {</span><span class='ocaml-source'>state</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'> </span><span class='ocaml-source'>pred</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add</span><span class='ocaml-source'> </span><span class='ocaml-source'>v</span><span class='ocaml-source'> </span><span class='ocaml-source'>u</span><span class='ocaml-source'> </span><span class='ocaml-source'>state</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>pred</span><span class='ocaml-source'>}
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>  </span><span class='ocaml-source'>(</span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>state</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> {</span><span class='ocaml-source'>d</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>pred</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>color</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>} </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>edge</span><span class='ocaml-source'>
</span><span class='ocaml-source'>            </span><span class='ocaml-source'>(</span><span class='ocaml-source'>t</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> {</span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add</span><span class='ocaml-source'> </span><span class='ocaml-source'>u</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>d</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-source'>pred</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>color</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add</span><span class='ocaml-source'> </span><span class='ocaml-source'>u</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Gray</span><span class='ocaml-source'> </span><span class='ocaml-source'>color</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>fn</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'> </span><span class='ocaml-source'>u</span><span class='ocaml-source'>}</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>            </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>find</span><span class='ocaml-source'> </span><span class='ocaml-source'>u</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> {</span><span class='ocaml-source'>d</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add</span><span class='ocaml-source'> </span><span class='ocaml-source'>u</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-source'>f</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>pred</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>             </span><span class='ocaml-source'>color</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add</span><span class='ocaml-source'> </span><span class='ocaml-source'>u</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Black</span><span class='ocaml-source'> </span><span class='ocaml-source'>color</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>}
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>v</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_left</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>k</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                             </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>bindings</span><span class='ocaml-source'> </span><span class='ocaml-source'>g</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>let</span><span class='ocaml-source'> </span><span class='ocaml-source'>initial_state</span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> 
</span><span class='ocaml-source'>        {</span><span class='ocaml-source'>d</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>empty</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>f</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>empty</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>pred</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>empty</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>color</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fold_right</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>add</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>White</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                                 </span><span class='ocaml-source'>v</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Char_map</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>empty</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>acc</span><span class='ocaml-source'>}
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>(</span><span class='ocaml-source'>snd</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>dfs_visit</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-source'>initial_state</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>acc</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>end</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>module</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>M</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>GRAPH</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Connected components|js}
  ; number = {js|88|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["graph"]
  ; statement = {js|<p>Write a predicate that splits a graph into its <a href="http://en.wikipedia.org/wiki/Connected_component_%28graph_theory%29">connected
components</a>.</p>
|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> example pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Bipartite graphs|js}
  ; number = {js|89|js}
  ; difficulty = `Intermediate
  ; tags = 
 ["graph"]
  ; statement = {js|<p>Write a predicate that finds out whether a given graph is
<a href="http://en.wikipedia.org/wiki/Bipartite_graph">bipartite</a>.</p>
|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> example pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Generate K-regular simple graphs with N nodes|js}
  ; number = {js|90|js}
  ; difficulty = `Advanced
  ; tags = 
 ["graph"]
  ; statement = {js|<p>In a <a href="http://en.wikipedia.org/wiki/K-regular_graph">K-regular graph</a> all
nodes have a degree of K; i.e. the number of edges incident in each node
is K. How many (non-isomorphic!) 3-regular graphs with 6 nodes are
there?</p>
<p>See also the <a href="https://sites.google.com/site/prologsite/prolog-problems/6/solutions-6/p6_11.txt?attredirects=0&amp;d=1">table of results</a>.</p>
|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> example pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Eight queens problem|js}
  ; number = {js|91|js}
  ; difficulty = `Intermediate
  ; tags = 
 []
  ; statement = {js|<p>This is a classical problem in computer science. The objective is to
place eight queens on a chessboard so that no two queens are attacking
each other; i.e., no two queens are in the same row, the same column, or
on the same diagonal.</p>
<p>Hint: Represent the positions of the queens as a list of numbers 1..N.
Example: <code>[4; 2; 7; 3; 6; 8; 5; 1]</code> means that the queen in the first column is
in row 4, the queen in the second column is in row 2, etc. Use the
generate-and-test paradigm.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>queens_positions</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<p>This is a brute force algorithm enumerating all possible solutions.
For a deeper analysis, look for example to
<a href="https://en.wikipedia.org/wiki/Eight_queens_puzzle">Wikipedia</a>.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>possible</span><span class='ocaml-source'> </span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-source'>col</span><span class='ocaml-source'> </span><span class='ocaml-source'>used_rows</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD1</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-source'>not</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>mem</span><span class='ocaml-source'> </span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-source'>used_rows</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-operator'>||</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>mem</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>col</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD1</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-operator'>||</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>mem</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>col</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD2</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>queens_positions</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-source'>col</span><span class='ocaml-source'> </span><span class='ocaml-source'>used_rows</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD1</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>col</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>rev</span><span class='ocaml-source'> </span><span class='ocaml-source'>used_rows</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>col</span><span class='ocaml-source'> </span><span class='ocaml-source'>used_rows</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD1</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD2</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-operator'>@</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>possible</span><span class='ocaml-source'> </span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-source'>col</span><span class='ocaml-source'> </span><span class='ocaml-source'>used_rows</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD1</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>             </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>col</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>used_rows</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>col</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                 </span><span class='ocaml-source'>(</span><span class='ocaml-source'>row</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>col</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>usedD2</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'> </span><span class='ocaml-source'>aux</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>possible</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>queens_positions</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-source'>list</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Knight's tour|js}
  ; number = {js|92|js}
  ; difficulty = `Intermediate
  ; tags = 
 []
  ; statement = {js|<p>Another famous problem is this one: How can a knight jump on an N×N
chessboard in such a way that it visits every square exactly once?</p>
<p>Hints: Represent the squares by pairs of their coordinates <code>(x,y)</code>,
where both <code>x</code> and <code>y</code> are integers between 1 and N. Define the function
<code>jump n (x,y)</code> that returns all coordinates <code>(u,v)</code> to which a
knight can jump from <code>(x,y)</code> to on a <code>n</code>×<code>n</code> chessboard. And finally,
represent the solution of our problem as a list knight positions (the
knight's tour).</p>
|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> example pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Von Koch's conjecture|js}
  ; number = {js|93|js}
  ; difficulty = `Advanced
  ; tags = 
 []
  ; statement = {js|<p>Several years ago I met a mathematician who was intrigued by a problem
for which he didn't know a solution. His name was Von Koch, and I don't
know whether the problem has been solved since.</p>
<p><img src="/media/problems/von-koch1.gif" alt="Tree numbering" /></p>
<p>Anyway, the puzzle goes like this: Given a tree with N nodes (and hence
N-1 edges). Find a way to enumerate the nodes from 1 to N and,
accordingly, the edges from 1 to N-1 in such a way, that for each edge K
the difference of its node numbers equals to K. The conjecture is that
this is always possible.</p>
<p>For small trees the problem is easy to solve by hand. However, for
larger trees, and 14 is already very large, it is extremely difficult to
find a solution. And remember, we don't know for sure whether there is
always a solution!</p>
<p><img src="/media/problems/von-koch2.gif" alt="Larger tree" /></p>
<p>Write a function that calculates a numbering scheme for a given tree.
What is the solution for the larger tree pictured here?</p>
|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> example pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|An arithmetic puzzle|js}
  ; number = {js|94|js}
  ; difficulty = `Advanced
  ; tags = 
 []
  ; statement = {js|<p>Given a list of integer numbers, find a correct way of inserting
arithmetic signs (operators) such that the result is a correct equation.
Example: With the list of numbers <code>[2; 3; 5; 7; 11]</code> we can form the
equations 2 - 3 + 5 + 7 = 11 or 2 = (3 * 5 + 7) / 11 (and ten others!).</p>
|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> example pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|English number words|js}
  ; number = {js|95|js}
  ; difficulty = `Intermediate
  ; tags = 
 []
  ; statement = {js|<p>On financial documents, like cheques, numbers must sometimes be written
in full words. Example: 175 must be written as one-seven-five. Write a
function <code>full_words</code> to print (non-negative) integer numbers in full
words.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>full_words</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>175</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>one-seven-five</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>full_words</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>digit</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>[|</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>zero</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>one</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>two</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>three</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>four</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>five</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>six</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                  </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>seven</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>eight</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>nine</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>|]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>words</span><span class='ocaml-source'> </span><span class='ocaml-source'>w</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>w</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>digit</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'>)</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>w</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>words</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>digit</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>10</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>w</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>/</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>10</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>String</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>concat</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>-</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>words</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-source'>n</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>full_words</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Syntax checker|js}
  ; number = {js|96|js}
  ; difficulty = `Intermediate
  ; tags = 
 []
  ; statement = {js|<p><img src="/media/problems/syntax-graph.gif" alt="Syntax graph" /></p>
<p>In a certain programming language (Ada) identifiers are defined by the
syntax diagram (railroad chart) opposite. Transform the syntax diagram
into a system of syntax diagrams which do not contain loops; i.e. which
are purely recursive. Using these modified diagrams, write a function
<code>identifier : string -&gt; bool</code> that can check whether or not a given
string is a legal identifier.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>identifier</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>this-is-a-long-identifier</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>identifier</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>is_letter</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'a'</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'z'</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>is_letter_or_digit</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_letter</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>||</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-string-quoted-other-ocaml constant-character'>'0'</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'9'</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>is_valid</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-source'>not_after_dash</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>not_after_dash</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_letter_or_digit</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>[</span><span class='ocaml-source'>i</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_valid</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>[</span><span class='ocaml-source'>i</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-other-ocaml constant-character'>'-'</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>not_after_dash</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_valid</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>String</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>length</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_letter</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>[</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_valid</span><span class='ocaml-source'> </span><span class='ocaml-source'>s</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>n</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'>)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>identifier</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>string</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-support-type'>bool</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Sudoku|js}
  ; number = {js|97|js}
  ; difficulty = `Intermediate
  ; tags = 
 []
  ; statement = {js|<p>Sudoku puzzles go like this:</p>
<pre><code class="language-text">   Problem statement                 Solution

    .  .  4 | 8  .  . | .  1  7      9  3  4 | 8  2  5 | 6  1  7
            |         |                      |         |
    6  7  . | 9  .  . | .  .  .      6  7  2 | 9  1  4 | 8  5  3
            |         |                      |         |
    5  .  8 | .  3  . | .  .  4      5  1  8 | 6  3  7 | 9  2  4
    --------+---------+--------      --------+---------+--------
    3  .  . | 7  4  . | 1  .  .      3  2  5 | 7  4  8 | 1  6  9
            |         |                      |         |
    .  6  9 | .  .  . | 7  8  .      4  6  9 | 1  5  3 | 7  8  2
            |         |                      |         |
    .  .  1 | .  6  9 | .  .  5      7  8  1 | 2  6  9 | 4  3  5
    --------+---------+--------      --------+---------+--------
    1  .  . | .  8  . | 3  .  6      1  9  7 | 5  8  2 | 3  4  6
            |         |                      |         |
    .  .  . | .  .  6 | .  9  1      8  5  3 | 4  7  6 | 2  9  1
            |         |                      |         |
    2  4  . | .  .  1 | 5  .  .      2  4  6 | 3  9  1 | 5  7  8
</code></pre>
<p>Every spot in the puzzle belongs to a (horizontal) row and a (vertical)
column, as well as to one single 3x3 square (which we call &quot;square&quot; for
short). At the beginning, some of the spots carry a single-digit number
between 1 and 9. The problem is to fill the missing spots with digits in
such a way that every number between 1 and 9 appears exactly once in
each row, in each column, and in each square.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> The board representation is not imposed.  Here </span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'>0</span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'> stands for </span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'>.</span><span class='ocaml-comment-block'>"</span><span class='ocaml-comment-block'> </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<p>A simple way of resolving this is to use brute force.
The idea is to start filling with available values in each case and
test if it works.  When there is no available values, it means we
made a mistake so we go back to the last choice we made, and try a
different choice.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>open</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Printf</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>module</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Board</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>struct</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-support-type'>int</span><span class='ocaml-source'> </span><span class='ocaml-source'>array</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> 9×9, row-major representation.  A value of 0
</span><span class='ocaml-comment-block'>                          means undecided. </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>is_valid</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>c</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>get</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>get_as_string</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>get</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_valid</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>string_of_int</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>.</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>with_val</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>v</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Array</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>copy</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>b</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><-</span><span class='ocaml-source'> </span><span class='ocaml-source'>v</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>b</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>of_list</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Array</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>make</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>81</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>iteri</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>List</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>iteri</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>b</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>*</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><-</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>&&</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>e</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>r</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>b</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>print</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>for </span><span class='ocaml-entity-name-function-binding'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>to</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>do</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword'>for </span><span class='ocaml-entity-name-function-binding'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>to</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>do</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-source'>printf</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-constant-character-printf'>%s</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'> | </span><span class='ocaml-constant-character-printf'>%s</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-source'>                  </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>  </span><span class='ocaml-constant-character-printf'>%s</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>)</span><span class='ocaml-source'>  </span><span class='ocaml-source'>(</span><span class='ocaml-source'>get_as_string</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>done</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>printf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-constant-character-escape'>\\n</span><span class='ocaml-string-quoted-double'>--------+---------+--------</span><span class='ocaml-constant-character-escape'>\\n</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>printf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-constant-character-escape'>\\n</span><span class='ocaml-string-quoted-double'>        |         |        </span><span class='ocaml-constant-character-escape'>\\n</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>printf</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-constant-character-escape'>\\n</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>done</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>available</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>avail</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Array</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>make</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>10</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>true</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>for </span><span class='ocaml-entity-name-function-binding'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>to</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>do</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>avail</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>get</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><-</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>avail</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>get</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>i</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><-</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>done</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>sq_x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>and</span><span class='ocaml-source'> </span><span class='ocaml-source'>sq_y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>mod</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>for </span><span class='ocaml-entity-name-function-binding'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>sq_x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>to</span><span class='ocaml-source'> </span><span class='ocaml-source'>sq_x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>do</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword'>for </span><span class='ocaml-entity-name-function-binding'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>sq_y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>to</span><span class='ocaml-source'> </span><span class='ocaml-source'>sq_y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>do</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-source'>avail</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>get</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><-</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>false</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-keyword-other'>done</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>done</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>av</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>ref</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>in</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword'>for </span><span class='ocaml-entity-name-function-binding'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> not 0 </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>to</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>9</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>do</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>avail</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>(</span><span class='ocaml-source'>i</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>av</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-source'>i</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>!</span><span class='ocaml-source'>av</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>done</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-operator'>!</span><span class='ocaml-source'>av</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>next</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>+</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-comment-doc'>(**</span><span class='ocaml-comment-doc'> Try to fill the undecided entries. </span><span class='ocaml-comment-doc'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword'>let </span><span class='ocaml-keyword'>rec </span><span class='ocaml-entity-name-function-binding'>fill</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>(</span><span class='ocaml-source'>x</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>y</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> filled all entries </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>if</span><span class='ocaml-source'> </span><span class='ocaml-source'>is_valid</span><span class='ocaml-source'>(</span><span class='ocaml-source'>get</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>then</span><span class='ocaml-source'> </span><span class='ocaml-source'>fill</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>next</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>else</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>available</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> no solution </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>           </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>try_values</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>and</span><span class='ocaml-source'> </span><span class='ocaml-source'>try_values</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>function</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-source'>v</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>(</span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-source'>fill</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>with_val</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'> </span><span class='ocaml-source'>v</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-source'>next</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>_</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>as</span><span class='ocaml-source'> </span><span class='ocaml-source'>res</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>res</span><span class='ocaml-source'>
</span><span class='ocaml-source'>          </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>try_values</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>pos</span><span class='ocaml-source'> </span><span class='ocaml-source'>l</span><span class='ocaml-source'>)</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language'>[]</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>end</span><span class='ocaml-source'>
</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword'>let </span><span class='ocaml-entity-name-function-binding'>sudoku</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>match</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Board</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>fill</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-source'>(</span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-keyword-other-ocaml punctuation-comma punctuation-separator'>,</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>0</span><span class='ocaml-source'>)</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>with</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Some</span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>b</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>None</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-source'>failwith</span><span class='ocaml-source'> </span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-string-quoted-double'>sudoku: no solution</span><span class='ocaml-string-quoted-double'>"</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>module</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Board</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'>
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>sig</span><span class='ocaml-source'>
</span><span class='ocaml-source'>    type t = int array
</span><span class='ocaml-source'>    val is_valid : int -> bool
</span><span class='ocaml-source'>    val get : t -> int * int -> int
</span><span class='ocaml-source'>    val get_as_string : t -> int * int -> string
</span><span class='ocaml-source'>    val with_val : t -> int * int -> int -> int array
</span><span class='ocaml-source'>    val of_list : int list list -> t
</span><span class='ocaml-source'>    val print : t -> unit
</span><span class='ocaml-source'>    val available : t -> int * int -> int list
</span><span class='ocaml-source'>    val next : int * int -> int * int
</span><span class='ocaml-source'>    val fill : t -> int * int -> t option
</span><span class='ocaml-source'>    val try_values : t -> int * int -> int list -> t option
</span><span class='ocaml-source'>  </span><span class='ocaml-keyword-other'>end</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>val</span><span class='ocaml-source'> </span><span class='ocaml-source'>sudoku</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other-ocaml punctuation-other-colon punctuation'>:</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Board</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>-></span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Board</span><span class='ocaml-keyword-other-ocaml punctuation-other-period punctuation-separator'>.</span><span class='ocaml-source'>t</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'><</span><span class='ocaml-keyword-other'>fun</span><span class='ocaml-keyword-operator'>></span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Nonograms|js}
  ; number = {js|98|js}
  ; difficulty = `Advanced
  ; tags = 
 []
  ; statement = {js|<p>Around 1994, a certain kind of puzzles was very popular in England. The
&quot;Sunday Telegraph&quot; newspaper wrote: &quot;Nonograms are puzzles from Japan
and are currently published each week only in The Sunday Telegraph.
Simply use your logic and skill to complete the grid and reveal a
picture or diagram.&quot; As an OCaml programmer, you are in a better
situation: you can have your computer do the work!</p>
<p>The puzzle goes like this: Essentially, each row and column of a
rectangular bitmap is annotated with the respective lengths of its
distinct strings of occupied cells. The person who solves the puzzle
must complete the bitmap given only these lengths.</p>
<pre><code class="language-text">          Problem statement:          Solution:

          |_|_|_|_|_|_|_|_| 3         |_|X|X|X|_|_|_|_| 3
          |_|_|_|_|_|_|_|_| 2 1       |X|X|_|X|_|_|_|_| 2 1
          |_|_|_|_|_|_|_|_| 3 2       |_|X|X|X|_|_|X|X| 3 2
          |_|_|_|_|_|_|_|_| 2 2       |_|_|X|X|_|_|X|X| 2 2
          |_|_|_|_|_|_|_|_| 6         |_|_|X|X|X|X|X|X| 6
          |_|_|_|_|_|_|_|_| 1 5       |X|_|X|X|X|X|X|_| 1 5
          |_|_|_|_|_|_|_|_| 6         |X|X|X|X|X|X|_|_| 6
          |_|_|_|_|_|_|_|_| 1         |_|_|_|_|X|_|_|_| 1
          |_|_|_|_|_|_|_|_| 2         |_|_|_|X|X|_|_|_| 2
           1 3 1 7 5 3 4 3             1 3 1 7 5 3 4 3
           2 1 5 1                     2 1 5 1
</code></pre>
<p>For the example above, the problem can be stated as the two lists
<code>[[3]; [2; 1]; [3; 2]; [2; 2]; [6]; [1; 5]; [6]; [1]; [2]]</code> and
<code>[[1; 2]; [3; 1]; [1; 5]; [7; 1]; [5]; [3]; [4]; [3]]</code> which give the &quot;solid&quot;
lengths of the rows and columns, top-to-bottom and left-to-right,
respectively. Published puzzles are larger than this example, e.g.
25×20, and apparently always have unique solutions.</p>
<!-- $MDX skip -->
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-source'>solve</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>      </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  ; solution = {js|<p>Brute force solution: construct boards trying all the fill
possibilities for the columns given the prescribed patterns for them
and reject the solution if it does not satisfy the row patterns.</p>
<pre><code><span class='ocaml-keyword-other'>#</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>element</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>X</span><span class='ocaml-source'> </span><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> ensure we do not miss cases in patterns </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-keyword-other'>type</span><span class='ocaml-source'> </span><span class='ocaml-source'>element</span><span class='ocaml-source'> </span><span class='ocaml-keyword-operator'>=</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>Empty</span><span class='ocaml-source'> </span><span class='ocaml-keyword-other'>|</span><span class='ocaml-source'> </span><span class='ocaml-constant-language-capital-identifier'>X</span><span class='ocaml-source'>
</span></code></pre><p>You may want to look at
<a href="http://link.springer.com/article/10.1007%2Fs10489-009-0200-0">more efficient algorithms</a>
and implement them so you can solve the following within reasonable time:</p>
<!-- $MDX skip -->
<pre><code><span class='ocaml-source'>  </span><span class='ocaml-source'>solve</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>14</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>8</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>12</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span><span class='ocaml-source'>        </span><span class='ocaml-source'>[</span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>5</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>6</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>4</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>3</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span><span class='ocaml-source'>         </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>1</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-constant-numeric-decimal-integer'>2</span><span class='ocaml-source'>]</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'> </span><span class='ocaml-source'>[</span><span class='ocaml-constant-numeric-decimal-integer'>7</span><span class='ocaml-source'>]</span><span class='ocaml-source'>]</span><span class='ocaml-source'>
</span></code></pre>|js}
  };
 
  { title = {js|Crossword puzzle|js}
  ; number = {js|99|js}
  ; difficulty = `Advanced
  ; tags = 
 []
  ; statement = {js|<p><img src="/media/problems/crossword.gif" alt="Crossword" /></p>
<p>Given an empty (or almost empty) framework of a crossword puzzle and a
set of words. The problem is to place the words into the framework.</p>
<p>The particular crossword puzzle is specified in a text file which first
lists the words (one word per line) in an arbitrary order. Then, after
an empty line, the crossword framework is defined. In this framework
specification, an empty character location is represented by a dot (.).
In order to make the solution easier, character locations can also
contain predefined character values. The puzzle above is defined in the
file
<a href="https://sites.google.com/site/prologsite/prolog-problems/7/solutions-7/p7_09a.dat?attredirects=0&amp;d=1">p7_09a.dat</a>,
other examples are
<a href="https://sites.google.com/site/prologsite/prolog-problems/7/solutions-7/p7_09b.dat?attredirects=0&amp;d=1">p7_09b.dat</a>
and
<a href="https://sites.google.com/site/prologsite/prolog-problems/7/solutions-7/p7_09d.dat?attredirects=0&amp;d=1">p7_09d.dat</a>.
There is also an example of a puzzle
(<a href="https://sites.google.com/site/prologsite/prolog-problems/7/solutions-7/p7_09c.dat?attredirects=0&amp;d=1">p7_09c.dat</a>)
which does not have a solution.</p>
<p>Words are strings (character lists) of at least two characters. A
horizontal or vertical sequence of character places in the crossword
puzzle framework is called a site. Our problem is to find a compatible
way of placing words onto sites.</p>
<p><strong>Hints:</strong></p>
<ol>
<li>The problem is not easy. You will need some time to thoroughly
understand it. So, don't give up too early! And remember that the
objective is a clean solution, not just a quick-and-dirty hack!
</li>
<li>For efficiency reasons it is important, at least for larger puzzles,
to sort the words and the sites in a particular order.
</li>
</ol>
|js}
  ; solution = {js|<pre><code><span class='ocaml-comment-block'>(*</span><span class='ocaml-comment-block'> example pending </span><span class='ocaml-comment-block'>*)</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-keyword-other-ocaml punctuation-separator-terminator punctuation-separator'>;</span><span class='ocaml-source'>
</span></code></pre>|js}
  }]

