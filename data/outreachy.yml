rounds:
  - name: Summer 2014
    projects:
      - title: "MirageOS Contributions and Improvements"
        description: ""
        mentee: "Mindy Preston"
        blog: http://www.somerandomidiot.com/blog/2014/08/22/opw-fin/
        source: https://github.com/mirage
        mentors:
          - Richard Mortier
          - Anil Madhavapeddy
      - title: "MirageOS Cloud API Support"
        description: >
          MirageOS (see http://xenproject.org/developers/teams/mirage-os.html,
          http://www.openmirage.org/) is a type-safe unikernel written in OCaml
          which generates highly specialised "appliance" VMs that run directly
          on Xen without requiring an intervening kernel. A MirageOS
          application typically runs via several communicating kernel instances
          on the cloud. Today these instances are difficult to manage; we would
          like to explore strategies for managing these distributed
          computations using common public cloud APIs such as those exposed by
          Amazon EC2 and Rackspace.

          First we need to create pure OCaml API bindings for (e.g.) EC2 and
          Rackspace (purity is needed to ensure portability). These API
          bindings can then be used to provide operating-system-level
          abstractions to the unikernels. For example, a traditional VM might
          hotplug a vCPU; while a MirageOS application would request a "VM create"
          using the cloud API and "connect" the new instance to the existing
          network. We should be able to spin up 1000s of "CPUs" by using such
          APIs in a cluster environment.

          As well as helping Xen/Mirage, the public cloud API bindings will be
          very useful to other people in other contexts -- a nice side-effect.
        mentee: "Jyotsna Prakash"
        blog: https://web.archive.org/web/20141112050547/https://1000hippos.wordpress.com/
        source: https://github.com/moonlightdrive/ocaml-ec2
        mentors:
          - David Scott
          - Anil Madhavapeddy
  - name: Winter 2015
    projects:
      - title: "NTP Support for MirageOS"
        description: ""
        mentee: "Kia"
        blog: "https://matildah.github.io"
        source: https://github.com/softminus/mirage-ntp
        mentors:
          - Hannes Mehnert
  - name: Summer 2016
    projects:
      - title: "MirageOS"
        description: ""
        mentee: Gina Marie Maini
        blog: https://github.com/wiredsister
        source: https://github.com/verbosemode/syslogd-mirage
        mentors:
          - Mindy Preston
  - name: Summer 2019
    projects:
      - title: "Test the OCaml Compiler With Code Coverage Tools"
        description: >
          Improving the compiler testing process using code coverage tools.
          The core OCaml system has a large test suite, and it would be very
          useful to see which parts of the system are tested more actively
          and which are not so. Developers will be helped to see where it is
          needed to add new tests, and in the process of improving coverage,
          it is possible to find unexplored bugs and fix them.
          It might help to make OCaml and its libraries more reliable.
        mentee: "Oxana Kostikova"
        blog: "https://lereenadem.wixsite.com/personal"
        source: https://github.com/ocaml/ocaml
        mentors:
         - SÃ©bastien Hinderer
         - Florian Angeletti
      - title: "Test the OCaml Compiler With Random Tests and a Reference Interpreter"
        description: >
          The aim of this project is to extend an existing testcase-generator for the OCaml compiler,
          using a reference interpreter (existing or newly developed) to find a lot of bugs in the compiler
          and fix as much of them as possible.
        mentee: "Ulugbek Abdullaev"
        source: https://github.com/ocaml/ocaml
        blog: "https://ulugbekna.github.io"
        mentors:
         - Gabriel Scherer
         - Jan Midtgaard
  - name: Summer 2020
    projects:
      - title: "Reducing Global Mutable State in the OCaml Compiler Codebase"
        description: ""
        mentee: "Anukriti Kumar"
        blog: "https://anukriti12.github.io"
        source: https://github.com/ocaml/ocaml
        mentors:
         - Guillaume Bury
         - Vincent Laviron
      - title: "Structured Output Format for the OCaml Compiler Messages"
        description: >
          Usually, the output messages from the compiler are a bit more difficult to read for a machine,
          hence it's more time consuming to find the warnings, errors, etc., and their origin. By producing
          a structured output for compiler messages, other tools can more easily interoperate with them and
          provide tooling on top of the messages.
        mentee: "Muskan Garg"
        source: https://github.com/ocaml/ocaml
        blog: "https://medium.com/@muskangarg994/outreachy-101-d285507c54f7"
        mentors:
         - Florian Angeletti
  - name: Summer 2021
    projects:
      - title: "Create opam Package Search"
        description: >
          Opam is the source-based package manager for OCaml code. This project comprises of writing a new web
          client for rendering output from the opam package database. There is a JSON endpoint on opam.ocaml.org,
          which provides information about packages that would provide metadata about the packages. We can extend
          this JSON metadata to include all the opam packages (not just the top 10) and use that to power a search
          frontend for the website. This may include presenting the data as a GraphQL endpoint with the frontend
          querying that endpoint using GraphQL.
        mentee: "Odinaka Joy"
        blog: "https://www.dinakajoy.com"
        source: https://github.com/ocaml/ocaml.org
        mentors:
         - Sonja Heinze
         - Patrick Ferris
      - title: "Improve the OCaml.org Website"
        description: >
          OCaml.org is the main website for OCaml, a functional, typed, high-level programming language. This project
          revolves around improving the website on multiple different fronts including: layout, accessibility, and content.
        mentee: "Diksha Gupta"
        blog: "https://dikshagupta99.wordpress.com/blog/"
        source: https://github.com/ocaml/ocaml.org
        mentors:
         - Isabella Leandersson
         - Patrick Ferris
         - Gargi Sharma
      - title: "Improve the OCaml.org Website"
        description: >
          OCaml.org is the main website for OCaml, a functional, typed, high-level programming language. This project
          revolves around improving the website on multiple different fronts including: layout, accessibility, and content.
        mentee: "Shreya kumari Gupta"
        source: https://github.com/ocaml/ocaml.org
        blog: "https://shreyaswikriti693235797.wordpress.com/blog/"
        mentors:
         - Isabella Leandersson
         - Anil Madhavapeddy
         - Patrick Ferris
         - Gargi Sharma
  - name: Winter 2021
    projects:
      - title: "Build a Monitoring Dashboard for OCaml.org"
        description: >
          We currently have no visibility on the performance of the server serving
          v3.ocaml.org, which pages are most visited, if errors happen, etc.
          To offer some visibility, we can implement a basic monitoring dashboard
          that would provide Metrics such as: Memory, CPU, Open file descriptors,
          Statistics such as (check if GDPR compliant first!) Requested URIs,
          User agents, Language, Logs.
          This project consists of mostly two parts: a frontend and a backend.
          The backend consists of building a high-level library to collect data
          and get statistics on them. The frontend will use this library to display
          graphs of the metrics, statistics, and other data we want to collect.
        mentee: "Jiae Kam"
        source: https://github.com/JiaeK/dream-dashboard
        blog: "https://jiaek.wordpress.com"
        mentors:
         - Thibaut Mattio
         - Patrik Keller
        video: https://watch.ocaml.org/w/eSSmoyEcPTEXPGAqDtKENX?start=40m53s
      - title: "Improve the OCaml Meta-Programming Ecosystem"
        description: >
          It's common for programming languages to provide some way to meta-program
          in order to preprocess code before reaching the last compilation step,
          for example, in the form of macros or templates. The OCaml compiler
          doesn't provide a full built-in macro system, but the OCaml parser does
          provide syntax for preprocessing purposes: attributes and extension points.
          We -the OCaml community- also have an official framework, called
          `ppxlib`, to write preprocessors -called PPXs- based on that syntax and
          integrate them into the compilation process.

          However, it's on the OCaml community to write and provide important PPXs
          to the OCaml developers. We've noticed that having the most important
          PPXs under the official PPX GitHub organisation -next to `ppxlib`- is
          helpful. Developers can easily find them; developers can trust them;
          and they're well-written and hygienic, so developers can use them as
          how-to guides for writing other PPXs. In this project, you'll write
          one or some of those official standard PPXs.
        mentee: "Aya Sharaf"
        source: https://github.com/ocaml-ppx/ppxlib
        blog: "https://outreachyxocaml.wordpress.com"
        mentors:
         - Shon Feder
         - Sonja Heinze
         - Patrik Keller
        video: https://watch.ocaml.org/w/eSSmoyEcPTEXPGAqDtKENX
      - title: "Support `.eml` Files in OCaml's VSCode Extension"
        description: >
          Support `.eml` files in OCaml's VSCode extension
          Dream, the OCaml web framework, uses `.eml` files to embed HTML in
          OCaml files. At the moment, opening these files in VSCode, with the
          official OCaml VSCode extension, will not provide any syntax
          highlighting or diagnostics for the `.eml` files, because they are
          not supported.
          The goal of the project is to add support for the syntax in the
          extension itself as a first step, and eventually, add support for
          the language in the OCaml Language Server (LSP) as a second step.
        source: https://github.com/ocamllabs/vscode-ocaml-platform
        mentee: "Sayo Bamigbade"
        blog: "https://saysayoblog.wordpress.com"
        mentors:
         - Thibaut Mattio
         - Gargi Sharma
         - Patrik Keller
        video: https://watch.ocaml.org/w/eSSmoyEcPTEXPGAqDtKENX?start=20m04s
  - name: Summer 2022
    projects:
      - title: "Expand OCaml 5.0 Parallel Benchmark Suite"
        description: >
          OCaml 5.0 will be live soon! It ships with support for shared-memory parallelism and concurrency
          OCaml has missed all these years. This will be accompanied by a robust set of Multicore libraries
          useful for parallel programming. The Multicore compiler and libraries are under active development
          and will continue to evolve as the OCaml ecosystem moves towards Multicore.

          For assessing the impact of new features in the OCaml compiler and Multicore libraries, we have a
          set of sequential and parallel benchmarks present in our benchmark suite. While the sequential benchmarks
          contain many real-world applications, a wider set of parallel benchmarks would be useful.

          This project entails gathering the parallel benchmarks available at various places like
          https://github.com/ckoparkar/ocaml-benchmarks and making them available in the benchmark suite.
        mentee: "Moazzam Moriani"
        blog: "https://moazzammoriani.github.io/mm/"
        source: https://github.com/ocaml-bench/sandmark
        mentors:
         - Sudha Parimala
        video: https://watch.ocaml.org/w/vXJtTj3cULRa1bZB5HrecX
      - title: "Extend OCaml's GeoJSON Library to Support TopoJSON"
        description: >
          TopoJSON is an extension to GeoJSON to encode topology. This allows for redundant data
          to be removed and file sizes to be greatly reduced. This is often very desirable especially
          when working with data in the browser. This project looks to extend `ocaml-geojson` to support TopoJSON.
        mentee: "Jay Dev Jha"
        blog: "https://jaydevdotcom.wordpress.com/home/"
        source: https://github.com/geocaml/ocaml-topojson
        mentors:
         - Patrick Ferris
        video: https://watch.ocaml.org/w/vXJtTj3cULRa1bZB5HrecX?start=42m52s
  - name: Winter 2022
    projects:
      - title: "Implement a Non-Blocking, Streaming Codec for TopoJSON"
        description: >
          TopoJSON is an extension to GeoJSON to encode topology. This allows for redundant data to be removed and file
          sizes to be greatly reduced. This is often very desirable especially when working with data in the browser. In a previous
          Outreachy internship, a new OCaml library was implemented to provide an OCaml library for TopoJSON. This project will
          build on this adding more functionality to the library and providing a non-blocking, streaming codec version similar
          to the geojsone library.
        mentee: "Prisca Chidimma Maduka"
        source: https://github.com/geocaml/ocaml-topojson
        blog: "https://prisca-chidimma.dreamwidth.org"
        mentors:
         - Patrick Ferris
         - Odinaka Joy
        video: https://watch.ocaml.org/w/pQSAfZ9kDSsSnr8Bxzocn3
  - name: Summer 2023
    projects:
      - title: "Persistent Storage in MirageOS Unikernels"
        description: >
          Every operating system, even unikernels, need a way to persist data accross reboots. Having persistent storage capabilities in MirageOS is
          definitely a feature to consider including. Developing this includes building libraries for partitioning disks, filesystems for these partitions,
          and a simple, intuitive, and programmatic way to interact with these storage devices from a user's view point. This project pushes this vision
          one step further by building a library for GPT partitioning.
        mentee: "PizieDust"
        source: https://github.com/mirage/ocaml-gpt
        blog: "https://medium.com/@playersrebirth/building-the-ocaml-gpt-library-650c00b4d72b"
        mentors:
        - Reynir BjÃ¶rnsson
        video: https://watch.ocaml.org/w/kTwq4AVQtRtFuQx9R5cPro
      - title: "Improving Error Reporting in Existing PPXLIB-Based PPXs"
        description: >
          In the past, when 'ppxlib' encountered an exception in a transformation, it stopped the rewriting process, causing the rewriters after to not be processed.
          Also multiple errors could not be reported at the same time there were multiple failing rewriters as just the first raising rewriter
          will raise, and the compilation process stops there. But now, a raising rewriter does not stop the preceding rewriter from running, allowing multiple
          to be raised both in the context-free phase and all the other phases.
        mentee: "Abongwa Bonalais"
        source: https://github.com/ocaml-ppx/ppxlib
        blog: "https://dev.to/burnleydev"
        mentors:
        - "Paul-Elliot AnglÃ¨s dâAuriac"
        video: https://watch.ocaml.org/w/kTwq4AVQtRtFuQx9R5cPro
      - title: "MIDI Over Ethernet With MirageOS"
        description: >
          MIDI, which stands for Musical Instrument Digital Interface, is a widely used protocol in the world of music and audio technology.
          MirageOS is a library operating system that specialises in creating lightweight, secure, and efficient unikernels. Unikernels are highly-specialised,
          single-purpose virtual machine images designed for specific applications, and it is written in OCaml.
          The project focussed on implementing the rtpMIDI protocol for serialising-deserialising of MIDI messages over Ethernet and implementing use cases like
          a publisher-subcriber based server-client model for MIDI messages.
        mentee: "Aryan Godara"
        source: https://github.com/AryanGodara/rtpmidi
        blog: "https://medium.com/@aryangodara_19887"
        mentors:
        - Claes (rand)
        - Sonja Heinze
        - Moazzam Moriani
        video: https://watch.ocaml.org/w/kTwq4AVQtRtFuQx9R5cPro
  - name: Winter 2023
    projects:
      - title: "Develop a Geometric Creative Coding Library for OCaml"
        description: >
          OCaml is an industrial-strength functional programming language that's
          been around for nearly three decades.


          While functional programming itself is not new, it has not dominated
          mainstram programming languages. Recently, more mainstram languages
          have been adopting concepts from functional programming. Now more than
          ever is a good time to have various types of learning material
          pertaining to functional programming.


          Creative coding is a type of computer programming that focuses on
          generating artistic, expressive, and creative outputs using software
          and digital tools. It has its applications in places such as game
          development. Above all, it is a great pedagogical tool that gives
          visual outputs to its readers.


          Joy is a tiny creative coding library in Python. Joy builds heavily on
          functional programming concepts with very little reference to Python
          syntax.


          This project aims to implement a geometric creative coding library in
          OCaml. It is heavily inspired by Joy. When done, it will serve as a
          means to do geometric creative coding in OCaml.
        mentee: "Fay Carsons"
        source: https://github.com/Sudha247/ocaml-joy
        blog: "https://www.faycarsons.xyz/articles#joy"
        mentors:
          - Sudha Parimala
          - Kaustubh M
        video: https://watch.ocaml.org/w/b7sv1LQSVZQH6trf4xpwFX?start=3m8s
      - title: "Implement a Dark Mode for OCaml.org"
        description: >
          OCaml is a powerful, statically-typed programming language known for
          its efficiency and expressiveness. OCaml.org serves as the central hub
          for the OCaml community, providing resources, documentation, and news.
          In today's digital age, users expect a more personalised and
          comfortable web experience. One such expectation is the availability
          of a dark mode, which has become a popular feature on websites and
          applications. This project outlines the plan to implement a dark mode
          for OCaml.org, enhancing user experience and modernising the platform.
          As OCaml continues gaining traction in various industries, it is
          essential to modernise its online presence to meet users' expectations
          worldwide.


          The current styles and colors for light mode already exist so
          implementing a dark mode will involve adding contrasting colors and
          styles according to the Figma design. It will also consider accessibility
          standards and create a button that toggles between the light
          and dark mode.
        mentee: "Oluwaseun Oyenuga"
        source: https://github.com/ocaml-ppx/ppxlib
        blog: "https://dev.to/burnleydev"
        mentors:
          - Sayo Bamigbade
          - punchagan
        video: https://watch.ocaml.org/w/b7sv1LQSVZQH6trf4xpwFX?start=21m12s
      - title: "Improve the GUI Experience for OCaml Users"
        description: >
          Inspired by [Rust's "Are we GUI yet?"](https://areweguiyet.com/), we want the same work done on the
          OCaml GUI libraries. A similar work has been done for the OCaml web
          libraries: ["Is OCaml web yet?"](https://ocaml.org/docs/is-ocaml-web-yet) (see the pull request). This work would
          allow to tackle "Are we game yet?" in the future.


          The survey must take into account the targeted platforms of these
          libraries, dependencies, (in)compatibilities, features, last updates,
          etc. A list is available in OCamlVerse but is not complete or detailed
          enough. Interns having previous knowledge of GUI libraries available
          in other languages can also compare them to the equivalent OCaml
          libraries.


          This work must result in a guide on OCaml.org, similar to the ["Is OCaml web yet?"](https://ocaml.org/docs/is-ocaml-web-yet) page.
        mentee: "PrincessIddy"
        source: https://github.com/ocaml/ocaml.org
        blog: "https://idaranabuk.com"
        mentors:
          - Guillaume Petiot
          - Moazzam Moriani
        video: https://watch.ocaml.org/w/b7sv1LQSVZQH6trf4xpwFX?start=34m6s
