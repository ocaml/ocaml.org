<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>https://examachine.net/blog/category/ocaml/feed/</id><title type="text">examachine</title><updated>2023-06-30T05:47:26-00:00</updated><entry><link href="https://examachine.net/blog/a-short-review-of-4th-generation-cryptocurrencies/" rel="alternate"/><contributor><uri>https://examachine.net/blog/category/ocaml/feed/</uri><name>examachine</name></contributor><content type="html">&lt;p&gt;In the course of designing Cypher, our home-brewed cryptoken infrastructure, I have witnessed the emergence of a new generation of cryptocurrency designs I can name 4th generation cryptocurrencies owing my lack of imagination in naming things, but also because a &amp;hellip;&lt;/p&gt;</content><id>https://examachine.net/blog/a-short-review-of-4th-generation-cryptocurrencies/</id><title type="text">A Short Review of 4th Generation Cryptocurrencies</title><updated>2020-10-07T21:08:18-00:00</updated><author><name>examachine</name></author></entry><entry><link href="https://examachine.net/blog/revised-code-size-estimates-for-examachine-releases/" rel="alternate"/><contributor><uri>https://examachine.net/blog/category/ocaml/feed/</uri><name>examachine</name></contributor><content type="html">&lt;p&gt;This post is in reference to Celestial Intellect Cybernetics&amp;rsquo;s AGI (Artificial General Intelligence) Platform called Examachine. Examachine&amp;rsquo;s core is a &amp;ldquo;parallel AGI kernel&amp;rdquo; which presents a generic programming API implementing parallel incremental general-purpose machine learning algorithms for heterogeneous supercomputers, and &amp;hellip;&lt;/p&gt;</content><id>https://examachine.net/blog/revised-code-size-estimates-for-examachine-releases/</id><title type="text">Revised Code Size Estimates for Examachine Releases</title><updated>2017-09-13T01:13:29-00:00</updated><author><name>examachine</name></author></entry><entry><link href="https://examachine.net/blog/ann-parallpairs/" rel="alternate"/><contributor><uri>https://examachine.net/blog/category/ocaml/feed/</uri><name>examachine</name></contributor><content type="html">&lt;h1&gt;Parallel all-pairs similarity search algorithms in OCaml&lt;/h1&gt;
&lt;h2&gt;Sources&lt;/h2&gt;
&lt;div&gt;Git repository &amp;mdash;&amp;gt; https://github.com/examachine/parallpairs&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;The repository contains the 1.0 sources, a release will be made soon.&lt;/p&gt;
&lt;h2&gt;Citation&lt;/h2&gt;
&lt;p&gt;If you use this code, please cite the following paper. It is currently under review &lt;/p&gt;&lt;/div&gt;&amp;hellip;</content><id>https://examachine.net/blog/ann-parallpairs/</id><title type="text">ANN: parallpairs</title><updated>2017-02-14T13:14:17-00:00</updated><author><name>examachine</name></author></entry><entry><link href="https://examachine.net/blog/examachinegithub/" rel="alternate"/><contributor><uri>https://examachine.net/blog/category/ocaml/feed/</uri><name>examachine</name></contributor><content type="html">&lt;blockquote&gt;&lt;p&gt;examachine has 22 repositories available. Follow their code on GitHub.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Source: &lt;em&gt;examachine (Eray &amp;Ouml;zkural)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;I just uploaded a bunch of free software projects to github. Some of them were on google code, which was terminated by google. You may &amp;hellip;&lt;/p&gt;</content><id>https://examachine.net/blog/examachinegithub/</id><title type="text">examachine@github</title><updated>2017-02-07T20:08:56-00:00</updated><author><name>examachine</name></author></entry><entry><link href="https://examachine.net/blog/an-extensive-post-on-translating-between-ocaml-scheme-and-haskell/" rel="alternate"/><contributor><uri>https://examachine.net/blog/category/ocaml/feed/</uri><name>examachine</name></contributor><content type="html">&lt;p&gt;translating between OCaml Scheme and Haskell.&lt;/p&gt;
&lt;p&gt;Ah, I just stumbled on this page while searching for what people use for a composition operator in O&amp;rsquo;Caml. It gives a comprehensive guide to translating among these languages.&amp;hellip;&lt;/p&gt;</content><id>https://examachine.net/blog/an-extensive-post-on-translating-between-ocaml-scheme-and-haskell/</id><title type="text">An extensive post on translating between OCaml Scheme and Haskell</title><updated>2011-02-05T03:40:49-00:00</updated><author><name>examachine</name></author></entry><entry><link href="https://examachine.net/blog/non-blocking-mpi-calls-for-ocaml/" rel="alternate"/><contributor><uri>https://examachine.net/blog/category/ocaml/feed/</uri><name>examachine</name></contributor><content type="html">&lt;p&gt;I think O&amp;rsquo;Caml is a great language for parallel algorithm development. I have written two parallel codes in O&amp;rsquo;Caml, one is my AI system called the examachine, and the other is a parallel information-retrieval code which I cannot specify yet &amp;hellip;&lt;/p&gt;</content><id>https://examachine.net/blog/non-blocking-mpi-calls-for-ocaml/</id><title type="text">Non-blocking MPI calls for Oâ€™Caml</title><updated>2011-01-31T21:42:08-00:00</updated><author><name>examachine</name></author></entry></feed>