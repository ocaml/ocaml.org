- title: Rust for Everyone!
  url: https://www.youtube.com/watch/R0dP-QR5wQo?version=3
  thumbnail: https://i3.ytimg.com/vi/R0dP-QR5wQo/hqdefault.jpg
  description: 'Rust promises to empower everyone to build reliable software, but
    its unique features create steep learning curves. In this talk, Will Crichton
    presents four years of research into evidence-based tools that help both novices
    and experts work more effectively with Rust''s complexity, including:

    - Ownership visualization: Interactive diagrams showing permissions (read/write/own)
    that help students understand borrowing better than rule-based explanations

    - Trait debugging: A graphical tool for navigating complex trait inference trees
    when compiler errors become unreadably long

    - Program slicing: Using Rust''s type system to automatically highlight only code
    relevant to specific variables


    All tools discussed are open source and available for use.'
  published: 2025-08-27T15:42:33+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: The Saga of Multicore OCaml
  url: https://www.youtube.com/watch/XGGSPpk1IB0?version=3
  thumbnail: https://i1.ytimg.com/vi/XGGSPpk1IB0/hqdefault.jpg
  description: "Jane Street is an electronic trading firm that uses low latency trading
    systems built in OCaml to provide liquidity to financial markets worldwide. In
    December 2022, after nearly a decade of development, OCaml 5.0 was released with
    OCaml\u2019s first multi-core capable runtime. This was an exciting milestone,
    finally making it possible to write shared-memory parallel programs in OCaml.
    The new runtime was designed to be easy to adopt: it didn\u2019t disturb OCaml\u2019s
    FFI, and performance was meant to be only a few percentage points slower in single-core
    mode. Despite those promising beginnings, switching to runtime-5 within Jane Street
    was harder than we expected. Indeed, we've only just switched to it this year,
    after 2.5 years of research and engineering effort. This talk will give an overview
    of the problems we ran into, and what we learned from the process, including some
    new ideas that solved some very old problems in the design of OCaml's GC.\n\nSee
    other Tech Talks here: https://www.janestreet.com/tech-talks/index.html"
  published: 2025-07-24T20:13:04+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: WAYBAR
  url: https://www.youtube.com/watch/fGhkRiUsTpc?version=3
  thumbnail: https://i3.ytimg.com/vi/fGhkRiUsTpc/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2025-05-08T19:38:16+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: I Tried Golf.Vim
  url: https://www.youtube.com/watch/AoMfifC6QyI?version=3
  thumbnail: https://i2.ytimg.com/vi/AoMfifC6QyI/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2025-05-07T15:00:30+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: HEAVY ARCH RICING Part 2
  url: https://www.youtube.com/watch/J4xU2rOMh3I?version=3
  thumbnail: https://i3.ytimg.com/vi/J4xU2rOMh3I/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2025-05-07T04:12:22+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: Ricing Arch Part 1
  url: https://www.youtube.com/watch/UzUu77RZGSE?version=3
  thumbnail: https://i2.ytimg.com/vi/UzUu77RZGSE/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2025-05-05T23:18:54+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: Making OCaml Safe for Performance Engineering
  url: https://www.youtube.com/watch/g3qd4zpm1LA?version=3
  thumbnail: https://i4.ytimg.com/vi/g3qd4zpm1LA/hqdefault.jpg
  description: "Jane Street is a trading firm that uses a variety of high-performance
    systems built in OCaml to provide liquidity to financial markets worldwide. Over
    the last couple of years, we have started developing major extensions to OCaml\u2019s
    type system, with the primary goal of making OCaml a better language for writing
    high-performance systems. In this talk, we will attempt to provide a developer's-eye
    view of these changes. We\u2019ll cover two major directions of innovation: first,
    the addition of modal types to OCaml, which opens up a variety of ambitious features,
    like memory-safe stack-allocation; type-level tracking of effects, and data-race
    freedom guarantees for multicore code. The second is the addition of a kind system
    to OCaml, which provides more control over the representation of memory, in particular
    allowing for structured data to be represented in a cache-and-prefetch-friendly
    tabular form. Together, these features pull together some of the most important
    features for writing high performance code in Rust, while maintaining the relative
    simplicity of programming in OCaml. In all of this, we will focus less on the
    type theory, and more on how these features are surfaced to users, the practical
    problems that they help us solve, and the place in the design space of programming
    languages that this leaves us in.\n\nRead the full transcript here: https://www.janestreet.com/tech-talks/making-ocaml-safe-for-performance-engineering/"
  published: 2025-04-03T20:44:20+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: Building A Copilot Like AutoComplete!!
  url: https://www.youtube.com/watch/GuRiTCX-rT0?version=3
  thumbnail: https://i4.ytimg.com/vi/GuRiTCX-rT0/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2025-02-08T17:06:37+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: Nuking A Twitter Community
  url: https://www.youtube.com/watch/ZWLljD4iwpM?version=3
  thumbnail: https://i3.ytimg.com/vi/ZWLljD4iwpM/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2025-01-21T20:00:02+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: how can he be so good?
  url: https://www.youtube.com/watch/yfIgOMb2jmU?version=3
  thumbnail: https://i2.ytimg.com/vi/yfIgOMb2jmU/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2025-01-18T16:00:57+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: I Got Interviewed By An AI
  url: https://www.youtube.com/watch/9MXlwBi5gLk?version=3
  thumbnail: https://i2.ytimg.com/vi/9MXlwBi5gLk/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2025-01-17T14:05:51+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: Building A Project With Devin
  url: https://www.youtube.com/watch/ZmrHcA5xPT8?version=3
  thumbnail: https://i3.ytimg.com/vi/ZmrHcA5xPT8/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2025-01-16T23:54:28+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: Building Machine Learning Systems for a Trillion Trillion Floating Point
    Operations
  url: https://www.youtube.com/watch/139UPjoq7Kw?version=3
  thumbnail: https://i2.ytimg.com/vi/139UPjoq7Kw/hqdefault.jpg
  description: "Over the last 10 years we've seen Machine Learning consume everything,
    from the tech industry to the Nobel Prize, and yes, even the ML acronym. This
    rise in ML has also come along with an unprecedented buildout of infra, with Llama
    3 now reaching 4e25 floating point operations, or 40 yottaflops, or 40 trillion
    trillion floating point operations.\n\nTo build these ML models, you need ML systems,
    like PyTorch. In this talk, Horace will (attempt to) answer: \n- How have ML systems
    evolved over time to meet the training needs of ML models? How does building ML
    systems differ from regular systems?\n- How do we get the most out of a single
    GPU? What's the point of compilers if we're just training a single model?\n- And
    what is the right way to think about scaling to 10s of thousands of GPUs?"
  published: 2024-12-09T15:32:10+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: Universal React in OCaml - David Sancho Moreno - FUN OCaml 2024
  url: https://www.youtube.com/watch/Oy3lZl2kE-0?version=3
  thumbnail: https://i4.ytimg.com/vi/Oy3lZl2kE-0/hqdefault.jpg
  description: 'David Sancho Moreno''s FUN OCaml 2024 talk recording!


    Overview by David:



    server-reason-react implements react-dom/server and some of React''s internals
    in OCaml. Its purpose is to natively render HTML markup from the server for a
    Reason React application. This pushes the idea for universal code (sharing code
    between the browser and native) and this talk is the story of all of this, and
    what are the solutions we applied at Ahrefs.



    server-reason-react: https://github.com/ml-in-barcelona/server-reason-react


    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com


    #ocaml'
  published: 2024-11-20T09:24:00+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: "Using odoc to Write Documentation - Paul-Elliot Angl\xE8s d'Auriac - FUN
    OCaml 2024"
  url: https://www.youtube.com/watch/Qzf_ZB1TKLQ?version=3
  thumbnail: https://i2.ytimg.com/vi/Qzf_ZB1TKLQ/hqdefault.jpg
  description: "Paul-Elliot Angl\xE8s d'Auriac's FUN OCaml 2024 talk recording!\n\nOverview
    by Paul-Elliot:\n\nThis talk is a gentle introduction to the documenting part
    of the OCaml ecosystem. We will see how to use `odoc` to build nice documentation
    for your `dune`-based project, from a bare repository to a documentation with
    both API pages and documentation pages.\n\nodoc: https://github.com/ocaml/odoc\n\nConnect
    with us\nWebsite: https://fun-ocaml.com/\nTwitter: https://x.com/FunOCaml\nBluesky:
    https://bsky.app/profile/fun-ocaml.com\n\n#ocaml"
  published: 2024-11-20T09:24:00+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: How the Multicore Garbage Collector works - Sudha Parimala - FUN OCaml 2024
  url: https://www.youtube.com/watch/fgdB_9DcJj4?version=3
  thumbnail: https://i3.ytimg.com/vi/fgdB_9DcJj4/hqdefault.jpg
  description: 'Sudha''s FUN OCaml 2024 talk recording!


    Overview by Sudha:


    In a first, OCaml 5.0 shipped with native support for parallelism and concurrency.
    This was a multi-year effort by the Multicore team and the OCaml development team
    that culminated in OCaml 5.0. The most challenging aspect was designing a multicore-capable
    garbage collector that remains backwards compatible in terms of features, performance,
    and latency. This is described in the paper ''Retrofitting Parallelism onto OCaml,''
    which appeared in ICFP 2020. In this talk, we will explore the ideas presented
    in the paper through doodle illustrations and zines.



    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com


    #ocaml'
  published: 2024-11-20T09:24:00+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: MirageOS - Developing Operating Systems in OCaml - Hannes Mehnert - FUN OCaml
    2024
  url: https://www.youtube.com/watch/g7Kl5mRDCDo?version=3
  thumbnail: https://i4.ytimg.com/vi/g7Kl5mRDCDo/hqdefault.jpg
  description: 'Hannes Mehnert''s FUN OCaml 2024 talk recording!


    Overview by Hannes:



    OCaml is a great systems programming language. We use it since more than a decade
    to develop MirageOS unikernels: run OCaml as a virtual machine, no Linux kernel
    involved. Since OCaml is statically typed (and type safe), and memory safe, we
    use a single address space, and avoided a lot of complexity of general purpose
    operating systems. Security-wise this is excellent: less attack surface, fewer
    attack vectors. Also less resource-heavy than contemporary OS. The result are
    tiny unikernels (e.g. a firewall with ~3MB as the full virtual machine image)
    that only contain the code really needed. I''ll present what MirageOS is today
    and where it is used, its future, and our learnings so far.


    https://mirage.io


    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com


    #ocaml'
  published: 2024-11-20T09:24:00+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: The Story Behind the Fastest Image Comparison Library  - Dmitriy Kovalenko
    - FUN OCaml 2024
  url: https://www.youtube.com/watch/hTAvAKolWd8?version=3
  thumbnail: https://i1.ytimg.com/vi/hTAvAKolWd8/hqdefault.jpg
  description: 'Dmitriy Kovalenko''s FUN OCaml 2024 talk recording!


    Overview by Dmitriy:


    I am the author of dmtrKovalenko/odiff which claims to be and it is the fastest
    in the world (on my banchmarks lol) implementation of the pixel-by-pixel image
    comparison library which is written in OCaml (and a little bit of C). This is
    a story about standing the project. Why not to write it in C or Rust? How do we
    tune the garbage collector to avoid major collections at all? All this and much
    more like the hidden superpower of unboxed floats and some challenges about naked
    pointers and upgrading to OCaml v5 in my talk!


    odiff: https://github.com/dmtrKovalenko/odiff


    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com


    #ocaml'
  published: 2024-11-20T09:24:00+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: Easy GADTs by Repeating Yourself - Eduardo Rafael - FUN OCaml 2024
  url: https://www.youtube.com/watch/-XYO_ILJG2M?version=3
  thumbnail: https://i2.ytimg.com/vi/-XYO_ILJG2M/hqdefault.jpg
  description: 'Eduardo Rafael''s FUN OCaml 2024 talk recording!


    Overview by Eduardo:



    Traditionally GADT''s are used for lightweight tasks as the code complexity increases
    quite. I will be arguing that this is mostly a lack of common "design patterns"
    and maybe some tools. The talk will go through describing what you can fundamentally
    do with GADT''s, how you should think about them and a general technique to mimic
    dependent types in OCaml, Hopefully by the end, a show case of a proposal for
    the Michelson interpreter.



    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com


    #ocaml'
  published: 2024-11-20T09:23:58+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: Maybe OCaml Was the Friends We Made Along the Way - Dillon Mulroy - FUN OCaml
    2024
  url: https://www.youtube.com/watch/1HlIHPa38gY?version=3
  thumbnail: https://i2.ytimg.com/vi/1HlIHPa38gY/hqdefault.jpg
  description: 'Dillon Mulroy''s FUN OCaml 2024 talk recording!


    Overview by Dillon:


    In my decade-long journey as a software engineer, the most transformative experience
    came from an unexpected source: learning and using OCaml. I will share how this
    functional programming language reshaped my approach to problem-solving, coding
    practices, and overall mindset about programming. Beyond the technical skills,
    OCaml connected me with incredibly bright, kind, and talented mentors and peers
    who have become lifelong friends. This journey also paved the way for my success
    on Twitch, allowing me to share my passion and knowledge with a broader audience.
    Join me as I explore the personal and professional growth that OCaml facilitated
    and celebrate the community that made it possible.


    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com


    #ocaml'
  published: 2024-11-20T09:23:58+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: OCANNL, the `neural_nets_lib` - Lukasz Stafiniak - FUN OCaml 2024
  url: https://www.youtube.com/watch/1J2XyHLb2J0?version=3
  thumbnail: https://i2.ytimg.com/vi/1J2XyHLb2J0/hqdefault.jpg
  description: 'Lukasz Stafiniak''s FUN OCaml 2024 talk recording!


    Overview by Lukasz:



    Using OCANNL, we will build a toy feed forward network, we will train it, visualize
    its outputs. We will take a peek at the actual computation generated at various
    levels of abstraction: tensor node assignments, optimized C-language-like programs,
    translations to actual C (for CPUs, or CUDA but it is still work-in-progress).
    Lastly, we will parallelize training across multiple devices.


    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com


    #ocaml'
  published: 2024-11-20T09:23:58+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: Learning OCaml with Tiny Code Xmas - Michael Dales - FUN OCaml 2024
  url: https://www.youtube.com/watch/2ZswyN4aP2o?version=3
  thumbnail: https://i3.ytimg.com/vi/2ZswyN4aP2o/hqdefault.jpg
  description: 'Michael Dales''s FUN OCaml 2024 talk recording!


    Overview by Michael:



    Each year the demo community run Tiny Code Xmas - using fantasy consoles like
    TIC-80 and PICO-8 to teach people to do retro graphics effects and size coding.
    But I didn''t want to learn size coding, I wanted to learn OCaml! So for my first
    OCaml project I built a small fantasy console engine using OCaml, and implemented
    both Tiny Code Xmas and most of Genuary (generate art January) in it. In this
    talk I''ll show why demo coding suits functional programming, look at how I built
    my first OCaml library, and show some examples of generative art using it.



    Tiny Code Xmas: https://tcc.lovebyte.party/


    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com'
  published: 2024-11-20T09:23:58+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: Let Signals in OCaml - Rizo Isrof - FUN OCaml 2024
  url: https://www.youtube.com/watch/34bceAuSRXE?version=3
  thumbnail: https://i4.ytimg.com/vi/34bceAuSRXE/hqdefault.jpg
  description: 'Rizo Isrof''s FunOCaml 2024 talk recording!


    Overview by Rizo:


    Signals and fine-grained reactivity are two popular concepts in the JavaScript
    world, thanks to their simplicity, ergonomics and excellent performance. What
    are signals? What is their type? How can we use them in OCaml? Let''s build a
    reactive UI library from scratch to find out! From simple callbacks, layers are
    added to support batching, resource cleanup and `let` syntax for composing effects.
    DOM interactions are implemented to allow predictable, minimal and efficient UI
    updates. Finally, helix is revealed, a library based on the presented reactivity
    principles. I review some examples and discuss how helix is used to implement
    real-world applications at Hyper and Tarides.


    Find speaker: https://github.com/rizo, https://x.com/rizo_isrof



    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com


    #ocaml'
  published: 2024-11-20T09:23:58+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: A 'Melange' of Tooling Coming Together - Antonio Monteiro - FUN OCaml 2024
  url: https://www.youtube.com/watch/3oCXT-ycHHs?version=3
  thumbnail: https://i4.ytimg.com/vi/3oCXT-ycHHs/hqdefault.jpg
  description: 'Antonio Monteiro''s FUN OCaml 2024 talk recording!



    Overview by Antonio:


    Melange is a new compiler for OCaml targeting JavaScript. Melange codebases integrate
    with the OCaml Platform: install from OPAM, build with Dune, preprocess with `ppxlib`,
    format with OCamlformat and publish with `dune-release`. Merlin, OCaml-LSP and
    `odoc` work out of the box. In this talk, I will tell you about the Melange success
    story and give a glimpse of what''s coming in the near future.



    Melange: https://melange.re


    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com


    #ocaml'
  published: 2024-11-20T09:23:58+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: Building Incremental and Reproducible Data Pipelines  - Patrick Ferris -
    FUN OCaml 2024
  url: https://www.youtube.com/watch/6mxx2j1jmhE?version=3
  thumbnail: https://i3.ytimg.com/vi/6mxx2j1jmhE/hqdefault.jpg
  description: 'Patrick Ferris''s FUN OCaml 2024 talk recording!


    Overview by Patrick:


    We present the good and the bad of building a dataflow engine in OCaml. The engine
    underpins a complex ecological analysis of avoided deforestation projects in tropical
    moist rainforests. We will discuss: Onboarding experienced developers who are
    new to OCaml. - Building an operating system in OCaml to run Python/R code.Developing
    geospatial libraries and how this benefited from Outreachy internships and the
    compiler''s backwards compatibility. Managing a transition from monadic, asynchronous
    libraries to direct-style code. This work is part of a multi-year collaboration
    between the departments of Computer Science, Ecology, Zoology and Geography at
    the University of Cambridge.



    Full title: Building Incremental and Reproducible Data Pipelines for Tackling
    Climate Change


    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com


    #ocaml'
  published: 2024-11-20T09:23:58+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: The Future of Dune - Leandro Ostera - FUN OCaml 2024
  url: https://www.youtube.com/watch/7_bv3EvQANY?version=3
  thumbnail: https://i4.ytimg.com/vi/7_bv3EvQANY/hqdefault.jpg
  description: 'Leandro Ostera''s FUN OCaml 2024 talk recording!


    Overview by Leandro:



    In this talk Leandro Ostera, the PM of OCaml Build System team at Tarides shows
    the future of developer experience in dune. He will present the new features that
    are being developed and the roadmap for the next releases.


    Try the Dune Developer Preview: https://preview.dune.build


    Connect with us

    Website: https://fun-ocaml.com/

    Twitter: https://x.com/FunOCaml

    Bluesky: https://bsky.app/profile/fun-ocaml.com'
  published: 2024-11-20T09:23:58+00:00
  author_name: FUN OCaml
  author_uri: https://www.youtube.com/channel/UC3TI-fmhJ_g3_n9fHaXGZKA
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UC3TI-fmhJ_g3_n9fHaXGZKA
  source_title: FUN OCaml
- title: 'System Jitter and Where to Find It: A Whack-a-Mole Experience'
  url: https://www.youtube.com/watch/I_TtMk5z0O0?version=3
  thumbnail: https://i2.ytimg.com/vi/I_TtMk5z0O0/hqdefault.jpg
  description: "In this Tech Talk, Tudor Brindus, a software engineer at Jane Street,
    shares his expertise on reducing jitter\u2014deviations from mean input processing
    times\u2014in low-latency systems. Maintaining consistently low jitter in a trading
    system allows us to offer tighter markets without incurring additional risk. Using
    a simple memory ping-pong application as a case study, Tudor will walk through
    how to identify and resolve common sources of jitter caused by both Linux kernel
    and microarchitectural conditions."
  published: 2024-11-15T17:31:27+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: 'uv: An Extremely Fast Python Package Manager'
  url: https://www.youtube.com/watch/gSKTfG1GXYQ?version=3
  thumbnail: https://i4.ytimg.com/vi/gSKTfG1GXYQ/hqdefault.jpg
  description: 'Charlie Marsh is the founder of Astral, which develops uv, a next-generation
    Python package manager written in Rust. In this talk, Charlie details the unique
    challenges of the Python packaging ecosystem and how he made uv so fast: allocators,
    concurrency, zero-copy tricks, and more.


    You can find the transcript for this video and other Tech Talks here: https://www.janestreet.com/tech-talks/index.html'
  published: 2024-10-23T20:57:51+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: ASMR Golang Boxed Jades
  url: https://www.youtube.com/watch/mLAg5dTF-E4?version=3
  thumbnail: https://i2.ytimg.com/vi/mLAg5dTF-E4/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2024-10-04T16:32:55+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: i fell for mocks again...
  url: https://www.youtube.com/watch/rhUwOBg4TyM?version=3
  thumbnail: https://i3.ytimg.com/vi/rhUwOBg4TyM/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2024-10-02T13:39:42+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: How to Use OCaml's Coercion Operator
  url: https://www.youtube.com/watch/HNLSyxN-rPE?version=3
  thumbnail: https://i1.ytimg.com/vi/HNLSyxN-rPE/hqdefault.jpg
  description: "Description: OCaml supports a subtyping relation, where the type system
    recognizes that all values of one type are also values of another. It allows coercions
    from one type to another using the coercion operator. This video demonstrates
    how it works. (Note: This video doesn\u2019t include anything specific to Jane
    Street!)\n\nCode written in this video:\nhttps://github.com/goldfirere/janestreet-videos/blob/b6aaa2ea731af13dcbd1c5a50a621574f79dd37e/variance/variance.ml"
  published: 2024-10-01T20:02:27+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: why am i building this?
  url: https://www.youtube.com/watch/qpu_iOGYC-g?version=3
  thumbnail: https://i2.ytimg.com/vi/qpu_iOGYC-g/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2024-09-30T19:45:26+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: if you dont like it, make your own
  url: https://www.youtube.com/watch/-sPYTEt49nw?version=3
  thumbnail: https://i2.ytimg.com/vi/-sPYTEt49nw/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2024-09-26T00:53:44+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: The Greatest Vim Website
  url: https://www.youtube.com/watch/eRxo3kER5is?version=3
  thumbnail: https://i2.ytimg.com/vi/eRxo3kER5is/hqdefault.jpg
  description: "LIVE ON TWITCH: https://twitch.tv/ThePrimeagen\n\nBecome a backend
    engineer.  Its my favorite site\nhttps://boot.dev/?promo=PRIMEYT\n\nThis is also
    the best way to support me is to support yourself becoming a better backend engineer.
    \ \n\nGet in on Discord: https://discord.gg/ThePrimeagen\n\nGet in on Twitter:
    https://twitter.com/ThePrimeagen\n\n### Got Something For Me to Read or Watch??:
    \nhttps://www.reddit.com/r/ThePrimeagenReact/"
  published: 2024-09-21T14:00:39+00:00
  author_name: TheVimeagen
  author_uri: https://www.youtube.com/channel/UCVk4b-svNJoeytrrlOixebQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCVk4b-svNJoeytrrlOixebQ
  source_title: The Vimeagen
- title: OCaml's New Proposed "include functor" Syntax | OCaml Unboxed
  url: https://www.youtube.com/watch/SWURUDr_i3w?version=3
  thumbnail: https://i4.ytimg.com/vi/SWURUDr_i3w/hqdefault.jpg
  description: 'A well-designed interface offers lots of expressiveness with minimal
    implementation. OCaml programmers thus often implement just a few functions in
    an interface (module type), then use a functor to define the rest based on these
    definitions. This idiom, though useful, can be awkward, requiring a little repetition.
    To make this easier, Jane Street designed the "include functor" syntax. This video
    shows how it works and why you might want to use it.



    View instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions



    Reference documentation for the "include functor" feature:

    https://github.com/ocaml-flambda/flambda-backend/blob/main/ocaml/jane/doc/extensions/include-functor.md



    Code written in this video:

    https://github.com/goldfirere/janestreet-videos/blob/main/include-functor/include_functor.ml



    Proposal to include "include functor" in mainstream OCaml:

    https://github.com/ocaml/RFCs/pull/43'
  published: 2024-08-07T18:14:54+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: Programming with OCaml's Local Mode | OCaml Unboxed
  url: https://www.youtube.com/watch/RBulw_Ik8QY?version=3
  thumbnail: https://i3.ytimg.com/vi/RBulw_Ik8QY/hqdefault.jpg
  description: 'This OCaml Unboxed episode demonstrates some of the twists and turns
    you might encounter while programming with locals and introduces the *global modality*.
    Watching this video might help you learn what to look for when programming with
    locals!



    View instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions



    Full documentation of locals:

    https://github.com/ocaml-flambda/flambda-backend/blob/main/ocaml/jane/doc/extensions/local/intro.md'
  published: 2024-06-24T12:40:46+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: Regions with OCaml's Local Types | OCaml Unboxed
  url: https://www.youtube.com/watch/tFGlT0mHBs0?version=3
  thumbnail: https://i1.ytimg.com/vi/tFGlT0mHBs0/hqdefault.jpg
  description: 'This OCaml Unboxed episode describes regions and the hidden regional
    mode in OCaml''s local types, as developed by Jane Street. It turns out that local
    parameters aren''t really local: they''re regional! This explains how some impossible-looking
    programs actually work.



    View instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions



    Full documentation of locals:

    https://github.com/ocaml-flambda/flambda-backend/blob/main/ocaml/jane/doc/extensions/local/intro.md'
  published: 2024-06-13T19:50:45+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: "Exploring the Hidden Secrets within OCaml\u2019s Local Function Types |
    OCaml Unboxed"
  url: https://www.youtube.com/watch/144cM-iMSjc?version=3
  thumbnail: https://i2.ytimg.com/vi/144cM-iMSjc/hqdefault.jpg
  description: 'This OCaml Unboxed episode demonstrates how partial application and
    currying can cause trouble when mixed with locals. It turns out that putting "local_"
    in your function type may do more than you bargained for!



    Code used in this video:

    https://github.com/goldfirere/janestreet-videos/blob/main/locals/08-function-types/local.ml



    View instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions


    Full documentation of locals:

    https://github.com/ocaml-flambda/flambda-backend/blob/main/ocaml/jane/doc/extensions/local/intro.md'
  published: 2024-05-29T20:15:59+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: Pitfalls with Tail Calls and Locals in OCaml | OCaml Unboxed
  url: https://www.youtube.com/watch/jz66PE4PkV8
  thumbnail: https://i3.ytimg.com/vi/jz66PE4PkV8/hqdefault.jpg
  description: 'This is the seventh in a series about locals in OCaml. This episode
    explains the challenges around tail-call optimization and how to keep local variables
    from escaping their region. I introduce the [@nontail] annotation to prevent tail-call
    optimization, which is often needed when writing code with locals.


    Code used in this video: https://github.com/goldfirere/janestreet-videos/blob/main/locals/07-tails/local.ml


    View instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions'
  published: 2024-05-07T18:24:15+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: Pitfalls with Tail Calls and Locals in OCaml | OCaml Unboxed
  url: https://www.youtube.com/watch/jz66PE4PkV8?version=3
  thumbnail: https://i3.ytimg.com/vi/jz66PE4PkV8/hqdefault.jpg
  description: 'This is the seventh in a series about locals in OCaml. This episode
    explains the challenges around tail-call optimization and how to keep local variables
    from escaping their region. I introduce the [@nontail] annotation to prevent tail-call
    optimization, which is often needed when writing code with locals.


    Code used in this video: https://github.com/goldfirere/janestreet-videos/blob/main/locals/07-tails/local.ml


    View instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions'
  published: 2024-05-07T18:24:15+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (14) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/A8dpmhXdjyw
  thumbnail: https://i2.ytimg.com/vi/A8dpmhXdjyw/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 14 mars 2024 : Design and Compilation
    of Efficient Effect Handlers in the Koka Language\n\nIntervenant : Daan Leijen,
    Microsoft Research\n\nRetrouvez les enregistrements audios et vid\xE9os du cycle
    et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-18T15:32:14+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (14) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/A8dpmhXdjyw?version=3
  thumbnail: https://i2.ytimg.com/vi/A8dpmhXdjyw/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 14 mars 2024 : Design and Compilation
    of Efficient Effect Handlers in the Koka Language\n\nIntervenant : Daan Leijen,
    Microsoft Research\n\nRetrouvez les enregistrements audios et vid\xE9os du cycle
    et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-18T15:32:14+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (13) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/RCnbZBep9Tw
  thumbnail: https://i3.ytimg.com/vi/RCnbZBep9Tw/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 14 mars 2024 : Logiques de programmes
    pour le contr\xF4le et les effets\n\nProfesseur : Xavier Leroy\nChaire Sciences
    du logiciel\n\nTout comme la logique math\xE9matique donne des lois pour raisonner
    sur les d\xE9finitions et les \xE9nonc\xE9s math\xE9matiques, une logique de programmes
    pour un langage de programmation donne des lois pour \xE9tablir des propri\xE9t\xE9s
    vraies de toutes les ex\xE9cutions possibles d'un programme \xE9crit dans ce langage.
    Apr\xE8s des rappels sur cette approche d\xE9ductive de la v\xE9rification de
    programmes et sur la plus ancienne de ces logiques, celle publi\xE9e par C.A.R.
    Hoare en 1969, ce cours a montr\xE9 comment cette logique de Hoare s'applique
    \xE0 de nombreuses structures de contr\xF4le, dont plusieurs formes de boucles,
    avec sortie pr\xE9matur\xE9e mono-niveau ou multi-niveaux, mais aussi \xE0 des
    constructions non-d\xE9terministes comme les commandes gard\xE9es de Dijkstra,
    et jusqu'aux coroutines asym\xE9triques et aux threads coop\xE9ratifs vus au deuxi\xE8me
    cours. M\xEAme le branchement \xAB goto \xBB peut \xEAtre sp\xE9cifi\xE9 en logique
    de Hoare, en prenant quelques pr\xE9cautions.\nLire la suite : https://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques/logiques-de-programmes-pour-le-controle-et-les-effets\n\nRetrouvez
    les enregistrements audios et vid\xE9os du cycle et son texte de pr\xE9sentation
    :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-18T15:32:10+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (13) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/RCnbZBep9Tw?version=3
  thumbnail: https://i3.ytimg.com/vi/RCnbZBep9Tw/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 14 mars 2024 : Logiques de programmes
    pour le contr\xF4le et les effets\n\nProfesseur : Xavier Leroy\nChaire Sciences
    du logiciel\n\nTout comme la logique math\xE9matique donne des lois pour raisonner
    sur les d\xE9finitions et les \xE9nonc\xE9s math\xE9matiques, une logique de programmes
    pour un langage de programmation donne des lois pour \xE9tablir des propri\xE9t\xE9s
    vraies de toutes les ex\xE9cutions possibles d'un programme \xE9crit dans ce langage.
    Apr\xE8s des rappels sur cette approche d\xE9ductive de la v\xE9rification de
    programmes et sur la plus ancienne de ces logiques, celle publi\xE9e par C.A.R.
    Hoare en 1969, ce cours a montr\xE9 comment cette logique de Hoare s'applique
    \xE0 de nombreuses structures de contr\xF4le, dont plusieurs formes de boucles,
    avec sortie pr\xE9matur\xE9e mono-niveau ou multi-niveaux, mais aussi \xE0 des
    constructions non-d\xE9terministes comme les commandes gard\xE9es de Dijkstra,
    et jusqu'aux coroutines asym\xE9triques et aux threads coop\xE9ratifs vus au deuxi\xE8me
    cours. M\xEAme le branchement \xAB goto \xBB peut \xEAtre sp\xE9cifi\xE9 en logique
    de Hoare, en prenant quelques pr\xE9cautions.\nLire la suite : https://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques/logiques-de-programmes-pour-le-controle-et-les-effets\n\nRetrouvez
    les enregistrements audios et vid\xE9os du cycle et son texte de pr\xE9sentation
    :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-18T15:32:10+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: 'OCaml Unboxed: An Exploration of Jane Street''s Experiments with OCaml'
  url: https://www.youtube.com/watch/LwD3GxsY-pc
  thumbnail: https://i1.ytimg.com/vi/LwD3GxsY-pc/hqdefault.jpg
  description: 'This video introduces the OCaml Unboxed series, which will dive into
    topics like local mode, unboxed types, and many more fun detours along the way.
    Join me, Richard Eisenberg, as we explore the frontiers of functional programming
    language design in OCaml!


    Oxidizing OCaml blog posts:

    - Locality: https://blog.janestreet.com/oxidizing-ocaml-locality

    - Ownership: https://blog.janestreet.com/oxidizing-ocaml-ownership

    - Data-race Freedom: https://blog.janestreet.com/oxidizing-ocaml-parallelism'
  published: 2024-03-13T17:30:02+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: 'OCaml Unboxed: An Exploration of Jane Street''s Experiments with OCaml'
  url: https://www.youtube.com/watch/LwD3GxsY-pc?version=3
  thumbnail: https://i1.ytimg.com/vi/LwD3GxsY-pc/hqdefault.jpg
  description: 'This video introduces the OCaml Unboxed series, which will dive into
    topics like local mode, unboxed types, and many more fun detours along the way.
    Join me, Richard Eisenberg, as we explore the frontiers of functional programming
    language design in OCaml!


    Oxidizing OCaml blog posts:

    - Locality: https://blog.janestreet.com/oxidizing-ocaml-locality

    - Ownership: https://blog.janestreet.com/oxidizing-ocaml-ownership

    - Data-race Freedom: https://blog.janestreet.com/oxidizing-ocaml-parallelism'
  published: 2024-03-13T17:30:02+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (12) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/mGlhlmr1ki4
  thumbnail: https://i2.ytimg.com/vi/mGlhlmr1ki4/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 07 mars 2024 : Effect Handlers
    and Mathematically Inspired Language Constructs\n\nIntervenant : Matija Pretnar,
    Universit\xE9 de Ljubljana\n\nRetrouvez les enregistrements audios et vid\xE9os
    du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-12T10:23:44+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (12) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/mGlhlmr1ki4?version=3
  thumbnail: https://i2.ytimg.com/vi/mGlhlmr1ki4/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 07 mars 2024 : Effect Handlers
    and Mathematically Inspired Language Constructs\n\nIntervenant : Matija Pretnar,
    Universit\xE9 de Ljubljana\n\nRetrouvez les enregistrements audios et vid\xE9os
    du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-12T10:23:44+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (11) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/EQaAlrs4OKc
  thumbnail: https://i2.ytimg.com/vi/EQaAlrs4OKc/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 07 mars 2024 : Typage et analyse statique
    des effets\n\nProfesseur : Xavier Leroy\nChaire Sciences du logiciel\n\nRetrouvez
    les enregistrements audios et vid\xE9os du cycle et son texte de pr\xE9sentation
    :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-12T10:23:40+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (11) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/EQaAlrs4OKc?version=3
  thumbnail: https://i2.ytimg.com/vi/EQaAlrs4OKc/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 07 mars 2024 : Typage et analyse statique
    des effets\n\nProfesseur : Xavier Leroy\nChaire Sciences du logiciel\n\nRetrouvez
    les enregistrements audios et vid\xE9os du cycle et son texte de pr\xE9sentation
    :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-12T10:23:40+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (10) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/7Q4WUG-KDec
  thumbnail: https://i4.ytimg.com/vi/7Q4WUG-KDec/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 29 f\xE9vrier 2024 : Les continuations
    : cinq minutes pour les apprendre, toute une vie pour les comprendre\n\nIntervenant
    : Olivier Danvy, National University of Singapore\n\nRetrouvez les enregistrements
    audios et vid\xE9os du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-05T10:54:51+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (10) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/7Q4WUG-KDec?version=3
  thumbnail: https://i4.ytimg.com/vi/7Q4WUG-KDec/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 29 f\xE9vrier 2024 : Les continuations
    : cinq minutes pour les apprendre, toute une vie pour les comprendre\n\nIntervenant
    : Olivier Danvy, National University of Singapore\n\nRetrouvez les enregistrements
    audios et vid\xE9os du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-05T10:54:51+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (9) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/hrBfygrPpHU
  thumbnail: https://i1.ytimg.com/vi/hrBfygrPpHU/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 29 f\xE9vrier 2024 : Th\xE9orie des effets
    : des monades aux effets alg\xE9briques\n\nProfesseur : Xavier Leroy\nChaire Sciences
    du logiciel\n\nRetrouvez les enregistrements audios et vid\xE9os du cycle et son
    texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-05T10:54:48+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (9) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/hrBfygrPpHU?version=3
  thumbnail: https://i1.ytimg.com/vi/hrBfygrPpHU/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 29 f\xE9vrier 2024 : Th\xE9orie des effets
    : des monades aux effets alg\xE9briques\n\nProfesseur : Xavier Leroy\nChaire Sciences
    du logiciel\n\nRetrouvez les enregistrements audios et vid\xE9os du cycle et son
    texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-03-05T10:54:48+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: Stack Allocation with Locals in OCaml | OCaml Unboxed
  url: https://www.youtube.com/watch/rHf3YryF7jc
  thumbnail: https://i3.ytimg.com/vi/rHf3YryF7jc/hqdefault.jpg
  description: "This is the sixth installment in the video series explaining OCaml's
    locals. In this episode, I demonstrate how stack allocation works with locals.
    (And yes, even though locals use stack allocation, I guarantee this is not the
    stack you\u2019re thinking of!)\n\nCode used in this video: https://github.com/goldfirere/janestreet-videos/blob/main/locals/05-programming-with-locals/local.ml"
  published: 2024-02-29T12:53:15+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: Stack Allocation with Locals in OCaml | OCaml Unboxed
  url: https://www.youtube.com/watch/rHf3YryF7jc?version=3
  thumbnail: https://i3.ytimg.com/vi/rHf3YryF7jc/hqdefault.jpg
  description: "This is the sixth installment in the video series explaining OCaml's
    locals. In this episode, I demonstrate how stack allocation works with locals.
    (And yes, even though locals use stack allocation, I guarantee this is not the
    stack you\u2019re thinking of!)\n\nCode used in this video: https://github.com/goldfirere/janestreet-videos/blob/main/locals/05-programming-with-locals/local.ml"
  published: 2024-02-29T12:53:15+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (8) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/qRORl7ZggMI
  thumbnail: https://i2.ytimg.com/vi/qRORl7ZggMI/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 22 f\xE9vrier 2024 : Compiling
    with Continuations\n\nIntervenant : Andrew Kennedy, Meta\n\nRetrouvez les enregistrements
    audios et vid\xE9os du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-23T17:12:13+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (8) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/qRORl7ZggMI?version=3
  thumbnail: https://i2.ytimg.com/vi/qRORl7ZggMI/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 22 f\xE9vrier 2024 : Compiling
    with Continuations\n\nIntervenant : Andrew Kennedy, Meta\n\nRetrouvez les enregistrements
    audios et vid\xE9os du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-23T17:12:13+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (7) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/eRF2OHzyivE
  thumbnail: https://i2.ytimg.com/vi/eRF2OHzyivE/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 22 f\xE9vrier 2024 : Pratique des effets
    : des exceptions aux gestionnaires d'effets\n\nProfesseur : Xavier Leroy\nChaire
    Sciences du logiciel\n\nRetrouvez les enregistrements audios et vid\xE9os du cycle
    et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-23T17:12:10+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (7) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/eRF2OHzyivE?version=3
  thumbnail: https://i2.ytimg.com/vi/eRF2OHzyivE/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 22 f\xE9vrier 2024 : Pratique des effets
    : des exceptions aux gestionnaires d'effets\n\nProfesseur : Xavier Leroy\nChaire
    Sciences du logiciel\n\nRetrouvez les enregistrements audios et vid\xE9os du cycle
    et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-23T17:12:10+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: OCaml Locals Save Allocations | OCaml Unboxed
  url: https://www.youtube.com/watch/AGu4AO5zO8o
  thumbnail: https://i2.ytimg.com/vi/AGu4AO5zO8o/hqdefault.jpg
  description: "This is the fifth video in a series about OCaml\u2019s locals. This
    episode demonstrates how using locals reduces garbage-collected allocations. Watch
    as I demonstrate how to use locals, fending off plenty of error messages along
    the way.\n\nView instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions\n\n\nCode
    used in this video: https://github.com/goldfirere/janestreet-videos/blob/main/locals/05-programming-with-locals/local.ml"
  published: 2024-02-20T21:30:01+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: OCaml Locals Save Allocations | OCaml Unboxed
  url: https://www.youtube.com/watch/AGu4AO5zO8o?version=3
  thumbnail: https://i2.ytimg.com/vi/AGu4AO5zO8o/hqdefault.jpg
  description: "This is the fifth video in a series about OCaml\u2019s locals. This
    episode demonstrates how using locals reduces garbage-collected allocations. Watch
    as I demonstrate how to use locals, fending off plenty of error messages along
    the way.\n\nView instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions\n\n\nCode
    used in this video: https://github.com/goldfirere/janestreet-videos/blob/main/locals/05-programming-with-locals/local.ml"
  published: 2024-02-20T21:30:01+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (6) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/FR3T3tQjpfg
  thumbnail: https://i3.ytimg.com/vi/FR3T3tQjpfg/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 15 f\xE9vrier 2024 : Repr\xE9sentations
    interm\xE9diaires pour la compilation : s'affranchir du graphe de flot de contr\xF4le\n\nIntervenante
    : Delphine Demange, universit\xE9 de Rennes\n\nLe graphe de flot de contr\xF4le
    est une repr\xE9sentation interm\xE9diaire classique des programmes dans les compilateurs
    optimisants pour les langages imp\xE9ratifs. Cette repr\xE9sentation a permis
    de formuler et de d\xE9velopper de nombreuses optimisations de programmes, des
    plus simples jusqu'aux plus sophistiqu\xE9es.\n\nDans sa forme originelle, le
    graphe de flot de contr\xF4le pr\xE9sente toutefois deux inconv\xE9nients pour
    optimiser les programmes. D\u2019une part, beaucoup d'analyses de programmes sont
    sensibles au nommage des variables du programme. D'autre part, un mod\xE8le d\u2019ex\xE9cution
    enti\xE8rement dirig\xE9 par le contr\xF4le rend parfois difficile le r\xE9ordonnancement
    des instructions.\n\nDans cet expos\xE9, nous nous int\xE9resserons \xE0 des repr\xE9sentations
    interm\xE9diaires embl\xE9matiques qui visent \xE0 pallier ces inconv\xE9nients.
    La premi\xE8re, SSA, permet d'exposer, \xE0 travers un sch\xE9ma sp\xE9cifique
    de nommage, quelques relations de d\xE9pendances entre instructions. La seconde,
    Sea-of-Nodes, s'appuie sur SSA et rel\xE2che certaines contraintes d'ordre d'ex\xE9cution
    au sein de r\xE9gions du graphe. Issues de travaux de recherche, elles sont aujourd'hui
    utilis\xE9es avec succ\xE8s dans des compilateurs optimisants de r\xE9f\xE9rence.
    Nous pr\xE9senterons leur mod\xE8le d'ex\xE9cution respectif, ainsi que leurs
    propri\xE9t\xE9s s\xE9mantiques clefs dans le cadre de l'optimisation de programmes.
    Enfin, nous pr\xE9senterons quelques enjeux actuels du domaine, o\xF9 des repr\xE9sentations
    interm\xE9diaires similaires sont utilis\xE9es pour basculer dans un mod\xE8le
    d'ex\xE9cution dirig\xE9 par les donn\xE9es.\n\nRetrouvez les enregistrements
    audios et vid\xE9os du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-17T09:17:59+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (6) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/FR3T3tQjpfg?version=3
  thumbnail: https://i3.ytimg.com/vi/FR3T3tQjpfg/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 15 f\xE9vrier 2024 : Repr\xE9sentations
    interm\xE9diaires pour la compilation : s'affranchir du graphe de flot de contr\xF4le\n\nIntervenante
    : Delphine Demange, universit\xE9 de Rennes\n\nLe graphe de flot de contr\xF4le
    est une repr\xE9sentation interm\xE9diaire classique des programmes dans les compilateurs
    optimisants pour les langages imp\xE9ratifs. Cette repr\xE9sentation a permis
    de formuler et de d\xE9velopper de nombreuses optimisations de programmes, des
    plus simples jusqu'aux plus sophistiqu\xE9es.\n\nDans sa forme originelle, le
    graphe de flot de contr\xF4le pr\xE9sente toutefois deux inconv\xE9nients pour
    optimiser les programmes. D\u2019une part, beaucoup d'analyses de programmes sont
    sensibles au nommage des variables du programme. D'autre part, un mod\xE8le d\u2019ex\xE9cution
    enti\xE8rement dirig\xE9 par le contr\xF4le rend parfois difficile le r\xE9ordonnancement
    des instructions.\n\nDans cet expos\xE9, nous nous int\xE9resserons \xE0 des repr\xE9sentations
    interm\xE9diaires embl\xE9matiques qui visent \xE0 pallier ces inconv\xE9nients.
    La premi\xE8re, SSA, permet d'exposer, \xE0 travers un sch\xE9ma sp\xE9cifique
    de nommage, quelques relations de d\xE9pendances entre instructions. La seconde,
    Sea-of-Nodes, s'appuie sur SSA et rel\xE2che certaines contraintes d'ordre d'ex\xE9cution
    au sein de r\xE9gions du graphe. Issues de travaux de recherche, elles sont aujourd'hui
    utilis\xE9es avec succ\xE8s dans des compilateurs optimisants de r\xE9f\xE9rence.
    Nous pr\xE9senterons leur mod\xE8le d'ex\xE9cution respectif, ainsi que leurs
    propri\xE9t\xE9s s\xE9mantiques clefs dans le cadre de l'optimisation de programmes.
    Enfin, nous pr\xE9senterons quelques enjeux actuels du domaine, o\xF9 des repr\xE9sentations
    interm\xE9diaires similaires sont utilis\xE9es pour basculer dans un mod\xE8le
    d'ex\xE9cution dirig\xE9 par les donn\xE9es.\n\nRetrouvez les enregistrements
    audios et vid\xE9os du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-17T09:17:59+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (5) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/w384n7K77Cw
  thumbnail: https://i4.ytimg.com/vi/w384n7K77Cw/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 15 f\xE9vrier 2024 : Programmer ses structures
    de contr\xF4le : continuations et op\xE9rateurs de contr\xF4le\n\nProfesseur :
    Xavier Leroy\nChaire Sciences du logiciel\n\nLe quatri\xE8me cours a introduit
    la notion de continuation d'un point de programme dans un programme imp\xE9ratif,
    ou d'une sous-expression dans un programme fonctionnel.  Il s'agit de la suite
    des calculs restant \xE0 effectuer pour atteindre la fin du programme, repr\xE9sent\xE9e
    soit par un objet du langage de programmation (commande, fonction, ...), soit
    par un objet math\xE9matique.  Dans les travaux de recherche des ann\xE9es 1965\u20131975
    sur la s\xE9mantique d\xE9notationnelle, les continuations apparaissent comme
    moyen de donner une s\xE9mantique math\xE9matiquement pr\xE9cise aux branchements
    \xABgoto\xBB non locaux du langage Algol.  Mais c'est dans le cadre des langages
    de programmation fonctionnelle que les continuations montrent tout leur int\xE9r\xEAt
    : tout d'abord, pour sp\xE9cifier compl\xE8tement les strat\xE9gies de r\xE9ductions
    (comme l'appel par valeur et l'appel par nom) par transformation syst\xE9matique
    des programmes, pour les mettre en style \xE0 passage de continuations (CPS, Continuation-Passing
    Style); ensuite, pour programmer manuellement dans ce style \xE0 passage de continuations,
    ce qui permet de d\xE9finir de nombreuses structures de contr\xF4le avanc\xE9es
    (it\xE9rateurs, g\xE9n\xE9rateurs, coroutines, threads coop\xE9ratifs) dans le
    langage m\xEAme, sous forme de biblioth\xE8ques.  Enfin, l'ajout d'op\xE9rateurs
    de contr\xF4le \xE0 un langage fonctionnel, comme le call/cc du langage Scheme,
    donne aux programmes de nouveaux moyens pour capturer, r\xE9ifier et relancer
    leurs propres continuations, permettant ainsi de d\xE9finir des structures de
    contr\xF4le avanc\xE9es dans le langage tout en gardant le programme en \xABstyle
    direct\xBB, sans mise en forme CPS manuelle.\n\nRetrouvez les enregistrements
    audios et vid\xE9os du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-17T09:17:55+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (5) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/w384n7K77Cw?version=3
  thumbnail: https://i4.ytimg.com/vi/w384n7K77Cw/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 15 f\xE9vrier 2024 : Programmer ses structures
    de contr\xF4le : continuations et op\xE9rateurs de contr\xF4le\n\nProfesseur :
    Xavier Leroy\nChaire Sciences du logiciel\n\nLe quatri\xE8me cours a introduit
    la notion de continuation d'un point de programme dans un programme imp\xE9ratif,
    ou d'une sous-expression dans un programme fonctionnel.  Il s'agit de la suite
    des calculs restant \xE0 effectuer pour atteindre la fin du programme, repr\xE9sent\xE9e
    soit par un objet du langage de programmation (commande, fonction, ...), soit
    par un objet math\xE9matique.  Dans les travaux de recherche des ann\xE9es 1965\u20131975
    sur la s\xE9mantique d\xE9notationnelle, les continuations apparaissent comme
    moyen de donner une s\xE9mantique math\xE9matiquement pr\xE9cise aux branchements
    \xABgoto\xBB non locaux du langage Algol.  Mais c'est dans le cadre des langages
    de programmation fonctionnelle que les continuations montrent tout leur int\xE9r\xEAt
    : tout d'abord, pour sp\xE9cifier compl\xE8tement les strat\xE9gies de r\xE9ductions
    (comme l'appel par valeur et l'appel par nom) par transformation syst\xE9matique
    des programmes, pour les mettre en style \xE0 passage de continuations (CPS, Continuation-Passing
    Style); ensuite, pour programmer manuellement dans ce style \xE0 passage de continuations,
    ce qui permet de d\xE9finir de nombreuses structures de contr\xF4le avanc\xE9es
    (it\xE9rateurs, g\xE9n\xE9rateurs, coroutines, threads coop\xE9ratifs) dans le
    langage m\xEAme, sous forme de biblioth\xE8ques.  Enfin, l'ajout d'op\xE9rateurs
    de contr\xF4le \xE0 un langage fonctionnel, comme le call/cc du langage Scheme,
    donne aux programmes de nouveaux moyens pour capturer, r\xE9ifier et relancer
    leurs propres continuations, permettant ainsi de d\xE9finir des structures de
    contr\xF4le avanc\xE9es dans le langage tout en gardant le programme en \xABstyle
    direct\xBB, sans mise en forme CPS manuelle.\n\nRetrouvez les enregistrements
    audios et vid\xE9os du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-17T09:17:55+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (4) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/WDg0__zO_cU
  thumbnail: https://i4.ytimg.com/vi/WDg0__zO_cU/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 8 f\xE9vrier 2024 : Comment concilier
    parall\xE9lisme et contr\xF4le ? Approches des architectures de processeurs g\xE9n\xE9ralistes
    et graphiques\n\nIntervenante : Caroline Collange, Inria\n\nDepuis la machine
    analytique de Babbage et Lovelace, le langage machine ex\xE9cut\xE9 par les processeurs
    consiste typiquement en une succession d'instructions dans l'ordre. Mais une mise
    en \u0153uvre efficace en mat\xE9riel n\xE9cessite d'ex\xE9cuter des instructions
    en parall\xE8le. Deux approches sont suivies respectivement dans les processeurs
    g\xE9n\xE9ralistes et les processeurs graphiques pour combler ce foss\xE9.\n\nUn
    c\u0153ur d'un processeur actuel maintient l'illusion d'une ex\xE9cution s\xE9quentielle,
    mais traite en r\xE9alit\xE9 plusieurs centaines d'instructions en vol, et les
    ex\xE9cute dans le d\xE9sordre. Ce jeu d'\xE9quilibriste repose sur de nombreux
    m\xE9canismes mat\xE9riels, dont la pr\xE9diction de branchements et le renommage
    de registres.\n\nLire la suite : https://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques/comment-concilier-parallelisme-et-controle-approches-des-architectures-de-processeurs-generalistes\n\nRetrouvez
    les enregistrements audios et vid\xE9os du cycle et son texte de pr\xE9sentation
    :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-11T10:17:33+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (4) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/WDg0__zO_cU?version=3
  thumbnail: https://i4.ytimg.com/vi/WDg0__zO_cU/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nS\xE9minaire du 8 f\xE9vrier 2024 : Comment concilier
    parall\xE9lisme et contr\xF4le ? Approches des architectures de processeurs g\xE9n\xE9ralistes
    et graphiques\n\nIntervenante : Caroline Collange, Inria\n\nDepuis la machine
    analytique de Babbage et Lovelace, le langage machine ex\xE9cut\xE9 par les processeurs
    consiste typiquement en une succession d'instructions dans l'ordre. Mais une mise
    en \u0153uvre efficace en mat\xE9riel n\xE9cessite d'ex\xE9cuter des instructions
    en parall\xE8le. Deux approches sont suivies respectivement dans les processeurs
    g\xE9n\xE9ralistes et les processeurs graphiques pour combler ce foss\xE9.\n\nUn
    c\u0153ur d'un processeur actuel maintient l'illusion d'une ex\xE9cution s\xE9quentielle,
    mais traite en r\xE9alit\xE9 plusieurs centaines d'instructions en vol, et les
    ex\xE9cute dans le d\xE9sordre. Ce jeu d'\xE9quilibriste repose sur de nombreux
    m\xE9canismes mat\xE9riels, dont la pr\xE9diction de branchements et le renommage
    de registres.\n\nLire la suite : https://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques/comment-concilier-parallelisme-et-controle-approches-des-architectures-de-processeurs-generalistes\n\nRetrouvez
    les enregistrements audios et vid\xE9os du cycle et son texte de pr\xE9sentation
    :\nhttps://www.college-de-france.fr/fr/agenda/seminaire/structures-de-controle-de-goto-aux-effets-algebriques\n\nChaire
    Sciences du logiciel\nProfesseur : Xavier Leroy\n\nRetrouvez tous les enseignements
    du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-11T10:17:33+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (3) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/qXOEcvoALis
  thumbnail: https://i2.ytimg.com/vi/qXOEcvoALis/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 8 f\xE9vrier 2024 : Chassez le contr\xF4le...
    : la programmation d\xE9clarative\n\nLa programmation d\xE9clarative s'attache
    \xE0 d\xE9crire les r\xE9sultats attendus du programme sans pour autant expliciter
    l'encha\xEEnement des \xE9tapes de calcul \xE9l\xE9mentaires qui produisent ces
    r\xE9sultats, au contraire de la programmation imp\xE9rative classique. Avons-nous
    encore besoin de structures de contr\xF4le dans les programmes d\xE9claratifs
    ? Le troisi\xE8me cours a tent\xE9 de r\xE9pondre \xE0 cette question en prenant
    l'exemple de trois paradigmes de programmation d\xE9clarative : la programmation
    r\xE9active synchrone (Lustre), la programmation purement fonctionnelle (Haskell,
    Scheme pur), et la programmation logique (Prolog). Les s\xE9mantiques des programmes
    \xE9crits dans ces langages reposent sur des principes \xE9l\xE9gants mais qui
    ne suffisent pas pour garantir la terminaison et le co\xFBt (en temps, en espace)
    des ex\xE9cutions d'un programme ; d'o\xF9 l'importance, m\xEAme dans un langage
    d\xE9claratif, de donner aux programmeurs les moyens de contr\xF4ler la mani\xE8re
    dont leurs programmes sont \xE9valu\xE9s. Nous avons mentionn\xE9 trois de ces
    moyens : ajouter des op\xE9rations ad hoc comme la coupure en Prolog, sp\xE9cifier
    les strat\xE9gies d'\xE9valuation utilis\xE9es (comme l'appel par valeur en Scheme
    et l'appel par n\xE9cessit\xE9 en Haskell), ou encoder la strat\xE9gie d\xE9sir\xE9e
    dans le programme lui-m\xEAme (par exemple en ajoutant des suspensions dans un
    programme Scheme).\n\nProfesseur : Xavier Leroy\nChaire Sciences du logiciel\n\nRetrouvez
    les enregistrements audios et vid\xE9os du cycle et son texte de pr\xE9sentation
    :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-11T10:17:30+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (3) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/qXOEcvoALis?version=3
  thumbnail: https://i2.ytimg.com/vi/qXOEcvoALis/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 8 f\xE9vrier 2024 : Chassez le contr\xF4le...
    : la programmation d\xE9clarative\n\nLa programmation d\xE9clarative s'attache
    \xE0 d\xE9crire les r\xE9sultats attendus du programme sans pour autant expliciter
    l'encha\xEEnement des \xE9tapes de calcul \xE9l\xE9mentaires qui produisent ces
    r\xE9sultats, au contraire de la programmation imp\xE9rative classique. Avons-nous
    encore besoin de structures de contr\xF4le dans les programmes d\xE9claratifs
    ? Le troisi\xE8me cours a tent\xE9 de r\xE9pondre \xE0 cette question en prenant
    l'exemple de trois paradigmes de programmation d\xE9clarative : la programmation
    r\xE9active synchrone (Lustre), la programmation purement fonctionnelle (Haskell,
    Scheme pur), et la programmation logique (Prolog). Les s\xE9mantiques des programmes
    \xE9crits dans ces langages reposent sur des principes \xE9l\xE9gants mais qui
    ne suffisent pas pour garantir la terminaison et le co\xFBt (en temps, en espace)
    des ex\xE9cutions d'un programme ; d'o\xF9 l'importance, m\xEAme dans un langage
    d\xE9claratif, de donner aux programmeurs les moyens de contr\xF4ler la mani\xE8re
    dont leurs programmes sont \xE9valu\xE9s. Nous avons mentionn\xE9 trois de ces
    moyens : ajouter des op\xE9rations ad hoc comme la coupure en Prolog, sp\xE9cifier
    les strat\xE9gies d'\xE9valuation utilis\xE9es (comme l'appel par valeur en Scheme
    et l'appel par n\xE9cessit\xE9 en Haskell), ou encoder la strat\xE9gie d\xE9sir\xE9e
    dans le programme lui-m\xEAme (par exemple en ajoutant des suspensions dans un
    programme Scheme).\n\nProfesseur : Xavier Leroy\nChaire Sciences du logiciel\n\nRetrouvez
    les enregistrements audios et vid\xE9os du cycle et son texte de pr\xE9sentation
    :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-11T10:17:30+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: Inferring Locality in OCaml | OCaml Unboxed
  url: https://www.youtube.com/watch/jvQ7fj9LlVA
  thumbnail: https://i3.ytimg.com/vi/jvQ7fj9LlVA/hqdefault.jpg
  description: "This is the fourth video in a series about OCaml\u2019s locals. It
    covers how the compiler infers what variables can be marked as local_ and it gives
    a glimpse into some compiler output that you can use to see the inferred modes
    on variables. I also explain how the compiler infers conversions between locals
    and globals and introduce *mode-crossing*, showing how ints can be both local
    and global.\n\n\nView instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions"
  published: 2024-02-07T15:54:23+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: Inferring Locality in OCaml | OCaml Unboxed
  url: https://www.youtube.com/watch/jvQ7fj9LlVA?version=3
  thumbnail: https://i3.ytimg.com/vi/jvQ7fj9LlVA/hqdefault.jpg
  description: "This is the fourth video in a series about OCaml\u2019s locals. It
    covers how the compiler infers what variables can be marked as local_ and it gives
    a glimpse into some compiler output that you can use to see the inferred modes
    on variables. I also explain how the compiler infers conversions between locals
    and globals and introduce *mode-crossing*, showing how ints can be both local
    and global.\n\n\nView instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions"
  published: 2024-02-07T15:54:23+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (2) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/T_w3OlZ5ASc
  thumbnail: https://i1.ytimg.com/vi/T_w3OlZ5ASc/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 1er f\xE9vrier 2024 : Structures de contr\xF4le
    avanc\xE9es : des subroutines aux coroutines et au parall\xE9lisme\n\nProfesseur
    : Xavier Leroy\nChaire Sciences du logiciel\n\nRetrouvez les enregistrements audios
    et vid\xE9os du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-02T09:18:32+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (2) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/T_w3OlZ5ASc?version=3
  thumbnail: https://i1.ytimg.com/vi/T_w3OlZ5ASc/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 1er f\xE9vrier 2024 : Structures de contr\xF4le
    avanc\xE9es : des subroutines aux coroutines et au parall\xE9lisme\n\nProfesseur
    : Xavier Leroy\nChaire Sciences du logiciel\n\nRetrouvez les enregistrements audios
    et vid\xE9os du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-02-02T09:18:32+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: Understanding OCaml Locals as a Mode (with Sub-Moding) | OCaml Unboxed
  url: https://www.youtube.com/watch/UqBk5DgqxRg
  thumbnail: https://i2.ytimg.com/vi/UqBk5DgqxRg/hqdefault.jpg
  description: 'This is the third installment in the video series explaining OCaml''s
    locals.

    In this video, I explain how locality is a *mode* and how sub-moding works. (It''s
    kinda like sub-typing.)


    To get the compiler I''m using here, see the instructions at https://github.com/janestreet/opam-repository/tree/with-extensions'
  published: 2024-01-31T13:00:27+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: Understanding OCaml Locals as a Mode (with Sub-Moding) | OCaml Unboxed
  url: https://www.youtube.com/watch/UqBk5DgqxRg?version=3
  thumbnail: https://i2.ytimg.com/vi/UqBk5DgqxRg/hqdefault.jpg
  description: 'This is the third installment in the video series explaining OCaml''s
    locals.

    In this video, I explain how locality is a *mode* and how sub-moding works. (It''s
    kinda like sub-typing.)


    To get the compiler I''m using here, see the instructions at https://github.com/janestreet/opam-repository/tree/with-extensions'
  published: 2024-01-31T13:00:27+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (1) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/ck9DjekcK4M
  thumbnail: https://i4.ytimg.com/vi/ck9DjekcK4M/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 25 janvier 2024 : Naissance des structures
    de contr\xF4le : du \xAB goto \xBB \xE0 la programmation structur\xE9e\n\nProfesseur
    : Xavier Leroy\nChaire Sciences du logiciel\n\nUn programme informatique d\xE9crit
    non seulement les calculs \xE9l\xE9mentaires \xE0 effectuer sur les donn\xE9es
    d'entr\xE9e, mais aussi dans quel ordre et sous quelles conditions effectuer ces
    calculs. Pour exprimer cet encha\xEEnement des calculs, les langages de programmation
    fournissent des m\xE9canismes appel\xE9s structures de contr\xF4le. Depuis les
    branchements \xAB goto \xBB des premiers langages de programmation, de nombreuses
    structures de contr\xF4le ont \xE9t\xE9 mises en \u0153uvre : boucles, proc\xE9dures
    et fonctions, exceptions, it\xE9rateurs, coroutines, exceptions\u2026 Apr\xE8s
    des rappels sur ces structures classiques et sur leur contexte historique d'apparition,
    le cours d\xE9veloppera une approche plus moderne du contr\xF4le vu comme un objet
    manipulable par le programme, permettant ainsi au programmeur de d\xE9finir ses
    propres structures de contr\xF4les. Initi\xE9e au si\xE8cle dernier par les travaux
    sur les continuations et leurs op\xE9rateurs de contr\xF4le, cette approche est
    en plein renouvellement avec la th\xE9orie des effets alg\xE9briques et sa d\xE9clinaison
    sous forme d'effets et de gestionnaires d'effets d\xE9finis par le programmeur
    dans des langages comme OCaml 5.\n\nRetrouvez les enregistrements audios et vid\xE9os
    du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-01-30T09:03:57+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: "Structures de contr\xF4le : de \xAB goto \xBB aux effets alg\xE9briques
    (1) - Xavier Leroy (2023-2024)"
  url: https://www.youtube.com/watch/ck9DjekcK4M?version=3
  thumbnail: https://i4.ytimg.com/vi/ck9DjekcK4M/hqdefault.jpg
  description: "Enseignement 2023-2024 : Structures de contr\xF4le : de \xAB goto
    \xBB aux effets alg\xE9briques\nCours du 25 janvier 2024 : Naissance des structures
    de contr\xF4le : du \xAB goto \xBB \xE0 la programmation structur\xE9e\n\nProfesseur
    : Xavier Leroy\nChaire Sciences du logiciel\n\nUn programme informatique d\xE9crit
    non seulement les calculs \xE9l\xE9mentaires \xE0 effectuer sur les donn\xE9es
    d'entr\xE9e, mais aussi dans quel ordre et sous quelles conditions effectuer ces
    calculs. Pour exprimer cet encha\xEEnement des calculs, les langages de programmation
    fournissent des m\xE9canismes appel\xE9s structures de contr\xF4le. Depuis les
    branchements \xAB goto \xBB des premiers langages de programmation, de nombreuses
    structures de contr\xF4le ont \xE9t\xE9 mises en \u0153uvre : boucles, proc\xE9dures
    et fonctions, exceptions, it\xE9rateurs, coroutines, exceptions\u2026 Apr\xE8s
    des rappels sur ces structures classiques et sur leur contexte historique d'apparition,
    le cours d\xE9veloppera une approche plus moderne du contr\xF4le vu comme un objet
    manipulable par le programme, permettant ainsi au programmeur de d\xE9finir ses
    propres structures de contr\xF4les. Initi\xE9e au si\xE8cle dernier par les travaux
    sur les continuations et leurs op\xE9rateurs de contr\xF4le, cette approche est
    en plein renouvellement avec la th\xE9orie des effets alg\xE9briques et sa d\xE9clinaison
    sous forme d'effets et de gestionnaires d'effets d\xE9finis par le programmeur
    dans des langages comme OCaml 5.\n\nRetrouvez les enregistrements audios et vid\xE9os
    du cycle et son texte de pr\xE9sentation :\nhttps://www.college-de-france.fr/fr/agenda/cours/structures-de-controle-de-goto-aux-effets-algebriques\n\nRetrouvez
    tous les enseignements du Pr Xavier Leroy :\nhttps://www.college-de-france.fr/chaire/xavier-leroy-sciences-du-logiciel-chaire-statutaire\nhttps://www.youtube.com/playlist?list=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im\n\nLe
    Coll\xE8ge de France est une institution de recherche fondamentale dans tous les
    domaines de la connaissance et un lieu de diffusion du \xAB savoir en train de
    se faire \xBB ouvert \xE0 tous.\nLes cours, s\xE9minaires, colloques sont enregistr\xE9s
    puis mis \xE0 disposition du public sur le site internet du Coll\xE8ge de France.\n\nD\xE9couvrez
    toutes les ressources du Coll\xE8ge de France : \nhttps://www.college-de-france.fr\n\nSuivez-nous
    sur :\nFacebook : https://www.facebook.com/College.de.France\nInstagram : https://www.instagram.com/collegedefrance\nX
    (ex-Twitter) : https://twitter.com/cdf1530\nLinkedIn : https://fr.linkedin.com/company/coll\xE8gedefrance"
  published: 2024-01-30T09:03:57+00:00
  author_name: "Math\xE9matiques et informatique - Coll\xE8ge de France"
  author_uri: https://www.youtube.com/channel/UCk58LsWC9j892FUMBwN5AsQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLtimy8tnozICbD45yhB7Ha_zIBJTIK3im
  source_title: "Coll\xE8ge de France - Sciences du logiciel"
- title: Annotating OCaml Variables and Returns with local_ | OCaml Unboxed
  url: https://www.youtube.com/watch/bTjJQT-SzgQ
  thumbnail: https://i3.ytimg.com/vi/bTjJQT-SzgQ/hqdefault.jpg
  description: 'This is the second installment in the video series explaining OCaml''s
    locals.

    In this video, I explain how we can annotate variables and return types with local_.



    Code for this video: https://github.com/goldfirere/janestreet-videos/tree/main/locals/02-local-variables-and-returns



    View instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions


    Playlist for videos in this series: https://www.youtube.com/playlist?list=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ'
  published: 2024-01-23T10:38:12+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: Annotating OCaml Variables and Returns with local_ | OCaml Unboxed
  url: https://www.youtube.com/watch/bTjJQT-SzgQ?version=3
  thumbnail: https://i3.ytimg.com/vi/bTjJQT-SzgQ/hqdefault.jpg
  description: 'This is the second installment in the video series explaining OCaml''s
    locals.

    In this video, I explain how we can annotate variables and return types with local_.



    Code for this video: https://github.com/goldfirere/janestreet-videos/tree/main/locals/02-local-variables-and-returns



    View instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions


    Playlist for videos in this series: https://www.youtube.com/playlist?list=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ'
  published: 2024-01-23T10:38:12+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: Introducing the OCaml Local Mode | OCaml Unboxed
  url: https://www.youtube.com/watch/PgUsmO0YyQc
  thumbnail: https://i1.ytimg.com/vi/PgUsmO0YyQc/hqdefault.jpg
  description: 'This video introduces how to make and use local parameters in OCaml.
    As demonstrated in the video, a local parameter to a function is not allowed to
    be stored or returned. Using local parameters can allow us to allocate less garbage-collected
    memory, as later videos will demonstrate.


    View instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions'
  published: 2024-01-05T16:49:17+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: Introducing the OCaml Local Mode | OCaml Unboxed
  url: https://www.youtube.com/watch/PgUsmO0YyQc?version=3
  thumbnail: https://i1.ytimg.com/vi/PgUsmO0YyQc/hqdefault.jpg
  description: 'This video introduces how to make and use local parameters in OCaml.
    As demonstrated in the video, a local parameter to a function is not allowed to
    be stored or returned. Using local parameters can allow us to allocate less garbage-collected
    memory, as later videos will demonstrate.


    View instructions to get the compiler I use in this video: https://github.com/janestreet/opam-repository/tree/with-extensions'
  published: 2024-01-05T16:49:17+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJrgFrWRKn0-1EI3gVZLQJtJ
  source_title: Jane Street - OCaml Unboxed
- title: '[OCaML''23] Modern DSL compiler architecture in OCaml our experience with
    Catala'
  url: https://www.youtube.com/watch/pO8Z4lcY0ys
  thumbnail: https://i1.ytimg.com/vi/pO8Z4lcY0ys/hqdefault.jpg
  description: "[OCaML'23] Modern DSL compiler architecture in OCaml our experience
    with Catala\n\nLouis Gesbert, Denis Merigoux\n\nIn this presentation, we intend
    to show a state-of-the-art DSL implementation in OCaml, with concrete examples
    and experience reports. \nIn particular, we found that some advanced practices,
    while accepted among the hardcore OCaml developers (e.g. use of row type variables
    through object types), lacked visibility and documentation: some of them deserve
    to be better known. \nOur experience is based on the Catala compiler, a DSL for
    the implementation of algorithms defined in law."
  published: 2023-12-01T14:23:18+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Modern DSL compiler architecture in OCaml our experience with
    Catala'
  url: https://www.youtube.com/watch/pO8Z4lcY0ys?version=3
  thumbnail: https://i1.ytimg.com/vi/pO8Z4lcY0ys/hqdefault.jpg
  description: "[OCaML'23] Modern DSL compiler architecture in OCaml our experience
    with Catala\n\nLouis Gesbert, Denis Merigoux\n\nIn this presentation, we intend
    to show a state-of-the-art DSL implementation in OCaml, with concrete examples
    and experience reports. \nIn particular, we found that some advanced practices,
    while accepted among the hardcore OCaml developers (e.g. use of row type variables
    through object types), lacked visibility and documentation: some of them deserve
    to be better known. \nOur experience is based on the Catala compiler, a DSL for
    the implementation of algorithms defined in law."
  published: 2023-12-01T14:23:18+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Runtime Detection of Data Races in OCaml with ThreadSanitizer'
  url: https://www.youtube.com/watch/zr9S0Fr_Chc
  thumbnail: https://i3.ytimg.com/vi/zr9S0Fr_Chc/hqdefault.jpg
  description: '[OCaML''23] Runtime Detection of Data Races in OCaml with ThreadSanitizer


    Olivier Nicole, Fabrice Buoro


    The possibility to write truly parallel OCaml code brings forth new possibilities
    of bugs. Among those, data races (concurrent accesses to the same data) are hard
    to detect and dangerous, as they are non-deterministic, possibly silent, and can
    lead to highly unexpected results. ThreadSanitizer (TSan) is an open-source library
    and program instrumentation pass to reliably detect data races at runtime. TSan
    has been instrumental in finding thousands of data races across many programming
    languages. We will describe the core principles of data race detection in TSan,
    explain why it was challenging to apply it to OCaml, and the adaptations needed
    to the runtime system. We plan to demo how you can already use it in your own
    code, and explain the limitations to be aware of.'
  published: 2023-12-01T14:23:18+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Runtime Detection of Data Races in OCaml with ThreadSanitizer'
  url: https://www.youtube.com/watch/zr9S0Fr_Chc?version=3
  thumbnail: https://i3.ytimg.com/vi/zr9S0Fr_Chc/hqdefault.jpg
  description: '[OCaML''23] Runtime Detection of Data Races in OCaml with ThreadSanitizer


    Olivier Nicole, Fabrice Buoro


    The possibility to write truly parallel OCaml code brings forth new possibilities
    of bugs. Among those, data races (concurrent accesses to the same data) are hard
    to detect and dangerous, as they are non-deterministic, possibly silent, and can
    lead to highly unexpected results. ThreadSanitizer (TSan) is an open-source library
    and program instrumentation pass to reliably detect data races at runtime. TSan
    has been instrumental in finding thousands of data races across many programming
    languages. We will describe the core principles of data race detection in TSan,
    explain why it was challenging to apply it to OCaml, and the adaptations needed
    to the runtime system. We plan to demo how you can already use it in your own
    code, and explain the limitations to be aware of.'
  published: 2023-12-01T14:23:18+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Buck2 for OCaml Users & Developers'
  url: https://www.youtube.com/watch/l4X4BxEEe-w
  thumbnail: https://i1.ytimg.com/vi/l4X4BxEEe-w/hqdefault.jpg
  description: "[OCaML'23] Buck2 for OCaml Users & Developers\n\nShayne Fletcher,
    Neil Mitchell\n\nBuck2 is an open-source large scale build system used by thousands
    of developers at Meta every day. Buck2 can be used to build OCaml with some useful
    advantages over alternatives (e.g. Dune or Bazel). In this talk we\u2019ll discuss
    what those advantages are, why they arise, and how to use Buck2 for your OCaml
    development."
  published: 2023-12-01T14:23:17+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Buck2 for OCaml Users & Developers'
  url: https://www.youtube.com/watch/l4X4BxEEe-w?version=3
  thumbnail: https://i1.ytimg.com/vi/l4X4BxEEe-w/hqdefault.jpg
  description: "[OCaML'23] Buck2 for OCaml Users & Developers\n\nShayne Fletcher,
    Neil Mitchell\n\nBuck2 is an open-source large scale build system used by thousands
    of developers at Meta every day. Buck2 can be used to build OCaml with some useful
    advantages over alternatives (e.g. Dune or Bazel). In this talk we\u2019ll discuss
    what those advantages are, why they arise, and how to use Buck2 for your OCaml
    development."
  published: 2023-12-01T14:23:17+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] MetaOCaml Theory and Implementation'
  url: https://www.youtube.com/watch/1fn1AEHeu2I
  thumbnail: https://i2.ytimg.com/vi/1fn1AEHeu2I/hqdefault.jpg
  description: '[OCaML''23] MetaOCaml Theory and Implementation


    Oleg Kiselyov


    Quasi-quotation (or, code templates) has long been used as a convenient tool for
    code generation, commonly implemented as a pre-processing/translation into code-generation
    combinators. The original MetaOCaml was also based on such translation, done post
    type checking. BER MetaOCaml employs a significantly different, efficient (especially
    in version N114) translation integrated with type-checking, in the least intrusive
    way. This paper presents the integrated efficient translation for the first time.'
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] MetaOCaml Theory and Implementation'
  url: https://www.youtube.com/watch/1fn1AEHeu2I?version=3
  thumbnail: https://i2.ytimg.com/vi/1fn1AEHeu2I/hqdefault.jpg
  description: '[OCaML''23] MetaOCaml Theory and Implementation


    Oleg Kiselyov


    Quasi-quotation (or, code templates) has long been used as a convenient tool for
    code generation, commonly implemented as a pre-processing/translation into code-generation
    combinators. The original MetaOCaml was also based on such translation, done post
    type checking. BER MetaOCaml employs a significantly different, efficient (especially
    in version N114) translation integrated with type-checking, in the least intrusive
    way. This paper presents the integrated efficient translation for the first time.'
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Owi: an interpreter and a toolkit for WebAssembly written in
    OCaml'
  url: https://www.youtube.com/watch/IM76cMP3Eqo
  thumbnail: https://i2.ytimg.com/vi/IM76cMP3Eqo/hqdefault.jpg
  description: "[OCaML'23] Owi: an interpreter and a toolkit for WebAssembly written
    in OCaml\n\nL\xE9o Andr\xE8s, Pierre Chambart, Eric Patrizio, Dario Pinto\n\nThis
    presentation introduces Owi, an OCaml-based interpreter and toolkit for WebAssembly
    (Wasm). Owi aims to provide a fast and easily maintainable solution for Wasm code
    execution. Unlike competing interpreters, Owi focuses on facilitating experimentation,
    research, and symbolic manipulations of Wasm. We describe the different passes
    and intermediate representations of Owi. Additionally, we discuss the linker,
    the interpreter and its support for various Wasm-specific extensions. Owi\u2019s
    API leverages Generalized Algebraic Data Types (GADTs) for improved error detection
    at link-time. We also describe the testing methods used, including a Crowbar-based
    fuzzer. Future work includes incorporating missing Wasm extensions, implementing
    advanced optimization passes, and potentially porting the WASP execution engine
    to perform concolic execution."
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Owi: an interpreter and a toolkit for WebAssembly written in
    OCaml'
  url: https://www.youtube.com/watch/IM76cMP3Eqo?version=3
  thumbnail: https://i2.ytimg.com/vi/IM76cMP3Eqo/hqdefault.jpg
  description: "[OCaML'23] Owi: an interpreter and a toolkit for WebAssembly written
    in OCaml\n\nL\xE9o Andr\xE8s, Pierre Chambart, Eric Patrizio, Dario Pinto\n\nThis
    presentation introduces Owi, an OCaml-based interpreter and toolkit for WebAssembly
    (Wasm). Owi aims to provide a fast and easily maintainable solution for Wasm code
    execution. Unlike competing interpreters, Owi focuses on facilitating experimentation,
    research, and symbolic manipulations of Wasm. We describe the different passes
    and intermediate representations of Owi. Additionally, we discuss the linker,
    the interpreter and its support for various Wasm-specific extensions. Owi\u2019s
    API leverages Generalized Algebraic Data Types (GADTs) for improved error detection
    at link-time. We also describe the testing methods used, including a Crowbar-based
    fuzzer. Future work includes incorporating missing Wasm extensions, implementing
    advanced optimization passes, and potentially porting the WASP execution engine
    to perform concolic execution."
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Building a lock-free STM for OCaml'
  url: https://www.youtube.com/watch/Mt8wPCHU1ZU
  thumbnail: https://i2.ytimg.com/vi/Mt8wPCHU1ZU/hqdefault.jpg
  description: '[OCaML''23] Building a lock-free STM for OCaml


    Vesa Karvonen, Bartosz Modelski, Carine Morel, Thomas Leonard, KC Sivaramakrishnan,
    YSS Narasimha Naidu, Sudha Parimala


    The kcas library was originally developed to provide a primitive atomic lock-free
    multi-word compare-and-set operation. This talk introduces kcas and discusses
    the recent development of kcas turning it into a proper lock-free software transactional
    memory implementation for OCaml that provides composable transactions, scheduler
    friendly modular blocking, and comes with a companion library of composable lock-free
    data structures.'
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Building a lock-free STM for OCaml'
  url: https://www.youtube.com/watch/Mt8wPCHU1ZU?version=3
  thumbnail: https://i2.ytimg.com/vi/Mt8wPCHU1ZU/hqdefault.jpg
  description: '[OCaML''23] Building a lock-free STM for OCaml


    Vesa Karvonen, Bartosz Modelski, Carine Morel, Thomas Leonard, KC Sivaramakrishnan,
    YSS Narasimha Naidu, Sudha Parimala


    The kcas library was originally developed to provide a primitive atomic lock-free
    multi-word compare-and-set operation. This talk introduces kcas and discusses
    the recent development of kcas turning it into a proper lock-free software transactional
    memory implementation for OCaml that provides composable transactions, scheduler
    friendly modular blocking, and comes with a companion library of composable lock-free
    data structures.'
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Targeted Static Analysis for OCaml C Stubs: Eliminating gremlins
    from the code'
  url: https://www.youtube.com/watch/Of3dxdY3Z9M
  thumbnail: https://i4.ytimg.com/vi/Of3dxdY3Z9M/hqdefault.jpg
  description: "[OCaML'23] Targeted Static Analysis for OCaml C Stubs: Eliminating
    gremlins from the code\n\nEdwin T\xF6r\xF6k\n\nMigration to OCaml 5 requires updating
    a lot of C bindings due to the removal of naked pointer support. Writing OCaml
    user-defined primitives in C is a necessity, but is unsafe and error-prone. It
    does not benefit from either OCaml\u2019s or C\u2019s type checking, and existing
    C static analysers are not aware of the OCaml GC safety rules, and cannot infer
    them from existing macros alone. The alternative is automatically generating C
    stubs, which requires correctly managing value lifetimes. Having a static analyser
    for OCaml to C interfaces is useful outside the OCaml 5 porting effort too. \nAfter
    some motivating examples of real bugs in C bindings a static analyser is presented
    that finds these known classes of bugs. The tool works on the OCaml abstract parse
    and typed trees, and generates a header file and a caller model. Together with
    a simplified model of the OCaml runtime this is used as input to a static analysis
    framework, Goblint. An analysis is developed that tracks dereferences of OCaml
    values, and together with the existing framework reports incorrect dereferences.
    An example is shown how to extend the analysis to cover more safety properties.
    \nThe tools and runtime models are generic and could be reused with other static
    analysis tools."
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Targeted Static Analysis for OCaml C Stubs: Eliminating gremlins
    from the code'
  url: https://www.youtube.com/watch/Of3dxdY3Z9M?version=3
  thumbnail: https://i4.ytimg.com/vi/Of3dxdY3Z9M/hqdefault.jpg
  description: "[OCaML'23] Targeted Static Analysis for OCaml C Stubs: Eliminating
    gremlins from the code\n\nEdwin T\xF6r\xF6k\n\nMigration to OCaml 5 requires updating
    a lot of C bindings due to the removal of naked pointer support. Writing OCaml
    user-defined primitives in C is a necessity, but is unsafe and error-prone. It
    does not benefit from either OCaml\u2019s or C\u2019s type checking, and existing
    C static analysers are not aware of the OCaml GC safety rules, and cannot infer
    them from existing macros alone. The alternative is automatically generating C
    stubs, which requires correctly managing value lifetimes. Having a static analyser
    for OCaml to C interfaces is useful outside the OCaml 5 porting effort too. \nAfter
    some motivating examples of real bugs in C bindings a static analyser is presented
    that finds these known classes of bugs. The tool works on the OCaml abstract parse
    and typed trees, and generates a header file and a caller model. Together with
    a simplified model of the OCaml runtime this is used as input to a static analysis
    framework, Goblint. An analysis is developed that tracks dereferences of OCaml
    values, and together with the existing framework reports incorrect dereferences.
    An example is shown how to extend the analysis to cover more safety properties.
    \nThe tools and runtime models are generic and could be reused with other static
    analysis tools."
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Less Power for More Learning: Restricting OCaml Features for
    Effective Teaching'
  url: https://www.youtube.com/watch/Olt2mj_K2rk
  thumbnail: https://i4.ytimg.com/vi/Olt2mj_K2rk/hqdefault.jpg
  description: "[OCaML'23] Less Power for More Learning: Restricting OCaml Features
    for Effective Teaching\n\nMax Lang, Nico Petzendorfer\n\nWe present a framework
    for sandboxing and restricting features of the OCaml programming language to effectively
    automate the grading of programming exercises, scaling to hundreds of submissions.
    We describe how to disable language and library features that should not be used
    to solve a given exercise. We present an overview of an implementation of a mock
    IO system to allow testing of IO-related exercises in a controlled environment.
    Finally, we detail a number of security considerations to ensure submitted code
    remains sandboxed, allowing automatic grading to be trusted without manual verification.
    The source code of our implementation is publicly available [1]. \n[1] As a git
    repository at https://github.com/just-max/less-power."
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Less Power for More Learning: Restricting OCaml Features for
    Effective Teaching'
  url: https://www.youtube.com/watch/Olt2mj_K2rk?version=3
  thumbnail: https://i4.ytimg.com/vi/Olt2mj_K2rk/hqdefault.jpg
  description: "[OCaML'23] Less Power for More Learning: Restricting OCaml Features
    for Effective Teaching\n\nMax Lang, Nico Petzendorfer\n\nWe present a framework
    for sandboxing and restricting features of the OCaml programming language to effectively
    automate the grading of programming exercises, scaling to hundreds of submissions.
    We describe how to disable language and library features that should not be used
    to solve a given exercise. We present an overview of an implementation of a mock
    IO system to allow testing of IO-related exercises in a controlled environment.
    Finally, we detail a number of security considerations to ensure submitted code
    remains sandboxed, allowing automatic grading to be trusted without manual verification.
    The source code of our implementation is publicly available [1]. \n[1] As a git
    repository at https://github.com/just-max/less-power."
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Parallel Sequences in Multicore OCaml'
  url: https://www.youtube.com/watch/cMsYwkMOB9M
  thumbnail: https://i4.ytimg.com/vi/cMsYwkMOB9M/hqdefault.jpg
  description: '[OCaML''23] Parallel Sequences in Multicore OCaml


    Andrew Tao


    I present my implementation of a parallel sequences abstraction that utilizes
    the support for shared memory parallelism in the new OCaml 5.0.0 multicore runtime.
    This abstraction allows clients to create highly parallelizable programs without
    needing to write, or even understand, the low-level implementation details necessary
    to parallelize large tasks.'
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Parallel Sequences in Multicore OCaml'
  url: https://www.youtube.com/watch/cMsYwkMOB9M?version=3
  thumbnail: https://i4.ytimg.com/vi/cMsYwkMOB9M/hqdefault.jpg
  description: '[OCaML''23] Parallel Sequences in Multicore OCaml


    Andrew Tao


    I present my implementation of a parallel sequences abstraction that utilizes
    the support for shared memory parallelism in the new OCaml 5.0.0 multicore runtime.
    This abstraction allows clients to create highly parallelizable programs without
    needing to write, or even understand, the low-level implementation details necessary
    to parallelize large tasks.'
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Efficient OCaml compilation with Flambda 2'
  url: https://www.youtube.com/watch/eI5GBpT2Brs
  thumbnail: https://i2.ytimg.com/vi/eI5GBpT2Brs/hqdefault.jpg
  description: '[OCaML''23] Efficient OCaml compilation with Flambda 2


    Pierre Chambart, Vincent LAVIRON, Mark Shinwell


    Flambda 2 is an IR and optimisation pass for OCaml centred around inlining. We
    discuss the engineering constraints that shaped it and the overall structure that
    allows the compiler to be fast enough to handle very large industrial code bases.'
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] Efficient OCaml compilation with Flambda 2'
  url: https://www.youtube.com/watch/eI5GBpT2Brs?version=3
  thumbnail: https://i2.ytimg.com/vi/eI5GBpT2Brs/hqdefault.jpg
  description: '[OCaML''23] Efficient OCaml compilation with Flambda 2


    Pierre Chambart, Vincent LAVIRON, Mark Shinwell


    Flambda 2 is an IR and optimisation pass for OCaml centred around inlining. We
    discuss the engineering constraints that shaped it and the overall structure that
    allows the compiler to be fast enough to handle very large industrial code bases.'
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] State of the OCaml Platform 2023'
  url: https://www.youtube.com/watch/i4ZQ2EGI8sY
  thumbnail: https://i2.ytimg.com/vi/i4ZQ2EGI8sY/hqdefault.jpg
  description: "[OCaML'23] State of the OCaml Platform 2023\n\nThibaut Mattio, Anil
    Madhavapeddy, Thomas Gazagnaire, David Allsopp\n\nThis paper reflects on a decade
    of progress and developments within the OCaml Platform, from its inception in
    2013 with the release of opam 1.0, to today where it stands as a robust toolchain
    for OCaml developers. We review the last three years in detail, emphasizing the
    advancements and innovations that have shaped the OCaml development landscape
    and highlighting key milestones such as the migration to Dune as the primary build
    system, and the development of a Language Server Protocol (LSP) server for OCaml.
    \nWe also outline our plan for the coming years. The roadmap is informed by community
    feedback, discussions with Platform tool maintainers, and insights from industrial
    users of OCaml. The final version of this evolving roadmap, designed to shape
    the future of the OCaml developer experience, will be presented at the International
    Conference on Functional Programming (ICFP)."
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: '[OCaML''23] State of the OCaml Platform 2023'
  url: https://www.youtube.com/watch/i4ZQ2EGI8sY?version=3
  thumbnail: https://i2.ytimg.com/vi/i4ZQ2EGI8sY/hqdefault.jpg
  description: "[OCaML'23] State of the OCaml Platform 2023\n\nThibaut Mattio, Anil
    Madhavapeddy, Thomas Gazagnaire, David Allsopp\n\nThis paper reflects on a decade
    of progress and developments within the OCaml Platform, from its inception in
    2013 with the release of opam 1.0, to today where it stands as a robust toolchain
    for OCaml developers. We review the last three years in detail, emphasizing the
    advancements and innovations that have shaped the OCaml development landscape
    and highlighting key milestones such as the migration to Dune as the primary build
    system, and the development of a Language Server Protocol (LSP) server for OCaml.
    \nWe also outline our plan for the coming years. The roadmap is informed by community
    feedback, discussions with Platform tool maintainers, and insights from industrial
    users of OCaml. The final version of this evolving roadmap, designed to shape
    the future of the OCaml developer experience, will be presented at the International
    Conference on Functional Programming (ICFP)."
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: "[OCaML'23] Eio 1.0 \u2013 Effects-based IO for OCaml 5"
  url: https://www.youtube.com/watch/jr4LsCVQBj4
  thumbnail: https://i3.ytimg.com/vi/jr4LsCVQBj4/hqdefault.jpg
  description: "[OCaML'23] Eio 1.0 \u2013 Effects-based IO for OCaml 5\n\nThomas Leonard,
    Patrick Ferris, Christiano Haesbaert, Lucas Pluvinage, Vesa Karvonen, Sudha Parimala,
    KC Sivaramakrishnan, Vincent Balat, Anil Madhavapeddy\n\nEio provides an effects-based
    direct-style IO stack for OCaml 5. This talk introduces Eio\u2019s main features,
    such as use of effects, multi-core support and lock-free data-structures, support
    for modular programming, interoperability with other concurrency libraries such
    as Lwt, Async and Domainslib, and interactive monitoring support enabled by the
    custom runtime events in OCaml 5.1. We will report on our experiences porting
    existing applications to Eio."
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: "[OCaML'23] Eio 1.0 \u2013 Effects-based IO for OCaml 5"
  url: https://www.youtube.com/watch/jr4LsCVQBj4?version=3
  thumbnail: https://i3.ytimg.com/vi/jr4LsCVQBj4/hqdefault.jpg
  description: "[OCaML'23] Eio 1.0 \u2013 Effects-based IO for OCaml 5\n\nThomas Leonard,
    Patrick Ferris, Christiano Haesbaert, Lucas Pluvinage, Vesa Karvonen, Sudha Parimala,
    KC Sivaramakrishnan, Vincent Balat, Anil Madhavapeddy\n\nEio provides an effects-based
    direct-style IO stack for OCaml 5. This talk introduces Eio\u2019s main features,
    such as use of effects, multi-core support and lock-free data-structures, support
    for modular programming, interoperability with other concurrency libraries such
    as Lwt, Async and Domainslib, and interactive monitoring support enabled by the
    custom runtime events in OCaml 5.1. We will report on our experiences porting
    existing applications to Eio."
  published: 2023-12-01T14:23:16+00:00
  author_name: ACM SIGPLAN
  author_uri: https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLyrlk8Xaylp7Tq5-ZN6jkir-sYrhGi_0E
  source_title: OCAML Workshop at ICFP 2023
- title: "Talking with Louis Roche\u0301 about OCaml and Ahrefs"
  url: https://www.youtube.com/watch/o2u9irv1tnE
  thumbnail: https://i4.ytimg.com/vi/o2u9irv1tnE/hqdefault.jpg
  description: "Talking with Louis Roche\u0301 about OCaml and Ahrefs\n\nSupport the
    show at https://www.patreon.com/emelletv or don't miss it live by following us
    https://www.twitch.tv/emelletv"
  published: 2023-06-14T14:00:25+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: "Talking with Louis Roche\u0301 about OCaml and Ahrefs"
  url: https://www.youtube.com/watch/o2u9irv1tnE?version=3
  thumbnail: https://i4.ytimg.com/vi/o2u9irv1tnE/hqdefault.jpg
  description: "Talking with Louis Roche\u0301 about OCaml and Ahrefs\n\nSupport the
    show at https://www.patreon.com/emelletv or don't miss it live by following us
    https://www.twitch.tv/emelletv"
  published: 2023-06-14T14:00:25+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: Talking with Antonio Monteiro about OCaml and Melange
  url: https://www.youtube.com/watch/zKO-Y2_a-yk
  thumbnail: https://i3.ytimg.com/vi/zKO-Y2_a-yk/hqdefault.jpg
  description: 'Talking with Antonio Monteiro about OCaml and Melange



    Support the show at https://www.patreon.com/emelletv or don''t miss it live by
    following us https://www.twitch.tv/emelletv'
  published: 2023-06-14T13:59:18+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: Talking with Antonio Monteiro about OCaml and Melange
  url: https://www.youtube.com/watch/zKO-Y2_a-yk?version=3
  thumbnail: https://i3.ytimg.com/vi/zKO-Y2_a-yk/hqdefault.jpg
  description: 'Talking with Antonio Monteiro about OCaml and Melange



    Support the show at https://www.patreon.com/emelletv or don''t miss it live by
    following us https://www.twitch.tv/emelletv'
  published: 2023-06-14T13:59:18+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #18 with KC about OCaml, Multicore and runtimes'
  url: https://www.youtube.com/watch/eSLdBuaVSFM
  thumbnail: https://i2.ytimg.com/vi/eSLdBuaVSFM/hqdefault.jpg
  description: 'Talking with KC about Multicore, OCaml 5 and runtimes.


    Support the show at https://www.patreon.com/emelletv or don''t miss it live by
    following us https://www.twitch.tv/emelletv'
  published: 2023-03-30T18:23:30+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #18 with KC about OCaml, Multicore and runtimes'
  url: https://www.youtube.com/watch/eSLdBuaVSFM?version=3
  thumbnail: https://i2.ytimg.com/vi/eSLdBuaVSFM/hqdefault.jpg
  description: 'Talking with KC about Multicore, OCaml 5 and runtimes.


    Support the show at https://www.patreon.com/emelletv or don''t miss it live by
    following us https://www.twitch.tv/emelletv'
  published: 2023-03-30T18:23:30+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #17  with Gabriel Nordeborn (@zth) about ReScript, Graphql and
    Relay'
  url: https://www.youtube.com/watch/WNDxnpZSUD4
  thumbnail: https://i4.ytimg.com/vi/WNDxnpZSUD4/hqdefault.jpg
  description: 'Talking with  Gabriel Nordeborn about ReScript, Graphql and Relay


    Support the show at https://www.patreon.com/emelletv or don''t miss it live https://www.twitch.tv/emelletv'
  published: 2023-03-19T23:32:34+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #17  with Gabriel Nordeborn (@zth) about ReScript, Graphql and
    Relay'
  url: https://www.youtube.com/watch/WNDxnpZSUD4?version=3
  thumbnail: https://i4.ytimg.com/vi/WNDxnpZSUD4/hqdefault.jpg
  description: 'Talking with  Gabriel Nordeborn about ReScript, Graphql and Relay


    Support the show at https://www.patreon.com/emelletv or don''t miss it live https://www.twitch.tv/emelletv'
  published: 2023-03-19T23:32:34+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #16 with  Simon "c-cube" Cruanes about OCaml, Containers and Automated
    Theorem Proving'
  url: https://www.youtube.com/watch/9ZlGSghBbnk
  thumbnail: https://i2.ytimg.com/vi/9ZlGSghBbnk/hqdefault.jpg
  description: 'Talking with Simon Cruanes (c-cube) about Imandra, Automated Theorem
    Proving, dev tooling and more


    Support the show at https://www.patreon.com/emelletv'
  published: 2023-01-29T19:23:01+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #16 with  Simon "c-cube" Cruanes about OCaml, Containers and Automated
    Theorem Proving'
  url: https://www.youtube.com/watch/9ZlGSghBbnk?version=3
  thumbnail: https://i2.ytimg.com/vi/9ZlGSghBbnk/hqdefault.jpg
  description: 'Talking with Simon Cruanes (c-cube) about Imandra, Automated Theorem
    Proving, dev tooling and more


    Support the show at https://www.patreon.com/emelletv'
  published: 2023-01-29T19:23:01+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #15 with Rudi Grinberg about OCaml, Dune, Opium and dev tools'
  url: https://www.youtube.com/watch/tjqLBsLaFvM
  thumbnail: https://i1.ytimg.com/vi/tjqLBsLaFvM/hqdefault.jpg
  description: 'Talking with Rudi Grinberg about OCaml, Opium and Dune


    Support the show at https://www.patreon.com/emelletv'
  published: 2023-01-02T14:02:49+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #15 with Rudi Grinberg about OCaml, Dune, Opium and dev tools'
  url: https://www.youtube.com/watch/tjqLBsLaFvM?version=3
  thumbnail: https://i1.ytimg.com/vi/tjqLBsLaFvM/hqdefault.jpg
  description: 'Talking with Rudi Grinberg about OCaml, Opium and Dune


    Support the show at https://www.patreon.com/emelletv'
  published: 2023-01-02T14:02:49+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #14 with Thomas Gazagnaire talking about OCaml and Tarides'
  url: https://www.youtube.com/watch/cgYL5oJEJWY
  thumbnail: https://i4.ytimg.com/vi/cgYL5oJEJWY/hqdefault.jpg
  description: 'Support the show for more content about OCaml, Reason and ReScript  you
    can now do so at https://www.patreon.com/emelletv or by sending any tez amount
    to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv'
  published: 2022-08-06T19:04:39+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #14 with Thomas Gazagnaire talking about OCaml and Tarides'
  url: https://www.youtube.com/watch/cgYL5oJEJWY?version=3
  thumbnail: https://i4.ytimg.com/vi/cgYL5oJEJWY/hqdefault.jpg
  description: 'Support the show for more content about OCaml, Reason and ReScript  you
    can now do so at https://www.patreon.com/emelletv or by sending any tez amount
    to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv'
  published: 2022-08-06T19:04:39+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #13 with Camilo Azevedo about Learning, OCaml, Open Source and
    communities'
  url: https://www.youtube.com/watch/QZroVxQstRM
  thumbnail: https://i2.ytimg.com/vi/QZroVxQstRM/hqdefault.jpg
  description: 'If you''d like to support the show for more content about OCaml, Reason
    and ReScript  you can now do so at https://www.patreon.com/emelletv or by sending
    any tez amount to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv'
  published: 2022-05-27T16:07:09+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #13 with Camilo Azevedo about Learning, OCaml, Open Source and
    communities'
  url: https://www.youtube.com/watch/QZroVxQstRM?version=3
  thumbnail: https://i2.ytimg.com/vi/QZroVxQstRM/hqdefault.jpg
  description: 'If you''d like to support the show for more content about OCaml, Reason
    and ReScript  you can now do so at https://www.patreon.com/emelletv or by sending
    any tez amount to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv'
  published: 2022-05-27T16:07:09+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #12 with Hongbo Zhang about ReScript'
  url: https://www.youtube.com/watch/aqqc93BmNBs
  thumbnail: https://i2.ytimg.com/vi/aqqc93BmNBs/hqdefault.jpg
  description: 'Hongbo Zhang (@bobzhang1988), author of BuckleScript and core maintainer
    of ReScript


    Enjoying the video? Please, support the show for more content about OCaml, Reason
    and ReScript  you can now do so at https://www.patreon.com/emelletv or by sending
    any tez amount to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv -- Watch live at https://www.twitch.tv/emelletv'
  published: 2022-05-27T16:02:38+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #12 with Hongbo Zhang about ReScript'
  url: https://www.youtube.com/watch/aqqc93BmNBs?version=3
  thumbnail: https://i2.ytimg.com/vi/aqqc93BmNBs/hqdefault.jpg
  description: 'Hongbo Zhang (@bobzhang1988), author of BuckleScript and core maintainer
    of ReScript


    Enjoying the video? Please, support the show for more content about OCaml, Reason
    and ReScript  you can now do so at https://www.patreon.com/emelletv or by sending
    any tez amount to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv -- Watch live at https://www.twitch.tv/emelletv'
  published: 2022-05-27T16:02:38+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #11 with Anil Madhavapeddy about OCaml, Tezos and @TrustedCarbon'
  url: https://www.youtube.com/watch/zrD-JiqML50
  thumbnail: https://i3.ytimg.com/vi/zrD-JiqML50/hqdefault.jpg
  description: 'Anil Madhavapeddy (@avsm), the face of OCaml


    If you''d like to support the show for more content about OCaml, Reason and ReScript  you
    can now do so at https://www.patreon.com/emelletv or by sending any tez amount
    to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv'
  published: 2022-04-18T14:03:56+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #11 with Anil Madhavapeddy about OCaml, Tezos and @TrustedCarbon'
  url: https://www.youtube.com/watch/zrD-JiqML50?version=3
  thumbnail: https://i3.ytimg.com/vi/zrD-JiqML50/hqdefault.jpg
  description: 'Anil Madhavapeddy (@avsm), the face of OCaml


    If you''d like to support the show for more content about OCaml, Reason and ReScript  you
    can now do so at https://www.patreon.com/emelletv or by sending any tez amount
    to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv'
  published: 2022-04-18T14:03:56+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #10 with Calascibetta "Dinoosaure" Romain about OCaml, Mirage OS
    and new 4.0 release'
  url: https://www.youtube.com/watch/DDgJ8tABOWU
  thumbnail: https://i1.ytimg.com/vi/DDgJ8tABOWU/hqdefault.jpg
  description: 'Calascibetta Romain (@Dinoosaure) core maintainer at Mirage OS


    If you''d like to support the show for more content about OCaml, Reason and ReScript  you
    can now do so at https://www.patreon.com/emelletv or by sending any tez amount
    to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv -- Watch live at https://www.twitch.tv/emelletv'
  published: 2022-03-31T13:15:46+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #10 with Calascibetta "Dinoosaure" Romain about OCaml, Mirage OS
    and new 4.0 release'
  url: https://www.youtube.com/watch/DDgJ8tABOWU?version=3
  thumbnail: https://i1.ytimg.com/vi/DDgJ8tABOWU/hqdefault.jpg
  description: 'Calascibetta Romain (@Dinoosaure) core maintainer at Mirage OS


    If you''d like to support the show for more content about OCaml, Reason and ReScript  you
    can now do so at https://www.patreon.com/emelletv or by sending any tez amount
    to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv -- Watch live at https://www.twitch.tv/emelletv'
  published: 2022-03-31T13:15:46+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: Memory Management with Stephen Dolan
  url: https://www.youtube.com/watch/SetLtBH43_U
  thumbnail: https://i4.ytimg.com/vi/SetLtBH43_U/hqdefault.jpg
  description: "Stephen Dolan works on Jane Street\u2019s Tools and Compilers team
    where he focuses on the OCaml compiler. In this episode, Stephen and Ron take
    a trip down memory lane, discussing how to manage computer memory efficiently
    and safely. They consider trade-offs between reference counting and garbage collection,
    the surprising gains achieved by prefetching, and how new language features like
    local allocation and unboxed types could give OCaml users more control over their
    memory.\n\nSome links to topics that came up in the discussion:\n\nStephen\u2019s
    command-line JSON processor, jq: https://github.com/stedolan/jq\nStephen\u2019s
    Cambridge dissertation, \u201CAlgebraic Subtyping\u201D: https://www.cs.tufts.edu/~nr/cs257/archive/stephen-dolan/thesis.pdf\nand
    a protoype implementation of mlsub: https://github.com/stedolan/mlsub, a language
    based on those ideas.\nA post from Stephen on how to benchmark different memory
    allocators: https://blog.janestreet.com/memory-allocator-showdown/\nA Jane Street
    tech talk on \u201CUnboxed Types for OCaml\u201D: https://www.janestreet.com/tech-talks/unboxed-types-for-ocaml/
    \nAn RFC in the OCaml RFC repo: https://github.com/ocaml/RFCs/blob/881b220adc1f358ab15f7743d5cd764222ab7d30/rfcs/unboxed-types.md\nA
    paper from Stephen and KC Sivaramakrishnan (https://kcsrk.info/) called \u201CBounding
    Data Races in Space and Time\u201D, which is all about a new and better memory
    model for Multicore OCaml: https://kcsrk.info/papers/pldi18-memory.pdf\nAnother
    paper describing the design of OCaml\u2019s multicore GC: https://arxiv.org/pdf/2004.11663.pdf\nThe
    Rust RFC for Higher-ranked trait bounds: https://rust-lang.github.io/rfcs/0387-higher-ranked-trait-bounds.html\n\nYou
    can find the transcript for this episode and all past episodes at signalsandthreads.com."
  published: 2022-01-05T18:56:38+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Memory Management with Stephen Dolan
  url: https://www.youtube.com/watch/SetLtBH43_U?version=3
  thumbnail: https://i4.ytimg.com/vi/SetLtBH43_U/hqdefault.jpg
  description: "Stephen Dolan works on Jane Street\u2019s Tools and Compilers team
    where he focuses on the OCaml compiler. In this episode, Stephen and Ron take
    a trip down memory lane, discussing how to manage computer memory efficiently
    and safely. They consider trade-offs between reference counting and garbage collection,
    the surprising gains achieved by prefetching, and how new language features like
    local allocation and unboxed types could give OCaml users more control over their
    memory.\n\nSome links to topics that came up in the discussion:\n\nStephen\u2019s
    command-line JSON processor, jq: https://github.com/stedolan/jq\nStephen\u2019s
    Cambridge dissertation, \u201CAlgebraic Subtyping\u201D: https://www.cs.tufts.edu/~nr/cs257/archive/stephen-dolan/thesis.pdf\nand
    a protoype implementation of mlsub: https://github.com/stedolan/mlsub, a language
    based on those ideas.\nA post from Stephen on how to benchmark different memory
    allocators: https://blog.janestreet.com/memory-allocator-showdown/\nA Jane Street
    tech talk on \u201CUnboxed Types for OCaml\u201D: https://www.janestreet.com/tech-talks/unboxed-types-for-ocaml/
    \nAn RFC in the OCaml RFC repo: https://github.com/ocaml/RFCs/blob/881b220adc1f358ab15f7743d5cd764222ab7d30/rfcs/unboxed-types.md\nA
    paper from Stephen and KC Sivaramakrishnan (https://kcsrk.info/) called \u201CBounding
    Data Races in Space and Time\u201D, which is all about a new and better memory
    model for Multicore OCaml: https://kcsrk.info/papers/pldi18-memory.pdf\nAnother
    paper describing the design of OCaml\u2019s multicore GC: https://arxiv.org/pdf/2004.11663.pdf\nThe
    Rust RFC for Higher-ranked trait bounds: https://rust-lang.github.io/rfcs/0387-higher-ranked-trait-bounds.html\n\nYou
    can find the transcript for this episode and all past episodes at signalsandthreads.com."
  published: 2022-01-05T18:56:38+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: 'emelletv #9 with Sean Grove talking about GraphQL, OneGraph and ReasonML'
  url: https://www.youtube.com/watch/9-i_7Ldkc_8
  thumbnail: https://i2.ytimg.com/vi/9-i_7Ldkc_8/hqdefault.jpg
  description: 'Sean Grove Founder of OneGraph


    If you''d like to support the show for more content about OCaml, Reason and ReScript  you
    can now do so at https://www.patreon.com/emelletv or by sending any tez amount
    to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv'
  published: 2021-12-02T21:30:00+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #9 with Sean Grove talking about GraphQL, OneGraph and ReasonML'
  url: https://www.youtube.com/watch/9-i_7Ldkc_8?version=3
  thumbnail: https://i2.ytimg.com/vi/9-i_7Ldkc_8/hqdefault.jpg
  description: 'Sean Grove Founder of OneGraph


    If you''d like to support the show for more content about OCaml, Reason and ReScript  you
    can now do so at https://www.patreon.com/emelletv or by sending any tez amount
    to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv'
  published: 2021-12-02T21:30:00+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #8 with Gabriel "Drup" Radanne about OCaml, meta-programming and
    ML history'
  url: https://www.youtube.com/watch/VgbZT-NPrcA
  thumbnail: https://i3.ytimg.com/vi/VgbZT-NPrcA/hqdefault.jpg
  description: 'Gabriel "Drup" Radanne researcher at Inria in the CASH research team




    If you''d like to support the show for more content about OCaml, Reason and ReScript  you
    can now do so at https://www.patreon.com/emelletv or by sending any tez amount
    to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv'
  published: 2021-11-24T16:00:25+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #8 with Gabriel "Drup" Radanne about OCaml, meta-programming and
    ML history'
  url: https://www.youtube.com/watch/VgbZT-NPrcA?version=3
  thumbnail: https://i3.ytimg.com/vi/VgbZT-NPrcA/hqdefault.jpg
  description: 'Gabriel "Drup" Radanne researcher at Inria in the CASH research team




    If you''d like to support the show for more content about OCaml, Reason and ReScript  you
    can now do so at https://www.patreon.com/emelletv or by sending any tez amount
    to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)


    Watch live at https://www.twitch.tv/emelletv'
  published: 2021-11-24T16:00:25+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #7 with Oscar Spencer talking about Grain Lang, WASM, Programming
    Language Theory and ML'
  url: https://www.youtube.com/watch/UcqeMJbW3y0
  thumbnail: https://i2.ytimg.com/vi/UcqeMJbW3y0/hqdefault.jpg
  description: "Oscar Spencer (@oscar_spen) is the co-author of Grain Lang\n \n\nIf
    you'd like to support the show for more content about OCaml, Reason and ReScript
    \ you can now do so at https://www.patreon.com/emelletv or by sending any tez
    amount to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)\n\nWatch live at
    https://www.twitch.tv/emelletv"
  published: 2021-11-08T22:00:23+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: 'emelletv #7 with Oscar Spencer talking about Grain Lang, WASM, Programming
    Language Theory and ML'
  url: https://www.youtube.com/watch/UcqeMJbW3y0?version=3
  thumbnail: https://i2.ytimg.com/vi/UcqeMJbW3y0/hqdefault.jpg
  description: "Oscar Spencer (@oscar_spen) is the co-author of Grain Lang\n \n\nIf
    you'd like to support the show for more content about OCaml, Reason and ReScript
    \ you can now do so at https://www.patreon.com/emelletv or by sending any tez
    amount to emelletv.tez (tz1bQHQKT4BSoEreWKHuR3H5mme6fV3XCcvX)\n\nWatch live at
    https://www.twitch.tv/emelletv"
  published: 2021-11-08T22:00:23+00:00
  author_name: emelletv
  author_uri: https://www.youtube.com/channel/UCvVVfCa7-nzSuCdMKXnNJNQ
  source_link: https://www.youtube.com/feeds/videos.xml?channel_id=UCvVVfCa7-nzSuCdMKXnNJNQ
  source_title: Emelle TV
- title: What is an Operating System? with Anil Madhavapeddy
  url: https://www.youtube.com/watch/QQKD3ul0R0U
  thumbnail: https://i2.ytimg.com/vi/QQKD3ul0R0U/hqdefault.jpg
  description: "Anil Madhavapeddy is an academic, author, engineer, entrepreneur,
    and OCaml aficionado. In this episode, Anil and Ron consider the evolving role
    of operating systems, security on the internet, and the pending arrival (at last!)
    of OCaml 5.0. They also discuss using Raspberry Pis to fight climate change; the
    programming inspiration found in British pubs and on Moroccan beaches; and the
    time Anil went to a party, got drunk, and woke up with a job working on the Mars
    Polar Lander.\n\nSome links to topics that came up in the discussion:\n\nThe latest
    edition of Real World OCaml: https://dev.realworldocaml.org/\nThe MirageOS library
    operating system: https://mirage.io/\nDocker for Mac and Windows , which is based
    on MirageOS: https://www.docker.com/blog/docker-unikernels-open-source/\nCambridge
    University\u2019s OCaml Labs: https://ocamllabs.io/\nNASA\u2019s Mars Polar Lander\nThe
    Xen Project (https://xenproject.org/), which made extensive use of OCaml (https://ocaml.org/meetings/ocaml/2012/abstracts/oud2012-paper14.pdf)
    in their control stack.\nThe Multicore branch of OCaml: https://github.com/ocaml-multicore/ocaml-Multicoremulticore
    monthly updates: https://discuss.ocaml.org/tag/multicore-monthly\n\nYou can find
    the transcript for this episode and all past episodes at signalsandthreads.com."
  published: 2021-11-03T16:28:14+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: What is an Operating System? with Anil Madhavapeddy
  url: https://www.youtube.com/watch/QQKD3ul0R0U?version=3
  thumbnail: https://i2.ytimg.com/vi/QQKD3ul0R0U/hqdefault.jpg
  description: "Anil Madhavapeddy is an academic, author, engineer, entrepreneur,
    and OCaml aficionado. In this episode, Anil and Ron consider the evolving role
    of operating systems, security on the internet, and the pending arrival (at last!)
    of OCaml 5.0. They also discuss using Raspberry Pis to fight climate change; the
    programming inspiration found in British pubs and on Moroccan beaches; and the
    time Anil went to a party, got drunk, and woke up with a job working on the Mars
    Polar Lander.\n\nSome links to topics that came up in the discussion:\n\nThe latest
    edition of Real World OCaml: https://dev.realworldocaml.org/\nThe MirageOS library
    operating system: https://mirage.io/\nDocker for Mac and Windows , which is based
    on MirageOS: https://www.docker.com/blog/docker-unikernels-open-source/\nCambridge
    University\u2019s OCaml Labs: https://ocamllabs.io/\nNASA\u2019s Mars Polar Lander\nThe
    Xen Project (https://xenproject.org/), which made extensive use of OCaml (https://ocaml.org/meetings/ocaml/2012/abstracts/oud2012-paper14.pdf)
    in their control stack.\nThe Multicore branch of OCaml: https://github.com/ocaml-multicore/ocaml-Multicoremulticore
    monthly updates: https://discuss.ocaml.org/tag/multicore-monthly\n\nYou can find
    the transcript for this episode and all past episodes at signalsandthreads.com."
  published: 2021-11-03T16:28:14+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Building a UI Framework with Ty Overby
  url: https://www.youtube.com/watch/NT1_A1AfBL0
  thumbnail: https://i3.ytimg.com/vi/NT1_A1AfBL0/hqdefault.jpg
  description: "Ty Overby is a programmer in Jane Street\u2019s web platform group
    where he works on Bonsai, our OCaml library for building interactive browser-based
    UI. In this episode, Ty and Ron consider the functional approach to building user
    interfaces. They also discuss Ty\u2019s programming roots in Neopets, what development
    features they crave on the web, the unfairly maligned CSS, and why Excel is \u201Carguably
    the greatest programming language ever developed.\u201D\n\nSome links to topics
    that came up in the discussion:\n\nJane Street\u2019s Bonsai library: https://opensource.janestreet.com/bonsai/\nThe
    3D design system OpenSCAD: https://openscad.org/\nMatt Keeter\u2019s libfive design
    tools: https://libfive.com/\nTry .NET in-browser repl:  https://try.dot.net/\nJane
    Street\u2019s Incr_dom library: https://opensource.janestreet.com/incr_dom/\nThe
    Elm Architecture \u201Cpattern for architecting interactive programs\u201D: https://guide.elm-lang.org/architecture/\nReact
    JavaScript library: https://reactjs.org/\nThe Houdini proposal: https://houdini.glitch.me/\nSvelte
    UI toolkit: https://svelte.dev/\n\nYou can find the transcript for this episode
    and all past episodes at signalsandthreads.com."
  published: 2021-10-06T16:31:15+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Building a UI Framework with Ty Overby
  url: https://www.youtube.com/watch/NT1_A1AfBL0?version=3
  thumbnail: https://i3.ytimg.com/vi/NT1_A1AfBL0/hqdefault.jpg
  description: "Ty Overby is a programmer in Jane Street\u2019s web platform group
    where he works on Bonsai, our OCaml library for building interactive browser-based
    UI. In this episode, Ty and Ron consider the functional approach to building user
    interfaces. They also discuss Ty\u2019s programming roots in Neopets, what development
    features they crave on the web, the unfairly maligned CSS, and why Excel is \u201Carguably
    the greatest programming language ever developed.\u201D\n\nSome links to topics
    that came up in the discussion:\n\nJane Street\u2019s Bonsai library: https://opensource.janestreet.com/bonsai/\nThe
    3D design system OpenSCAD: https://openscad.org/\nMatt Keeter\u2019s libfive design
    tools: https://libfive.com/\nTry .NET in-browser repl:  https://try.dot.net/\nJane
    Street\u2019s Incr_dom library: https://opensource.janestreet.com/incr_dom/\nThe
    Elm Architecture \u201Cpattern for architecting interactive programs\u201D: https://guide.elm-lang.org/architecture/\nReact
    JavaScript library: https://reactjs.org/\nThe Houdini proposal: https://houdini.glitch.me/\nSvelte
    UI toolkit: https://svelte.dev/\n\nYou can find the transcript for this episode
    and all past episodes at signalsandthreads.com."
  published: 2021-10-06T16:31:15+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Writing, Technically with James Somers
  url: https://www.youtube.com/watch/Oh_iFh7Rofs
  thumbnail: https://i4.ytimg.com/vi/Oh_iFh7Rofs/hqdefault.jpg
  description: "James Somers is Jane Street\u2019s writer-in-residence, splitting
    his time between English and OCaml, and helping to push forward all sorts of efforts
    around knowledge-sharing at Jane Street. In this episode, James and Ron talk about
    the role of technical writing in an organization like Jane Street, and how engineering
    software relates to editing prose.\nSome links to topics that came up in the discussion:\n\nmdx,
    the modified Markdown format that supports executing OCaml code blocks: https://github.com/realworldocaml/mdx\nMore
    on the 4 types of technical writing that James references: https://documentation.divio.com/introduction/\nDonald
    Knuth\u2019s original book on Literate Programming: https://en.wikipedia.org/wiki/Literate_programming\nMore
    on John McPhee\u2019s use of KEDIT: https://www.newyorker.com/magazine/2013/01/14/structure\nPeter
    Seibel\u2019s Coders at Work: https://codersatwork.com/\nDavid Goodsell\u2019s
    The Machinery of Life: https://books.google.com/books/about/The_Machinery_of_Life.html?id=0nV-mIqPa5gC\nScott
    Huler\u2019s Defining the Wind: https://books.google.com/books?id=oqGUXPWbieMC\nSome
    of James\u2019s writing on our tech blog: https://blog.janestreet.com/author/jsomers/\n\nYou
    can find the transcript for this episode and all past episodes at signalsandthreads.com."
  published: 2021-09-01T17:05:39+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Writing, Technically with James Somers
  url: https://www.youtube.com/watch/Oh_iFh7Rofs?version=3
  thumbnail: https://i4.ytimg.com/vi/Oh_iFh7Rofs/hqdefault.jpg
  description: "James Somers is Jane Street\u2019s writer-in-residence, splitting
    his time between English and OCaml, and helping to push forward all sorts of efforts
    around knowledge-sharing at Jane Street. In this episode, James and Ron talk about
    the role of technical writing in an organization like Jane Street, and how engineering
    software relates to editing prose.\nSome links to topics that came up in the discussion:\n\nmdx,
    the modified Markdown format that supports executing OCaml code blocks: https://github.com/realworldocaml/mdx\nMore
    on the 4 types of technical writing that James references: https://documentation.divio.com/introduction/\nDonald
    Knuth\u2019s original book on Literate Programming: https://en.wikipedia.org/wiki/Literate_programming\nMore
    on John McPhee\u2019s use of KEDIT: https://www.newyorker.com/magazine/2013/01/14/structure\nPeter
    Seibel\u2019s Coders at Work: https://codersatwork.com/\nDavid Goodsell\u2019s
    The Machinery of Life: https://books.google.com/books/about/The_Machinery_of_Life.html?id=0nV-mIqPa5gC\nScott
    Huler\u2019s Defining the Wind: https://books.google.com/books?id=oqGUXPWbieMC\nSome
    of James\u2019s writing on our tech blog: https://blog.janestreet.com/author/jsomers/\n\nYou
    can find the transcript for this episode and all past episodes at signalsandthreads.com."
  published: 2021-09-01T17:05:39+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: More Signals & Threads coming soon!
  url: https://www.youtube.com/watch/KAg9DYqAThw?version=3
  thumbnail: https://i4.ytimg.com/vi/KAg9DYqAThw/hqdefault.jpg
  description: "Signals & Threads is back, and we have a fun season of topics lined
    up, including: Building better abstractions for design and user interfaces, the
    role of writing in a technical organization, the approach that different languages
    take to memory management\u2026and more. We hope you\u2019ll join us. The first
    episode drops September 1st."
  published: 2021-08-25T16:54:57+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Let Definitions | OCaml Programming | Chapter 2 Video 4
  url: https://www.youtube.com/watch/eRnG4gwOTlI
  thumbnail: https://i2.ytimg.com/vi/eRnG4gwOTlI/hqdefault.jpg
  description: 'Using `let` definitions to bind values to names.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-25T19:15:22+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Let Definitions | OCaml Programming | Chapter 2 Video 4
  url: https://www.youtube.com/watch/eRnG4gwOTlI?version=3
  thumbnail: https://i2.ytimg.com/vi/eRnG4gwOTlI/hqdefault.jpg
  description: 'Using `let` definitions to bind values to names.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-25T19:15:22+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Scope and the Toplevel | OCaml Programming | Chapter 2 Video 7
  url: https://www.youtube.com/watch/4SqMkUwakEA
  thumbnail: https://i1.ytimg.com/vi/4SqMkUwakEA/hqdefault.jpg
  description: 'What looks like mutability in the toplevel is not -- it''s really
    just a consequence of scope.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:22:12+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Scope and the Toplevel | OCaml Programming | Chapter 2 Video 7
  url: https://www.youtube.com/watch/4SqMkUwakEA?version=3
  thumbnail: https://i1.ytimg.com/vi/4SqMkUwakEA/hqdefault.jpg
  description: 'What looks like mutability in the toplevel is not -- it''s really
    just a consequence of scope.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:22:12+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Variable Expressions and Scope | OCaml Programming | Chapter 2 Video 6
  url: https://www.youtube.com/watch/_TpTC6eo34M
  thumbnail: https://i4.ytimg.com/vi/_TpTC6eo34M/hqdefault.jpg
  description: 'How `let` expressions create scope and shadowing.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:20:31+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Variable Expressions and Scope | OCaml Programming | Chapter 2 Video 6
  url: https://www.youtube.com/watch/_TpTC6eo34M?version=3
  thumbnail: https://i4.ytimg.com/vi/_TpTC6eo34M/hqdefault.jpg
  description: 'How `let` expressions create scope and shadowing.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:20:31+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Let Expressions | OCaml Programming | Chapter 2 Video 5
  url: https://www.youtube.com/watch/ug3L97FXC6A
  thumbnail: https://i2.ytimg.com/vi/ug3L97FXC6A/hqdefault.jpg
  description: '`let` expressions


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:19:19+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Let Expressions | OCaml Programming | Chapter 2 Video 5
  url: https://www.youtube.com/watch/ug3L97FXC6A?version=3
  thumbnail: https://i2.ytimg.com/vi/ug3L97FXC6A/hqdefault.jpg
  description: '`let` expressions


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:19:19+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: If Expressions | OCaml Programming | Chapter 2 Video 3
  url: https://www.youtube.com/watch/XJ6QPtlPD7s
  thumbnail: https://i1.ytimg.com/vi/XJ6QPtlPD7s/hqdefault.jpg
  description: '`if-then-else` expressions.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:10:32+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: If Expressions | OCaml Programming | Chapter 2 Video 3
  url: https://www.youtube.com/watch/XJ6QPtlPD7s?version=3
  thumbnail: https://i1.ytimg.com/vi/XJ6QPtlPD7s/hqdefault.jpg
  description: '`if-then-else` expressions.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:10:32+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Expressions | OCaml Programming | Chapter 2 Video 2
  url: https://www.youtube.com/watch/3fzrFY-2ZQ8
  thumbnail: https://i4.ytimg.com/vi/3fzrFY-2ZQ8/hqdefault.jpg
  description: 'Expressions and values; the OCaml toplevel, utop.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:07:37+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Expressions | OCaml Programming | Chapter 2 Video 2
  url: https://www.youtube.com/watch/3fzrFY-2ZQ8?version=3
  thumbnail: https://i4.ytimg.com/vi/3fzrFY-2ZQ8/hqdefault.jpg
  description: 'Expressions and values; the OCaml toplevel, utop.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:07:37+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Five Aspects of Learning a Programming Language | OCaml Programming | Chapter
    2 Video 1
  url: https://www.youtube.com/watch/A5IHFZtRfBs
  thumbnail: https://i2.ytimg.com/vi/A5IHFZtRfBs/hqdefault.jpg
  description: 'Syntax, semantics, idioms, libraries, tools.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:04:46+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Five Aspects of Learning a Programming Language | OCaml Programming | Chapter
    2 Video 1
  url: https://www.youtube.com/watch/A5IHFZtRfBs?version=3
  thumbnail: https://i2.ytimg.com/vi/A5IHFZtRfBs/hqdefault.jpg
  description: 'Syntax, semantics, idioms, libraries, tools.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-22T14:04:46+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Lambdas | OCaml Programming | Chapter 2 Video 9
  url: https://www.youtube.com/watch/zHHCD7MOjmw
  thumbnail: https://i3.ytimg.com/vi/zHHCD7MOjmw/hqdefault.jpg
  description: 'More about anonymous functions, aka lambdas.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-15T18:32:12+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Lambdas | OCaml Programming | Chapter 2 Video 9
  url: https://www.youtube.com/watch/zHHCD7MOjmw?version=3
  thumbnail: https://i3.ytimg.com/vi/zHHCD7MOjmw/hqdefault.jpg
  description: 'More about anonymous functions, aka lambdas.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-15T18:32:12+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Anonymous Functions | OCaml Programming | Chapter 2 Video 8
  url: https://www.youtube.com/watch/JwoIIrj0bcM
  thumbnail: https://i3.ytimg.com/vi/JwoIIrj0bcM/hqdefault.jpg
  description: 'Unnamed function values.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-15T18:28:12+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Anonymous Functions | OCaml Programming | Chapter 2 Video 8
  url: https://www.youtube.com/watch/JwoIIrj0bcM?version=3
  thumbnail: https://i3.ytimg.com/vi/JwoIIrj0bcM/hqdefault.jpg
  description: 'Unnamed function values.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-15T18:28:12+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: OCaml | OCaml Programming | Chapter 1 Video 5
  url: https://www.youtube.com/watch/T-DIW1dhYzo
  thumbnail: https://i1.ytimg.com/vi/T-DIW1dhYzo/hqdefault.jpg
  description: 'Reasons why we use OCaml.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-11T17:54:42+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: OCaml | OCaml Programming | Chapter 1 Video 5
  url: https://www.youtube.com/watch/T-DIW1dhYzo?version=3
  thumbnail: https://i1.ytimg.com/vi/T-DIW1dhYzo/hqdefault.jpg
  description: 'Reasons why we use OCaml.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-11T17:54:42+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Functional Programming - Why Part 2 | OCaml Programming | Chapter 1 Video
    4
  url: https://www.youtube.com/watch/eNLm5Xbgmd0
  thumbnail: https://i2.ytimg.com/vi/eNLm5Xbgmd0/hqdefault.jpg
  description: 'More reasons you should learn functional programming.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-11T17:53:34+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Functional Programming - Why Part 2 | OCaml Programming | Chapter 1 Video
    4
  url: https://www.youtube.com/watch/eNLm5Xbgmd0?version=3
  thumbnail: https://i2.ytimg.com/vi/eNLm5Xbgmd0/hqdefault.jpg
  description: 'More reasons you should learn functional programming.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-11T17:53:34+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Functional Programming - Why Part 1 | OCaml Programming | Chapter 1 Video
    3
  url: https://www.youtube.com/watch/SKr3ItChPSI
  thumbnail: https://i4.ytimg.com/vi/SKr3ItChPSI/hqdefault.jpg
  description: 'Several reasons why you should learn functional programming.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-11T17:49:45+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Functional Programming - Why Part 1 | OCaml Programming | Chapter 1 Video
    3
  url: https://www.youtube.com/watch/SKr3ItChPSI?version=3
  thumbnail: https://i4.ytimg.com/vi/SKr3ItChPSI/hqdefault.jpg
  description: 'Several reasons why you should learn functional programming.


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-11T17:49:45+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Functional Programming - What | OCaml Programming | Chapter 1 Video 2
  url: https://www.youtube.com/watch/JTEwC3HihFc
  thumbnail: https://i3.ytimg.com/vi/JTEwC3HihFc/hqdefault.jpg
  description: 'What is functional programming? How does it differ from imperative?


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-11T17:46:21+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Functional Programming - What | OCaml Programming | Chapter 1 Video 2
  url: https://www.youtube.com/watch/JTEwC3HihFc?version=3
  thumbnail: https://i3.ytimg.com/vi/JTEwC3HihFc/hqdefault.jpg
  description: 'What is functional programming? How does it differ from imperative?


    Textbook: https://cs3110.github.io/textbook'
  published: 2021-06-11T17:46:21+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Introduction | OCaml Programming | Chapter 1 Video 1
  url: https://www.youtube.com/watch/MUcka_SvhLw
  thumbnail: https://i2.ytimg.com/vi/MUcka_SvhLw/hqdefault.jpg
  description: 'Learn to program in OCaml!


    The textbook is "OCaml Programming: Correct + Efficient + Beautiful": https://cs3110.github.io/textbook

    The lecturer is Michael Clarkson: https://www.cs.cornell.edu/~clarkson/'
  published: 2021-06-11T14:42:56+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: Introduction | OCaml Programming | Chapter 1 Video 1
  url: https://www.youtube.com/watch/MUcka_SvhLw?version=3
  thumbnail: https://i2.ytimg.com/vi/MUcka_SvhLw/hqdefault.jpg
  description: 'Learn to program in OCaml!


    The textbook is "OCaml Programming: Correct + Efficient + Beautiful": https://cs3110.github.io/textbook

    The lecturer is Michael Clarkson: https://www.cs.cornell.edu/~clarkson/'
  published: 2021-06-11T14:42:56+00:00
  author_name: Michael Ryan Clarkson
  author_uri: https://www.youtube.com/channel/UCX3XfA9qjWjymue2I_hcW1A
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU
  source_title: 'OCaml Programming: Correct + Efficient + Beautiful'
- title: "An Inside Look at Jane Street\u2019s Tech Internship with Jeanne Van Briesen,
    Matt Else, and Grace Zhang"
  url: https://www.youtube.com/watch/V06-rpAllKg?version=3
  thumbnail: https://i3.ytimg.com/vi/V06-rpAllKg/hqdefault.jpg
  description: 'In this week''s episode, the season 1 finale, Ron speaks with Jeanne,
    Matt, and Grace, three former tech interns at Jane Street who have returned as
    full-timers. They talk about the experience of being an intern at Jane Street,
    the types of projects that interns work on, and how they''ve found the transition
    to full-time work.


    You can find the transcript for this episode along with links to things we discussed
    at signalsandthreads.com.'
  published: 2020-11-06T16:51:47+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Building a Functional Email Server with Dominick LoBraico
  url: https://www.youtube.com/watch/cM6mRLvFw54
  thumbnail: https://i4.ytimg.com/vi/cM6mRLvFw54/hqdefault.jpg
  description: "Despite a steady trickle of newcomers, email still reigns supreme
    as the chief communication mechanism for the Information Age. At Jane Street,
    it\u2019s just as critical as anywhere, but there\u2019s one difference: the system
    at the heart of our email infrastructure is homegrown. This week, Ron talks to
    Dominick LoBraico, an engineer working on Jane Street\u2019s technology infrastructure,
    about how and why we built Mailcore, an email server written and configured in
    OCaml. They delve into questions around how best to represent the configuration
    of a complex system, when you should build your own and when you shouldn\u2019t,
    and the benefits of bringing a code-focused approach to solving systems problems.
    \n\nYou can find the transcript for this podcast episode along with links to things
    we discussed at signalsandthreads.com."
  published: 2020-10-28T15:54:44+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Building a Functional Email Server with Dominick LoBraico
  url: https://www.youtube.com/watch/cM6mRLvFw54?version=3
  thumbnail: https://i4.ytimg.com/vi/cM6mRLvFw54/hqdefault.jpg
  description: "Despite a steady trickle of newcomers, email still reigns supreme
    as the chief communication mechanism for the Information Age. At Jane Street,
    it\u2019s just as critical as anywhere, but there\u2019s one difference: the system
    at the heart of our email infrastructure is homegrown. This week, Ron talks to
    Dominick LoBraico, an engineer working on Jane Street\u2019s technology infrastructure,
    about how and why we built Mailcore, an email server written and configured in
    OCaml. They delve into questions around how best to represent the configuration
    of a complex system, when you should build your own and when you shouldn\u2019t,
    and the benefits of bringing a code-focused approach to solving systems problems.
    \n\nYou can find the transcript for this podcast episode along with links to things
    we discussed at signalsandthreads.com."
  published: 2020-10-28T15:54:44+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Language Design with Leo White
  url: https://www.youtube.com/watch/t7eNBh-zrOQ
  thumbnail: https://i1.ytimg.com/vi/t7eNBh-zrOQ/hqdefault.jpg
  description: Equal parts science and art, programming language design is very much
    an unsolved problem. This week, Ron speaks with Leo White, from Jane Street's
    Tools & Compilers team, about cutting-edge language features, future work happening
    on OCaml, and Jane Street's relationship with the broader open-source community.
    The conversation covers everything from the paradox of language popularity, to
    advanced type system features like modular implicits and dependent types. Listen
    in, no programming languages PhD required! You can find the transcript for this
    podcast episode along with links to things we discussed at signalsandthreads.com.
  published: 2020-10-21T16:34:54+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Language Design with Leo White
  url: https://www.youtube.com/watch/t7eNBh-zrOQ?version=3
  thumbnail: https://i1.ytimg.com/vi/t7eNBh-zrOQ/hqdefault.jpg
  description: Equal parts science and art, programming language design is very much
    an unsolved problem. This week, Ron speaks with Leo White, from Jane Street's
    Tools & Compilers team, about cutting-edge language features, future work happening
    on OCaml, and Jane Street's relationship with the broader open-source community.
    The conversation covers everything from the paradox of language popularity, to
    advanced type system features like modular implicits and dependent types. Listen
    in, no programming languages PhD required! You can find the transcript for this
    podcast episode along with links to things we discussed at signalsandthreads.com.
  published: 2020-10-21T16:34:54+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Clock Synchronization with Chris Perl
  url: https://www.youtube.com/watch/p1CewOuvKmg?version=3
  thumbnail: https://i1.ytimg.com/vi/p1CewOuvKmg/hqdefault.jpg
  description: "Clock synchronization, keeping all of the clocks on your network set
    to the \u201Ccorrect\u201D time, sounds straightforward: our smartphones sure
    don\u2019t seem to have trouble with it. Next, keep them all accurate to within
    100 microseconds, and prove that you did -- now things start to get tricky. In
    this episode, Ron talks with Chris Perl, a systems engineer at Jane Street about
    the fundamental difficulty of solving this problem at scale and how we solved
    it.\n\nYou can find the transcript for this podcast episode along with links to
    things we discussed at signalsandthreads.com."
  published: 2020-10-14T16:29:51+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Python, OCaml, and Machine Learning with Laurent Mazare
  url: https://www.youtube.com/watch/d4SoT7rP28k
  thumbnail: https://i1.ytimg.com/vi/d4SoT7rP28k/hqdefault.jpg
  description: 'A conversation with Laurent Mazare about how your choice of programming
    language interacts with the kind of work you do, and in particular about the tradeoffs
    between Python and OCaml when doing machine learning and data analysis. Ron and
    Laurent discuss the tradeoffs between working in a text editor and a Jupyter Notebook,
    the importance of visualization and interactivity, how tools and practices vary
    between language ecosystems, and how language features like borrow-checking in
    Rust and ref-counting in Swift and Python can make machine learning easier.


    You can find the transcript for this podcast episode along with links to things
    we discussed at signalsandthreads.com.'
  published: 2020-10-07T15:45:03+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Python, OCaml, and Machine Learning with Laurent Mazare
  url: https://www.youtube.com/watch/d4SoT7rP28k?version=3
  thumbnail: https://i1.ytimg.com/vi/d4SoT7rP28k/hqdefault.jpg
  description: 'A conversation with Laurent Mazare about how your choice of programming
    language interacts with the kind of work you do, and in particular about the tradeoffs
    between Python and OCaml when doing machine learning and data analysis. Ron and
    Laurent discuss the tradeoffs between working in a text editor and a Jupyter Notebook,
    the importance of visualization and interactivity, how tools and practices vary
    between language ecosystems, and how language features like borrow-checking in
    Rust and ref-counting in Swift and Python can make machine learning easier.


    You can find the transcript for this podcast episode along with links to things
    we discussed at signalsandthreads.com.'
  published: 2020-10-07T15:45:03+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Compiler Optimization with Greta Yorsh
  url: https://www.youtube.com/watch/UZhjIYwwObE?version=3
  thumbnail: https://i2.ytimg.com/vi/UZhjIYwwObE/hqdefault.jpg
  description: "It\u2019s a software engineer\u2019s dream: A compiler that can take
    idiomatic high-level code and output maximally efficient instructions. Ron\u2019s
    guest this week is Greta Yorsh, who has worked on just that problem in a career
    spanning both industry and academia. Ron and Greta talk about some  of the tricks
    that compilers use to make our software faster, ranging from feedback-directed
    optimization and super-optimization to formal analysis. \n\nYou can find the transcript
    for this episode along with links to things we discussed at signalsandthreads.com."
  published: 2020-09-30T17:51:11+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Multicast and the Markets with Brian Nigito
  url: https://www.youtube.com/watch/triyiLwqWUI?version=3
  thumbnail: https://i1.ytimg.com/vi/triyiLwqWUI/hqdefault.jpg
  description: 'Electronic exchanges like Nasdaq need to handle a staggering number
    of transactions every second. To keep up, they rely on two deceptively simple-sounding
    concepts: single-threaded programs and multicast networking. In this episode,
    Ron speaks with Brian Nigito, a 20-year industry veteran who helped build some
    of the earliest electronic exchanges, about the tradeoffs that led to the architecture
    we have today, and how modern exchanges use these straightforward building blocks
    to achieve blindingly fast performance at scale.


    You can find the transcript for this episode along with links to things we discussed
    at signalsandthreads.com.'
  published: 2020-09-23T19:37:42+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Build Systems with Andrey Mokhov
  url: https://www.youtube.com/watch/V9YA32uV3Ls?version=3
  thumbnail: https://i3.ytimg.com/vi/V9YA32uV3Ls/hqdefault.jpg
  description: "Most software engineers only think about their build system when it
    breaks; and yet, this often unloved piece of software forms the backbone of every
    serious project. This week, Ron has a conversation with Andrey Mokhov about build
    systems, from the venerable Make to Bazel and beyond. Andrey has a lot of experience
    in this field, including significant contributions to the replacement for the
    Glasgow Haskell Compiler\u2019s Make-based system and Build Systems \xE0 la carte,
    a paper that untangles the complex ecosystem of existing build systems. Ron and
    Andrey muse on questions like why every language community seems to have its own
    purpose-built system and, closer to home, where Andrey and the rest of the build
    systems team at Jane Street are focusing their efforts.\n\nYou can find the transcript
    for this episode along with links to related work at signalsandthreads.com."
  published: 2020-09-17T20:09:29+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Programmable Hardware with Andy Ray
  url: https://www.youtube.com/watch/GJX5VbKvh90
  thumbnail: https://i4.ytimg.com/vi/GJX5VbKvh90/hqdefault.jpg
  description: "The ever-widening availability of FPGAs has opened the door to solving
    a broad set of performance-critical problems in hardware. In this episode, Ron
    speaks with Andy Ray, who leads Jane Street\u2019s hardware design team. Andy
    has a long career prior to Jane Street shipping hardware designs for things like
    modems and video codecs. That work led him to create Hardcaml, a domain-specific
    language for expressing hardware designs. Ron and Andy talk about the current
    state-of-the-art in hardware tooling, the economics of FPGAs, and how the process
    of designing hardware can be improved by applying lessons from software engineering.\n\nHardcaml
    itself is open-source software available on Github, along with a collection of
    associated libraries and tools. Andy has also given a talk on Hardcaml called
    OCaml All The Way Down, and has a post on Jane Street's blog about some of the
    testing techniques used with Hardcaml.\n\nYou can find the transcript for this
    episode along with links to related work at signalsandthreads.com."
  published: 2020-09-17T20:04:22+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: Programmable Hardware with Andy Ray
  url: https://www.youtube.com/watch/GJX5VbKvh90?version=3
  thumbnail: https://i4.ytimg.com/vi/GJX5VbKvh90/hqdefault.jpg
  description: "The ever-widening availability of FPGAs has opened the door to solving
    a broad set of performance-critical problems in hardware. In this episode, Ron
    speaks with Andy Ray, who leads Jane Street\u2019s hardware design team. Andy
    has a long career prior to Jane Street shipping hardware designs for things like
    modems and video codecs. That work led him to create Hardcaml, a domain-specific
    language for expressing hardware designs. Ron and Andy talk about the current
    state-of-the-art in hardware tooling, the economics of FPGAs, and how the process
    of designing hardware can be improved by applying lessons from software engineering.\n\nHardcaml
    itself is open-source software available on Github, along with a collection of
    associated libraries and tools. Andy has also given a talk on Hardcaml called
    OCaml All The Way Down, and has a post on Jane Street's blog about some of the
    testing techniques used with Hardcaml.\n\nYou can find the transcript for this
    episode along with links to related work at signalsandthreads.com."
  published: 2020-09-17T20:04:22+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJouorRXDSfS2UoKV4BfKyQm
  source_title: Jane Street - Signal & Threads
- title: A Taste of GPU Compute
  url: https://www.youtube.com/watch/eqkAaplKBc4?version=3
  thumbnail: https://i2.ytimg.com/vi/eqkAaplKBc4/hqdefault.jpg
  description: "Presented by: Raph Levien\n\nThe GPU in a modern computer (desktop
    or mobile) has about an order of magnitude more raw general purpose computing
    throughput than the CPU, but is barely used except for games, machine learning,
    and cryptocurrency mining, largely because it\u2019s hard to program. Getting
    good performance entails massive parallelism (thousands of threads) and careful
    attention to an explicit memory hierarchy. While GPU compute programming may seem
    to many like a black art, techniques from functional programming, including immutable
    data structures and an emphasis on associative operations (monoids) adapt very
    well to this space. This talk will present techniques used in piet-metal, a new
    2D graphics rendering engine optimized for the modern GPU compute, and hopefully
    will serve as an invitation for the curious to explore this strange but powerful
    computing environment.\n\nRaph Levien is currently an independent researcher exploring
    2D graphics, font technology, and GUI, doing most of his work in Rust. Previously
    he was at Google for 11 years, including on the Android UI toolkit team, mostly
    working on fonts and text, and before that was the maintainer of Ghostscript.
    He has a PhD in Computer Science from UC Berkeley, on the topic of curve design
    tools."
  published: 2020-04-15T17:03:28+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: The Algorithm for Precision Medicine
  url: https://www.youtube.com/watch/Rt3XyeFHvt4?version=3
  thumbnail: https://i3.ytimg.com/vi/Rt3XyeFHvt4/hqdefault.jpg
  description: "Presented by: Matt Might\n\nPrecision medicine promises to deliver
    ultra-personalized care by casting medicine as an optimization problem: identifying
    the best possible treatment with respect to all available data.\n\nA slew of recent
    advances in biology, starting with the ability to sequence the human genome, have
    caused an explosion in the amount of data one can collect on a single patient
    and a similar explosion in the complexity of reasoning about this data in order
    to solve this optimization problem. Computational support for the practicing physician
    is no longer an option.\n\nThis talk covers precision medicine from the ground
    up for computer scientists \u2014 through a personal journey from programming
    languages research into academic medicine.  It will demonstrate progress to date,
    including the now-routine use of relational programming in miniKanren to identify
    personalized treatments for patients with some of the rarest and most challenging
    diseases in the world."
  published: 2020-02-18T17:22:52+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: 'State of the Shell: PowerShell7'
  url: https://www.youtube.com/watch/2gJgL8a0YGA?version=3
  thumbnail: https://i3.ytimg.com/vi/2gJgL8a0YGA/hqdefault.jpg
  description: Steve Lee from Microsoft discusses the Powershell roadmap, what's new
    in Powershell 7, and the differences it has from Windows Powershell.
  published: 2020-01-31T16:54:01+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: Dude, Where Are My Files? Reverse Engineering Ransomware
  url: https://www.youtube.com/watch/gjCKKLuDoP8?version=3
  thumbnail: https://i4.ytimg.com/vi/gjCKKLuDoP8/hqdefault.jpg
  description: "Presented by: Michael Sikorski\n\nJoin Michael Sikorski, author of
    \"Practical Malware Analysis\", as he introduces you to malware analysis and reverse
    engineering by dissecting Ransomware. Mike will review some of the most famous
    ransomware attacks in recent memory such as WannaCry and Petya. In multiple demonstrations,
    he\u2019ll show exactly how to reverse engineer malware using real-world samples.\n\nMichael
    Sikorski is an expert in reverse engineering and malware analysis. He is the Senior
    Director and Founder of the FireEye Labs Advanced Reverse Engineering (FLARE)
    Team. Mike provides oversight to research projects and manages the analysis process
    used by the team. He created a series of courses in malware analysis and teaches
    them to a variety of audiences including the FBI, NSA, and Black Hat. Mike is
    the co-author of the book \"Practical Malware Analysis,\" which is published by
    No Starch Press. He came to FireEye through its acquisition of Mandiant, where
    he worked for seven years. Prior to Mandiant, he worked for MIT Lincoln Laboratory
    and the National Security Agency. Mike is also an Adjunct Assistant Professor
    at Columbia University's Department of Computer Science."
  published: 2019-12-09T19:17:08+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: Unboxed Types for OCaml
  url: https://www.youtube.com/watch/RV-4Xddk0Yc
  thumbnail: https://i3.ytimg.com/vi/RV-4Xddk0Yc/hqdefault.jpg
  description: "OCaml has a well-deserved reputation for compiling quickly. This is
    thanks in part to its uniform representation: all values have the same memory
    layout, so generic code does not need to be specialized and recompiled for each
    use.\n\nThis uniformity has a downside: some programs waste a lot of time converting
    back and forth to this uniform representation.\n\nIn this talk, I\u2019ll describe
    some work-in-progress to remove this overhead, by extending OCaml\u2019s type
    system to allow other memory layouts, giving the programmer more fine-grained
    control over how code is compiled.  \n\nStephen is a programming languages researcher
    and OCaml core developer on Jane Street's Tools and Compilers team. Prior to that,
    he worked at OCaml Labs, did a PhD on subtyping, and wrote jq. His hobbies include
    hiking, cooking, and writing about himself in the third person."
  published: 2019-10-24T13:10:48+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: Unboxed Types for OCaml
  url: https://www.youtube.com/watch/RV-4Xddk0Yc?version=3
  thumbnail: https://i3.ytimg.com/vi/RV-4Xddk0Yc/hqdefault.jpg
  description: "OCaml has a well-deserved reputation for compiling quickly. This is
    thanks in part to its uniform representation: all values have the same memory
    layout, so generic code does not need to be specialized and recompiled for each
    use.\n\nThis uniformity has a downside: some programs waste a lot of time converting
    back and forth to this uniform representation.\n\nIn this talk, I\u2019ll describe
    some work-in-progress to remove this overhead, by extending OCaml\u2019s type
    system to allow other memory layouts, giving the programmer more fine-grained
    control over how code is compiled.  \n\nStephen is a programming languages researcher
    and OCaml core developer on Jane Street's Tools and Compilers team. Prior to that,
    he worked at OCaml Labs, did a PhD on subtyping, and wrote jq. His hobbies include
    hiking, cooking, and writing about himself in the third person."
  published: 2019-10-24T13:10:48+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: Playing Atari Games in OCaml
  url: https://www.youtube.com/watch/QDXfKXi_Q_A
  thumbnail: https://i2.ytimg.com/vi/QDXfKXi_Q_A/hqdefault.jpg
  description: 'At Jane Street, we enjoy using OCaml for lots of different things,
    from FPGA designs to web development. When it comes to Machine Learning, Python
    is one of the most commonly used languages. Machine learning frameworks such as
    TensorFlow or PyTorch wrap some highly efficient C++ and GPU implementations of
    tensor operations in easy to use Python apis. These frameworks also provide automatic
    differentiation functionalities which are commonly used to train deep learning
    models.


    In this talk we see how we can leverage TensorFlow or PyTorch directly from OCaml
    so that we can use our favorite programming language to build deep learning models
    and train them on GPUs. We will consider the Reinforcement Learning setting where
    an agent is trained to play Atari video games such as Space Invaders or Breakout.
    Our agents will be based on the Deep Q-Learning approach introduced in 2014.



    Laurent Mazare

    Laurent first joined Jane Street as a developer in the London office back in 2013
    working on trading systems. After a short stint at DeepMind in 2017/2018, he is
    now back at Jane Street as a researcher working on the equities desk in London.
    Laurent holds a PhD in theoretical computer science from Institut National Polytechnique
    de Grenoble.'
  published: 2019-08-13T18:00:45+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: Playing Atari Games in OCaml
  url: https://www.youtube.com/watch/QDXfKXi_Q_A?version=3
  thumbnail: https://i2.ytimg.com/vi/QDXfKXi_Q_A/hqdefault.jpg
  description: 'At Jane Street, we enjoy using OCaml for lots of different things,
    from FPGA designs to web development. When it comes to Machine Learning, Python
    is one of the most commonly used languages. Machine learning frameworks such as
    TensorFlow or PyTorch wrap some highly efficient C++ and GPU implementations of
    tensor operations in easy to use Python apis. These frameworks also provide automatic
    differentiation functionalities which are commonly used to train deep learning
    models.


    In this talk we see how we can leverage TensorFlow or PyTorch directly from OCaml
    so that we can use our favorite programming language to build deep learning models
    and train them on GPUs. We will consider the Reinforcement Learning setting where
    an agent is trained to play Atari video games such as Space Invaders or Breakout.
    Our agents will be based on the Deep Q-Learning approach introduced in 2014.



    Laurent Mazare

    Laurent first joined Jane Street as a developer in the London office back in 2013
    working on trading systems. After a short stint at DeepMind in 2017/2018, he is
    now back at Jane Street as a researcher working on the equities desk in London.
    Laurent holds a PhD in theoretical computer science from Institut National Polytechnique
    de Grenoble.'
  published: 2019-08-13T18:00:45+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: '13 Years in a Shell: Lessons, Practices, and Achievements in PowerShell'
  url: https://www.youtube.com/watch/_RbsYJxONww?version=3
  thumbnail: https://i4.ytimg.com/vi/_RbsYJxONww/hqdefault.jpg
  description: "Do something for long enough and you\u2019re bound to make a lot of
    the mistakes that can be made. If you can learn from those, and share them with
    others, then you\u2019re on the right path. So that\u2019s what this session is
    about: the technical best practices and lessons Don\u2019s learned in 13 years
    of working with PowerShell, his observations on making DevOps \u201Cactually work\u201D
    in business environments, and his own personal life lessons and career achievements
    that have come along the way. You\u2019ll learn the write way to design a PowerShell
    advanced function, what a truly functional DevOps team actually looks like, and
    the biggest \u201Cunlocks\u201D Don\u2019s cobbled together in over two decades
    in the IT industry. In-person attendees will also get a free collection of Don\u2019s
    most popular ebooks.\n\n\u2014\n\nDon Jones is the co-founder of The DevOps Collective,
    which runs PowerShell.org, PowerShell + DevOps Global Summit, and provides technology
    education funding to underprivileged and underrepresented individuals throughout
    the US. Don has been a Microsoft MVP Award recipient for 15 years, and has worked
    with PowerShell since before its launch in 2006. PowerShell\u2019s inventor, Jeffrey
    Snover, named Don the \u201CFirst Follower\u201D of PowerShell. Today, Don is
    a Vice President in the Content organization at Pluralsight, the technology skills
    platform. Over his 25-year career, Don has authored literally dozens of IT books,
    including the first-published book on PowerShell and the bestselling Learn Windows
    PowerShell in a Month of Lunches. Don\u2019s current projects include fiction
    and other genre novels, and can be found at http://leanpub.com/u/donjones. Don
    also posts regularly to his site, DonJones.com, and holds occasional workshops
    around Be the Master, his book on achieving success and helping others do the
    same (BeTheMaster.com)."
  published: 2019-06-27T19:50:17+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: 'Safe at Any Speed: Building a Performant, Safe, Maintainable Packet Processor'
  url: https://www.youtube.com/watch/BysBMdx9w6k?version=3
  thumbnail: https://i3.ytimg.com/vi/BysBMdx9w6k/hqdefault.jpg
  description: "Presented by: Sebastian Funk\n\nAt Jane Street, we\u2019ve been building
    systems to trade electronically for over a decade. As technology advances and
    the scale of the markets grows, we need our systems to be able to process ever
    growing amounts of data in ever shorter time windows.\n\nIn this talk, we explore
    how to build a highly optimized single-core packet processing system that is capable
    of processing millions of messages per second. We see how to bridge the gap between
    the high-level abstractions we\u2019ve come to love when structuring code, and
    efficient machine-level execution necessary to process messages at line-rate."
  published: 2019-05-08T19:56:09+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: A Language-Oriented System Design
  url: https://www.youtube.com/watch/5ZjmjdErEC0?version=3
  thumbnail: https://i2.ytimg.com/vi/5ZjmjdErEC0/hqdefault.jpg
  description: 'This talk explores the design of Ontology, a permissions management
    service developed at Jane Street. The design of the system is language-oriented
    in two different ways:


    Internally, the state of the system is represented as a sequence of declarations
    in a dependently-typed language lifted straight out of type theory. This language
    is the unifying principle behind a deductive database, its query language, and
    the representation of requested state changes that together form the core of the
    system.


    Externally, in the user interface for the system, the internal language is hidden
    everywhere, having been rendered in natural language (English). Because of this
    rendering strategy, key elements of the user interface are at once structure-editors
    for the internal language as well as natural language forms that allow even technically
    unsophisticated users to construct permissions requests and queries.


    Presented by: Nathan Linger

    Nathan has been a developer at Jane Street since 2008, working on a variety of
    software projects. He holds a PhD in Computer Science from Portland State University.'
  published: 2019-03-08T23:00:40+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: Abstractions for Expressive, Efficient Parallel and Distributed Computing
  url: https://www.youtube.com/watch/4h7YBUXiCZE?version=3
  thumbnail: https://i1.ytimg.com/vi/4h7YBUXiCZE/hqdefault.jpg
  description: 'Presented by: Lindsey Kuper

    Parallel and distributed systems are notoriously difficult to build correctly
    or efficiently. In parallel systems, the manipulation of shared state can cause
    unintended behavior in the presence of unpredictable task scheduling, while in
    distributed systems, the manipulation of replicated state can cause unintended
    behavior in the presence of an unreliable network. Meanwhile, decades of research
    have not yet produced a general solution to the problem of automatic program parallelization.


    In this talk, I discuss how my research addresses these challenges from both theoretical
    and applied points of view. My work on lattice-based data structures, or LVars,
    proposes new foundations for expressive deterministic-by-construction parallel
    and distributed programming models. My work on non-invasive domain-specific languages
    for parallelism gives programmers language-based tools for safe, deterministic
    parallelization. The guiding principle and goal of both of these lines of work
    is to find the right high-level abstractions to express computation in a way that
    not only does not compromise efficiency, but actually enables it. I conclude by
    discussing the role that this principle of finding the right efficiency-enabling
    abstractions can play in my ongoing investigation into SMT-based verification
    of neural networks.



    Lindsey Kuper

    Lindsey Kuper (https://users.soe.ucsc.edu/~lkuper/) is an Assistant Professor
    of Computer Science and Engineering at the University of California, Santa Cruz,
    where she works on language-based approaches to building software systems that
    are correct and efficient. She holds a Ph.D. in computer science from Indiana
    University and a BA in computer science and music from Grinnell College. Prior
    to joining UC Santa Cruz, she was a Research Scientist in the Parallel Computing
    Lab at Intel Labs. During her Ph.D. years, she contributed to the Rust programming
    language at Mozilla Research, served several residencies at the Recurse Center,
    and co-founded !!Con (http://bangbangcon.com), the annual conference of ten-minute
    talks about the joy, excitement, and surprise of computing.'
  published: 2019-02-11T16:51:52+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: Jane and the Compiler
  url: https://www.youtube.com/watch/gXdMFxGdako
  thumbnail: https://i4.ytimg.com/vi/gXdMFxGdako/hqdefault.jpg
  description: "Most of the time, our relationship to programming languages is somewhat
    remote; we depend on the arcane details of the languages we use, but we don\u2019t
    usually have much of a say in how those languages evolve.\n\nAt Jane Street, we
    started out in that mode, as a mere user of the language. But over the last 15
    years, we\u2019ve moved to a more active stance, where today, we have a team of
    compiler devs who actively contribute to OCaml, and where we\u2019re more deeply
    involved in figuring out the future direction of the language.\n\nIn this talk,
    we discuss that history, touching on how upstream changes impacted us along the
    way, how we came to start making changes ourselves, and what ongoing projects
    we\u2019re excited about.\n\nPresented by Yaron Minsky\n\nYaron Minsky joined
    Jane Street back in 2002, and claims the dubious honor of having convinced the
    firm to start using OCaml. He also spends way too much time teaching his kids
    how to program."
  published: 2018-12-07T19:52:27+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: Jane and the Compiler
  url: https://www.youtube.com/watch/gXdMFxGdako?version=3
  thumbnail: https://i4.ytimg.com/vi/gXdMFxGdako/hqdefault.jpg
  description: "Most of the time, our relationship to programming languages is somewhat
    remote; we depend on the arcane details of the languages we use, but we don\u2019t
    usually have much of a say in how those languages evolve.\n\nAt Jane Street, we
    started out in that mode, as a mere user of the language. But over the last 15
    years, we\u2019ve moved to a more active stance, where today, we have a team of
    compiler devs who actively contribute to OCaml, and where we\u2019re more deeply
    involved in figuring out the future direction of the language.\n\nIn this talk,
    we discuss that history, touching on how upstream changes impacted us along the
    way, how we came to start making changes ourselves, and what ongoing projects
    we\u2019re excited about.\n\nPresented by Yaron Minsky\n\nYaron Minsky joined
    Jane Street back in 2002, and claims the dubious honor of having convinced the
    firm to start using OCaml. He also spends way too much time teaching his kids
    how to program."
  published: 2018-12-07T19:52:27+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: OCaml All The Way Down
  url: https://www.youtube.com/watch/X1cgRXhpQLY
  thumbnail: https://i1.ytimg.com/vi/X1cgRXhpQLY/hqdefault.jpg
  description: "Did you know that Jane Street uses OCaml for, like, everything? \n\nDid
    you also know that Jane Street builds FPGA designs? \n\nA problem? \n\nCome and
    find out how we design and test our FPGAs. We'll have some fun (or terrible disasters)
    with some demos on the Arty A7 hobbyist FPGA board, with the design expressed
    using HardCaml, an OCaml library for creating hardware designs, and driven by
    an embedded software stack written in OCaml and using ports of your favorite Jane
    Street libraries. \n\nI'll round up with some thoughts on the pros and cons of
    writing hardware in OCaml, and talk about some ideas we would like to explore
    to make the process more productive in the future.\n\n \nPresented by: Andy Ray\nAndy
    has been designing IP cores for nearly 20 years mainly in the areas of networking
    and video coding. Frustration with standard RTL development processes led him
    to develop the HardCaml suite of hardware design tools in OCaml. Then one day
    while down at the pub he got an email from Jane Street wondering about some sort
    of collaboration, and the rest is history."
  published: 2018-05-10T14:01:12+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
- title: OCaml All The Way Down
  url: https://www.youtube.com/watch/X1cgRXhpQLY?version=3
  thumbnail: https://i1.ytimg.com/vi/X1cgRXhpQLY/hqdefault.jpg
  description: "Did you know that Jane Street uses OCaml for, like, everything? \n\nDid
    you also know that Jane Street builds FPGA designs? \n\nA problem? \n\nCome and
    find out how we design and test our FPGAs. We'll have some fun (or terrible disasters)
    with some demos on the Arty A7 hobbyist FPGA board, with the design expressed
    using HardCaml, an OCaml library for creating hardware designs, and driven by
    an embedded software stack written in OCaml and using ports of your favorite Jane
    Street libraries. \n\nI'll round up with some thoughts on the pros and cons of
    writing hardware in OCaml, and talk about some ideas we would like to explore
    to make the process more productive in the future.\n\n \nPresented by: Andy Ray\nAndy
    has been designing IP cores for nearly 20 years mainly in the areas of networking
    and video coding. Frustration with standard RTL development processes led him
    to develop the HardCaml suite of hardware design tools in OCaml. Then one day
    while down at the pub he got an email from Jane Street wondering about some sort
    of collaboration, and the rest is history."
  published: 2018-05-10T14:01:12+00:00
  author_name: Jane Street
  author_uri: https://www.youtube.com/channel/UCDsVC_ewpcEW_AQcO-H-RDQ
  source_link: https://www.youtube.com/feeds/videos.xml?playlist_id=PLCiAikFFaMJoWyXnJ2BWpse5HuiYibNYs
  source_title: Jane Street - Tech Talks
